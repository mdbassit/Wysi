{"version":3,"file":"wysi.min.js","sources":["../src/settings.js","../src/common.js","../src/shortcuts.js","../src/toolset.js","../src/utils.js","../src/listbox.js","../src/popover.js","../src/toolbar.js","../src/filter.js","../src/core.js"],"sourcesContent":["// Default settings\nexport default {\n\n  // Default selector\n  el: '[data-wysi], .wysi-field',\n\n  // Default tools in the toolbar\n  tools: [\n    'format', '|', 'bold', 'italic', '|', \n    {\n      label: 'Text alignment',\n      items: ['alignLeft', 'alignCenter', 'alignRight', 'alignJustify']\n    }, '|',\n    'ul', 'ol', '|', 'indent', 'outdent', '|', 'link', 'image'\n  ],\n\n  // Enable dark mode (toolbar only)\n  darkMode: false,\n\n  // Height of the editable region\n  height: 200,\n\n  // Grow the editable region's height to fit its content\n  autoGrow: false,\n\n  // Hide the toolbar when the editable region is out of focus\n  autoHide: false,\n\n  // Default list of allowed tags\n  // These tags are always allowed regardless of the instance options\n  allowedTags: {\n    br: {\n      attributes: [],\n      styles: [],\n      isEmpty: true\n    }\n  },\n\n  // Custom tags to allow when filtering inserted content\n  customTags: [\n    /* Example:\n\n    {\n      tags: ['table', 'thead', 'tbody', 'tr', 'td', 'th'], // Tags to allow\n      attributes: ['id', 'class'], // These attributes will be permitted for all the tags above\n      styles: ['width'],\n      isEmpty: false\n    }\n\n    */\n  ]\n};","// Instances storage\nexport const instances = {};\n\n// The CSS class to use for selected elements\nexport const selectedClass = 'wysi-selected';","import document from 'document';\n\n// Shortcuts\nexport const dispatchEvent = (element, event) => element.dispatchEvent(new Event(event, { bubbles: true }));\nexport const execCommand = (command, value = null) => document.execCommand(command, false, value);\nexport const hasClass = (element, classes) => element.classList && element.classList.contains(classes);","import { execCommand } from './shortcuts.js';\n\n/**\n * Execute a formatBlock command.\n * @param {string} format The block format to apply.\n */\nfunction formatBlock(format) {\n  execCommand('formatBlock', `<${format}>`);\n}\n\n// Supported tools\nexport default {\n  format: {\n    tags: ['p', 'h1', 'h2', 'h3', 'h4'],\n    styles: ['text-align'],\n    label: 'Select block format',\n    paragraph: 'Paragraph',\n    heading: 'Heading',\n    action: (format) => formatBlock(format)\n  },\n  quote: {\n    tags: ['blockquote'],\n    label: 'Quote',\n    action: () => formatBlock('blockquote')\n  },\n  bold: {\n    tags: ['strong'],\n    alias: ['b'],\n    label: 'Bold',\n  },\n  italic: {\n    tags: ['em'],\n    alias: ['i'],\n    label: 'Italic',\n  },\n  underline: {\n    tags: ['u'],\n    label: 'Underline',\n  },\n  strike: {\n    tags: ['s'],\n    alias: ['del', 'strike'],\n    label: 'Strike-through',\n    command: 'strikeThrough'\n  },\n  alignLeft: {\n    label: 'Align left',\n    command: 'justifyLeft'\n  },\n  alignCenter: {\n    label: 'Align center',\n    command: 'justifyCenter'\n  },\n  alignRight: {\n    label: 'Align right',\n    command: 'justifyRight'\n  },\n  alignJustify: {\n    label: 'Justify',\n    command: 'justifyFull'\n  },\n  ul: {\n    tags: ['ul'],\n    extraTags: ['li'],\n    styles: ['text-align'],\n    label: 'Bulleted list',\n    command: 'insertUnorderedList'\n  },\n  ol: {\n    tags: ['ol'],\n    extraTags: ['li'],\n    styles: ['text-align'],\n    label: 'Numbered list',\n    command: 'insertOrderedList'\n  },\n  indent: {\n    label: 'Increase indent',\n  },\n  outdent: {\n    label: 'Decrease indent',\n  },\n  link: {\n    tags: ['a'],\n    attributes: [/*'id', 'name', */'href', /*'target', 'onclick'*/],\n    attributeLabels: ['URL'],\n    hasForm: true,\n    label: 'Link',\n    action: (url) => execCommand('createLink', url)\n  },\n  image: {\n    tags: ['img'],\n    attributes: ['src', 'alt'/*, 'title'*/],\n    attributeLabels: ['URL', 'Alternative text'],\n    isEmpty: true,\n    hasForm: true,\n    label: 'Image',\n    action: (url, text = '', original) => {\n      const image = `<img src=\"${url}\" alt=\"${text}\" class=\"wysi-selected\">`;\n      const html = original ? original.replace(/<img[^>]+>/i, image) : image;\n      execCommand('insertHTML', html);\n    }\n  },\n  hr: {\n    tags: ['hr'],\n    isEmpty: true,\n    label: 'Horizontal line',\n    command: 'insertHorizontalRule'\n  },\n  removeFormat: {\n    label: 'Remove format'\n  },\n  unlink: {\n    label: 'Remove link'\n  }\n};","import document from 'document';\nimport toolset from './toolset.js';\nimport {\n  execCommand,\n  hasClass\n} from './shortcuts.js';\n\n// Used to store the current DOM selection for later use\nlet currentSelection;\n\n// Polyfill for Nodelist.forEach\nif (NodeList !== undefined && NodeList.prototype && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = Array.prototype.forEach;\n}\n\n/**\n * Shortcut for addEventListener to optimize the minified JS.\n * @param {object} context The context to which the listener is attached.\n * @param {string} type Event type.\n * @param {(string|function)} selector Event target if delegation is used, event handler if not.\n * @param {function} [fn] Event handler if delegation is used.\n */\nexport function addListener(context, type, selector, fn) {\n  // Delegate event to the target of the selector\n  if (typeof selector === 'string') {\n    context.addEventListener(type, event => {\n      const target = event.target;\n\n      if (target.matches(selector)) {\n        fn.call(target, event);\n      }\n    });\n\n  // If the selector is not a string then it's a function\n  // in which case we need a regular event listener\n  } else {\n    fn = selector;\n    context.addEventListener(type, fn);\n  }\n}\n\n/**\n * Build an html fragment from a string.\n * @param {string} html The HTML code.\n * @return {object} A document fragment.\n */\nexport function buildFragment(html) {\n  const template = createElement('template');\n\n  template.innerHTML = html.trim();\n  return template.content;\n}\n\n/**\n * Deep clone an object.\n * @param {object} obj The object to clone.\n * @return {object} The clone object.\n */\nexport function cloneObject(obj) {\n  return obj ? JSON.parse(JSON.stringify(obj)) : obj;\n}\n\n/**\n * Create an element and optionally set its attributes.\n * @param {string} tag The HTML tag of the new element.\n * @param {object} [attributes] The element's attributes.\n * @return {object} An HTML element.\n */\nexport function createElement(tag, attributes) {\n  const element = document.createElement(tag);\n\n  if (attributes) {\n    for (const attributeName in attributes) {\n      // Attribute names starting with underscore are actually properties\n      if (attributeName[0] === '_') {\n        element[attributeName.substring(1)] = attributes[attributeName];\n      } else {\n        element.setAttribute(attributeName, attributes[attributeName]);\n      }\n    }\n  }\n\n  return element;\n}\n\n/**\n * Call a function only when the DOM is ready.\n * @param {function} fn The function to call.\n * @param {array} [args] Arguments to pass to the function.\n */\nexport function DOMReady(fn, args) {\n  args = args !== undefined ? args : [];\n\n  if (document.readyState !== 'loading') {\n    fn(...args);\n  } else {\n    addListener(document, 'DOMContentLoaded', () => {\n      fn(...args);\n    });\n  }\n}\n\n/**\n * Execute an action.\n * @param {string} action The action to execute.\n * @param {object} editor The editor instance.\n * @param {array} [options] Optional action parameters.\n */\nexport function execAction(action, editor, options = []) {\n  const tool = toolset[action];\n  \n  if (tool) {\n    const command = tool.command || action;\n    const realAction = tool.action || (() => execCommand(command));\n\n    // Restore selection if any\n    restoreSelection();\n\n    // Execute the tool's action\n    realAction(...options);\n\n    // Focus the editor instance\n    editor.focus();\n  }\n}\n\n/**\n * Find the current editor instance.\n * @param {object} currentNode The possible child node of the editor instance.\n * @return {object} The instance's editable region and toolbar, and an array of nodes that lead to it.\n */\nexport function findInstance(currentNode) {\n  const nodes = [];\n  let ancestor, toolbar, editor;\n\n  // Find all HTML tags between the current node and the editable ancestor\n  while (currentNode && currentNode !== document.body) {\n    const tag = currentNode.tagName;\n\n    if (tag) {\n      if (hasClass(currentNode, 'wysi-wrapper')) {\n        // Editable ancestor found\n        ancestor = currentNode;\n        break;\n      } else {\n        nodes.push(currentNode);\n      }\n    }\n\n    currentNode = currentNode.parentNode;\n  }\n\n  if (ancestor) {\n    const children = ancestor.children;\n\n    toolbar = children[0];\n    editor = children[1];\n  }\n\n  return { toolbar, editor, nodes };\n}\n\n/**\n * Get an editor's instance id.\n * @param {object} editor The editor element.\n * @return {string} The instance id.\n */ \nexport function getInstanceId(editor) {\n  return editor.getAttribute('data-wid');\n}\n\n/**\n * Try to guess the textarea element's label if any.\n * @param {object} textarea The textarea element.\n * @return {string} The textarea element's label or an empty string.\n */ \nexport function getTextAreaLabel(textarea) {\n  const parent = textarea.parentNode;\n  const id = textarea.id;\n  let labelElement;\n\n  // If the textarea element is inside a label element\n  if (parent.nodeName === 'LABEL') {\n    labelElement = parent;\n\n  // Or if the textarea element has an id, and there is a label element\n  // with an attribute \"for\" that points to that id\n  } else if (id !== undefined) {\n    labelElement = document.querySelector(`label[for=\"${id}\"]`);\n  }\n\n  // If a label element is found, return the first non empty child text node\n  if (labelElement) {\n    const textNodes = [].filter.call(labelElement.childNodes, n => n.nodeType === 3);\n    const texts = textNodes.map(n => n.textContent.replace(/\\s+/g, ' ').trim());\n    const label = texts.filter(l => l !== '')[0];\n\n    if (label) {\n      return label;\n    }\n  }\n\n  return '';\n}\n\n/**\n * Restore a previous selection if any.\n */\nexport function restoreSelection() {\n  if (currentSelection) {\n    setSelection(currentSelection);\n    currentSelection = undefined;\n  }\n}\n\n/**\n * Set the value of the current selection.\n * @param {object} range The range to set.\n */\nexport function setCurrentSelection(range) {\n  currentSelection = range;\n}\n\n/**\n * Set the selection to a range.\n * @param {object} range The range to select.\n */\nexport function setSelection(range) {\n  const selection = document.getSelection();\n\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n\n/**\n * Set the expanded state of a button.\n * @param {object} button The button.\n * @param {boolean} expanded The expanded state.\n */\nexport function toggleButton(button, expanded) {\n  button.setAttribute('aria-expanded', expanded);\n}","import document from 'document';\nimport toolset from './toolset.js';\nimport { instances } from './common.js';\nimport {\n  addListener,\n  createElement,\n  execAction,\n  findInstance,\n  toggleButton\n} from './utils.js';\n\n\n/**\n * Render a list box.\n * @param {object} details The list box properties and data.\n * @return {object} A DOM element containing the list box.\n */\nfunction renderListBox(details) {\n  const label = details.label;\n  const items = details.items;\n  const firstItem = items[0];\n  const classes = ['wysi-listbox'].concat(details.classes || []);\n\n  // List box wrapper\n  const listBox = createElement('div', { class: classes.join(' ') });\n\n  // List box button\n  const button = createElement('button', {\n    type: 'button',\n    title: label,\n    'aria-label': `${label} ${firstItem.label}`,\n    'aria-haspopup': 'listbox',\n    'aria-expanded': false,\n    _innerHTML: renderListBoxItem(firstItem)\n  });\n\n  // List box menu\n  const menu = createElement('div', {\n    role: 'listbox',\n    tabindex: -1,\n    'aria-label': label\n  });\n\n  // List box items\n  items.forEach(item => {\n    const option = createElement('button', {\n      type: 'button',\n      role: 'option',\n      tabindex: -1,\n      'aria-label': item.label,\n      'aria-selected': false,\n      'data-action': item.action,\n      'data-option': item.name || '',\n      _innerHTML: renderListBoxItem(item)\n    });\n\n    menu.appendChild(option);\n  });\n\n  // Tie it all together\n  listBox.appendChild(button);\n  listBox.appendChild(menu);\n\n  return listBox;\n}\n\n/**\n * Render a list box item.\n * @param {object} item The list box item.\n * @return {string} The list box item's content.\n */\nfunction renderListBoxItem(item) {\n  return item.icon ? `<svg><use href=\"#wysi-${item.icon}\"></use></svg>` : item.label;\n}\n\n/**\n * Open a list box.\n * @param {object} button The list box's button.\n */\nfunction openListBox(button) {\n  const isOpen = button.getAttribute('aria-expanded') === 'true';\n  const listBox = button.nextElementSibling;\n  let selectedItem = listBox.querySelector('[aria-selected=\"true\"]');\n\n  if (!selectedItem) {\n    selectedItem = listBox.firstElementChild;\n  }\n\n  toggleButton(button, !isOpen);\n  selectedItem.focus();\n}\n\n/**\n * Select a list box item.\n * @param {object} item The list box item.\n */\nfunction selectListBoxItem(item) {\n  const listBox = item.parentNode;\n  const button = listBox.previousElementSibling;\n  const selectedItem = listBox.querySelector('[aria-selected=\"true\"]');\n\n  if (selectedItem) {\n    selectedItem.setAttribute('aria-selected', 'false');\n  }\n\n  item.setAttribute('aria-selected', 'true');\n  button.innerHTML = item.innerHTML;\n}\n\n/**\n * Close the currently open list box if any.\n */\nfunction closeListBox() {\n  const activeListBox = document.querySelector('.wysi-listbox [aria-expanded=\"true\"]');\n\n  if (activeListBox) {\n    toggleButton(activeListBox, false);\n  }\n}\n\n// list box button click\naddListener(document, 'click', '.wysi-listbox > button', event => {\n  closeListBox();\n  openListBox(event.target);\n  event.stopImmediatePropagation();\n});\n\n// On key press on the list box button\naddListener(document, 'keydown', '.wysi-listbox > button', event => {\n  switch (event.key) {\n    case 'ArrowUp':\n    case 'ArrowDown':\n    case 'Enter':\n    case ' ':\n      openListBox(event.target);\n      event.preventDefault();\n      break;\n  }\n});\n\n// When the mouse moves on a list box item, focus it\naddListener(document.documentElement, 'mousemove', '.wysi-listbox > div > button', event => {\n  event.target.focus();\n});\n\n// On click on an list box item\naddListener(document, 'click', '.wysi-listbox > div > button', event => {\n  const item = event.target;\n  const action = item.getAttribute('data-action');\n  const option = item.getAttribute('data-option');\n  const { editor } = findInstance(item);\n  const selection = document.getSelection();\n\n  if (selection && editor.contains(selection.anchorNode)) {\n    execAction(action, editor, [option]);\n  }\n\n  selectListBoxItem(item);\n});\n\n// On key press on an item\naddListener(document, 'keydown', '.wysi-listbox > div > button', event => {\n  const item = event.target;\n  const listBox = item.parentNode;\n  const button = listBox.previousElementSibling;\n  let preventDefault = true;\n\n  switch (event.key) {\n    case 'ArrowUp':\n      const prev = item.previousElementSibling;\n\n      if (prev) {\n        prev.focus();\n      }\n\n      break;\n    case 'ArrowDown':\n      const next = item.nextElementSibling;\n\n      if (next) {\n        next.focus();\n      }\n\n      break;\n    case 'Home':\n      listBox.firstElementChild.focus();\n      break;\n    case 'End':\n      listBox.lastElementChild.focus();\n      break;\n    case 'Tab':\n      item.click();\n      break;\n    case 'Escape':\n      toggleButton(button, false);\n      break;\n    default:\n      preventDefault = false;\n  }\n\n  if (preventDefault) {\n    event.preventDefault();\n  }\n});\n\n// Close open popups and dropdowns on click outside\naddListener(document, 'click', event => {\n  closeListBox();\n});\n\nexport { renderListBox, selectListBoxItem };","import document from 'document';\nimport toolset from './toolset.js';\nimport { renderListBox, selectListBoxItem } from './listbox.js';\nimport { selectedClass } from './common.js';\nimport {\n  addListener,\n  createElement,\n  execAction,\n  findInstance,\n  restoreSelection,\n  setCurrentSelection,\n  toggleButton\n} from './utils.js';\n\n/**\n * Render a popover form to set a tool's parameters.\n * @param {string} toolName The tool name.\n * @param {object} button The tool's toolbar button.\n * @param {object} translations The labels translation object.\n * @return {object} A DOM element containing the button and the popover.\n */\nfunction renderPopover(toolName, button, translations) {\n  const tool = toolset[toolName];\n  const labels = tool.attributeLabels;\n  const fields = tool.attributes.map((attribute, i) => {\n    return {\n      name: attribute,\n      label: translations[attribute] || labels[i],\n    }\n  });\n\n  // Popover wrapper\n  const wrapper = createElement('div', {\n    class: 'wysi-popover'\n  });\n\n  // Popover\n  const popover = createElement('div', {\n    tabindex: -1,\n  });\n\n  // Toolbar Button\n  button.setAttribute('aria-haspopup', true);\n  button.setAttribute('aria-expanded', false);\n\n  wrapper.appendChild(button);\n  wrapper.appendChild(popover);\n\n  fields.forEach(field => {\n    const label = createElement('label');\n    const span = createElement('span', { _textContent: field.label });\n    const input = createElement('input', { type: 'text' });\n\n    label.appendChild(span);\n    label.appendChild(input);\n    popover.appendChild(label);\n  });\n\n  const cancel = createElement('button', {\n    type: 'button',\n    _textContent: translations.cancel || 'Cancel'\n  });\n\n  const save = createElement('button', {\n    type: 'button',\n    'data-action': toolName,\n    _textContent: translations.save || 'Save'\n  });\n\n  // The link popover needs an extra \"Remove link\" button\n  if (toolName === 'link') {\n    const extraTool = 'unlink';\n    const label = translations[extraTool] || toolset[extraTool].label;\n\n    popover.appendChild(createElement('button', {\n      type: 'button',\n      title: label,\n      'aria-label': label,\n      'data-action': extraTool,\n      _innerHTML: `<svg><use href=\"#wysi-delete\"></use></svg>`\n    }));\n  }\n\n  popover.appendChild(cancel);\n  popover.appendChild(save);\n\n  return wrapper;\n}\n\n/**\n * Open a popover.\n * @param {object} button The popover's button.\n */\nfunction openPopover(button) {\n  const inputs = button.nextElementSibling.querySelectorAll('input');\n  const selection = document.getSelection();\n  const anchorNode = selection.anchorNode;\n  const { editor, nodes } = findInstance(anchorNode);\n  const values = [];\n\n  if (editor) {\n    // Try to find an existing target of the popover's action from the DOM selection\n    const action = button.getAttribute('data-action');\n    const tool = toolset[action];\n    let target = nodes.filter(node => tool.tags.includes(node.tagName.toLowerCase()))[0];\n    let selectContents = true;\n\n    // If that fails, look for an element with the selection CSS class\n    if (!target) {\n      target = editor.querySelector(`.${selectedClass}`);\n      selectContents = false;\n    }\n\n    // If an existing target is found, we will be in modification mode\n    if (target) {\n      const range = document.createRange();\n      \n      // Add the target to a selection range\n      // Depending on the type of the target, select the whole node or just its contents\n      if (selectContents) {\n        range.selectNodeContents(target);\n      } else {\n        range.selectNode(target);\n      }\n\n      // Save the current selection for later use\n      setCurrentSelection(range);\n\n      // Retrieve the current attribute values of the target for modification\n      tool.attributes.forEach(attribute => {\n        values.push(target.getAttribute(attribute));\n      })\n\n    // If no existing target is found, we are adding new content\n    } else if (selection && editor.contains(anchorNode) && selection.rangeCount) {\n      // Save the current selection to keep track of where to insert the content\n      setCurrentSelection(selection.getRangeAt(0));\n    }\n  }\n\n  // Populate the form fields with the existing values if any\n  inputs.forEach((input, i) => {\n    input.value = values[i] || '';\n  });\n\n  // Open this popover\n  toggleButton(button, true);\n\n  // Focus the first input field\n  inputs[0].focus();\n}\n\n/**\n * Execute a popover's action.\n * @param {object} button The popover's action button.\n */\nfunction execPopoverAction(button) {\n  const action = button.getAttribute('data-action');\n  const inputs = button.parentNode.querySelectorAll('input');\n  const { editor } = findInstance(button);\n  const options = [];\n\n  inputs.forEach(input => {\n    options.push(input.value);\n  });\n\n  // Workaround for links being removed when updating images\n  if (action === 'image') {\n    const selected = editor.querySelector(`.${selectedClass}`);\n    const parent = selected ? selected.parentNode : {};\n\n    if (selected && parent.tagName === 'A') {\n      options.push(parent.outerHTML);\n    }\n  }\n\n  execAction(action, editor, options);\n}\n\n/**\n * Close the open popover if any.\n * @param {boolean} ignoreSelection If true, do not restore the previous selection.\n */\nfunction closePopover(ignoreSelection) {\n  const popover = document.querySelector('.wysi-popover [aria-expanded=\"true\"]');\n\n  if (popover) {\n    toggleButton(popover, false);\n  }\n\n  if (!ignoreSelection) {\n    restoreSelection();\n  }\n}\n\n// Open a popover\naddListener(document, 'click', '.wysi-popover > button', event => {\n  closePopover();\n  openPopover(event.target);\n  event.stopImmediatePropagation();\n});\n\n// Execute the popover action\naddListener(document, 'click', '.wysi-popover > div > button[data-action]', event => {\n  execPopoverAction(event.target);\n  closePopover(true);\n});\n\n// Cancel the popover\naddListener(document, 'click', '.wysi-popover > div > button:not([data-action])', event => {\n  closePopover();\n});\n\n// Prevent clicks on the popover content to propagate (keep popover open)\naddListener(document, 'click', '.wysi-popover *:not(button)', event => {\n  event.stopImmediatePropagation();\n});\n\n// Trap focus inside a popover until it's closed\naddListener(document, 'keydown', '.wysi-popover *', event => {\n  const target = event.target;\n  const parent = target.parentNode;\n  const form = parent.tagName === 'DIV' ? parent : parent.parentNode;\n\n  switch (event.key) {\n    case 'Tab':\n      const firstField = form.querySelector('input');\n\n      if (event.shiftKey) {\n        if (target === firstField) {\n          form.lastElementChild.focus();\n          event.preventDefault();\n        }\n      } else {\n        if (!target.nextElementSibling && !target.parentNode.nextElementSibling) {\n          firstField.focus();\n          event.preventDefault();\n        }\n      }\n      break;\n    case 'Enter':\n      if (target.tagName === 'INPUT') {\n        const actionButton = form.querySelector('[data-action]:last-of-type');\n\n        actionButton.click();\n        event.preventDefault();\n      }\n      break;\n    case 'Escape':\n      closePopover();\n      break;\n  }\n\n});\n\nlet isSelectionInProgress = false;\n\n// Close open popups and dropdowns on click outside\naddListener(document, 'click', event => {\n  if (!isSelectionInProgress) {\n    closePopover();\n  }\n});\n\n// Text selection within a popover is in progress\n// This helps avoid closing a popover when the end of a text selection is outside it\naddListener(document, 'mousedown', '.wysi-popover, .wysi-popover *', event => {\n  isSelectionInProgress = true;\n});\n\n// The text selection ended\naddListener(document, 'mouseup', event => {\n  setTimeout(() => { isSelectionInProgress = false; });\n});\n\nexport { renderPopover };","import document from 'document';\nimport toolset from './toolset.js';\nimport { renderPopover } from './popover.js';\nimport { renderListBox, selectListBoxItem } from './listbox.js';\nimport { instances, selectedClass } from './common.js';\nimport {\n  addListener,\n  buildFragment,\n  createElement,\n  DOMReady,\n  execAction,\n  findInstance,\n  getInstanceId,\n  setSelection\n} from './utils.js';\n\n/**\n * Render the toolbar.\n * @param {array} tools The list of tools in the toolbar.\n * @param {object} translations The labels translation object.\n * @return {string} The toolbars HTML string.\n */\nfunction renderToolbar(tools, translations) {\n  const toolbar = createElement('div', { class: 'wysi-toolbar' });\n\n  // Generate toolbar buttons\n  tools.forEach(toolName => {\n    switch (toolName) {\n      // Toolbar separator\n      case '|':\n        toolbar.appendChild(createElement('div', { class: 'wysi-separator' }));\n        break;\n\n      // Toolbar new line\n      case '-':\n        toolbar.appendChild(createElement('div', { class: 'wysi-newline' }));\n        break;\n\n      // The format tool renders as a list box\n      case 'format':\n        toolbar.appendChild(renderFormatTool(translations));\n        break;\n\n      // All the other tools render as buttons\n      default:\n        if (typeof toolName === 'object') {\n          if (toolName.items) {\n            toolbar.appendChild(renderToolGroup(toolName, translations));\n          }\n        } else {\n          renderTool(toolName, toolbar, translations);\n        }\n    }\n  });\n\n  return toolbar;\n}\n\n/**\n * Render a tool.\n * @param {string} name The tool's name.\n * @param {object} toolbar The toolbar to which the tool will be appended.\n * @param {object} translations The labels translation object.\n */\nfunction renderTool(name, toolbar, translations) {\n  const tool = toolset[name];\n  const label = translations[name] || tool.label;\n  const button = createElement('button', {\n    type: 'button',\n    title: label,\n    'aria-label': label,\n    'aria-pressed': false,\n    'data-action': name,\n    _innerHTML: `<svg><use href=\"#wysi-${name}\"></use></svg>`\n  });\n\n  // Tools that require parameters (e.g: image, link) need a popover\n  if (tool.hasForm) {\n    const popover = renderPopover(name, button, translations);\n    toolbar.appendChild(popover);\n\n  // The other tools only display a button\n  } else {\n    toolbar.appendChild(button);\n  }\n}\n\n/**\n * Render a tool group.\n * @param {object} details The group's properties.\n * @param {object} translations The labels translation object.\n * @return {object} A DOM element containing the tool group.\n */\nfunction renderToolGroup(details, translations) {\n  const label = details.label || translations.select || 'Select an item';\n  const options = details.items;\n\n  const items = options.map(option => {\n    const tool = toolset[option];\n    const label = translations[option] || tool.label;\n    const icon = option;\n    const action = option;\n\n    return { label, icon, action };\n  });\n\n  return renderListBox({ label, items });\n}\n\n/**\n * Render format tool.\n * @param {object} translations The labels translation object.\n * @return {object} A DOM element containing the format tool.\n */\nfunction renderFormatTool(translations) {\n  const label = translations['format'] || toolset.format.label;\n  const paragraphLabel = translations['paragraph'] || toolset.format.paragraph;\n  const headingLabel = translations['heading'] || toolset.format.heading;\n  const classes = 'wysi-format';\n  const items = toolset.format.tags.map(tag => { \n    const name = tag;\n    const label = tag === 'p' ? paragraphLabel : `${headingLabel} ${tag.substring(1)}`;\n    const action = 'format';\n\n    return { name, label, action };\n  });\n\n  return renderListBox({ label, items, classes });\n}\n\n/**\n * Update toolbar buttons state.\n */\nfunction updateToolbarState() {\n  const { toolbar, editor, nodes } = findInstance(document.getSelection().anchorNode);\n  const tags = nodes.map(node => node.tagName.toLowerCase());\n\n  // Abort if the selection is not within an editor instance\n  if (!editor) {\n    return;\n  }\n\n  // Get the list of allowed tags in the current editor instance\n  const instanceId = getInstanceId(editor);\n  const allowedTags = instances[instanceId].allowedTags;\n\n  // Reset the state of all buttons\n  toolbar.querySelectorAll('[aria-pressed=\"true\"]').forEach(button => button.setAttribute('aria-pressed', 'false'));\n\n  // Reset the state of all list boxes\n  toolbar.querySelectorAll('.wysi-listbox > div > button:first-of-type').forEach(button => selectListBoxItem(button));\n  \n\n  // Update the buttons states\n  tags.forEach((tag, i) => {\n    switch (tag) {\n      case 'p':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'li':\n        const format = toolbar.querySelector(`[data-action=\"format\"][data-option=\"${tag}\"]`);\n        const textAlign = nodes[i].style.textAlign;\n\n        if (format) {\n          selectListBoxItem(format);\n        }\n\n        // Check for text align\n        if (textAlign) {\n          const action = 'align' + textAlign.charAt(0).toUpperCase() + textAlign.slice(1);\n          const button = toolbar.querySelector(`[data-action=\"${action}\"]`);\n          \n          if (button) {\n            if (button.parentNode.getAttribute('role') === 'listbox') {\n              selectListBoxItem(button);\n            } else {\n              button.setAttribute('aria-pressed', 'true');\n            }\n          }\n        }\n        break;\n      default:\n        const allowedTag = allowedTags[tag];\n        const action = allowedTag ? allowedTag.toolName : undefined;\n\n        if (action) {\n          const button = toolbar.querySelector(`[data-action=\"${action}\"]`);\n          button.setAttribute('aria-pressed', 'true');\n        }\n    }    \n  });\n}\n\n/**\n * Embed SVG icons in the HTML document.\n */\nfunction embedSVGIcons() {\n  // The icons will be included during the build process\n  const icons = '_SVGIcons_';\n  const svgElement = buildFragment(icons);\n\n  document.body.appendChild(svgElement);\n}\n\n// Deselect selected element when clicking outside\naddListener(document, 'click', '.wysi-editor, .wysi-editor *', event => {\n  const selected = document.querySelector(`.${selectedClass}`);\n\n  if (selected && selected !== event.target) {\n    selected.classList.remove(selectedClass);\n  }\n});\n\n// Select an image when it's clicked\naddListener(document, 'click', '.wysi-editor img', event => {\n  const image = event.target;\n  const range = document.createRange();\n\n  image.classList.add(selectedClass);\n\n  range.selectNode(image);\n  setSelection(range);\n});\n\n// Toolbar button click\naddListener(document, 'click', '.wysi-toolbar > button', event => {\n  const button = event.target;\n  const action = button.getAttribute('data-action');\n  const { editor } = findInstance(button);\n  const selection = document.getSelection();\n\n  if (selection && editor.contains(selection.anchorNode)) {\n    execAction(action, editor);\n  }\n});\n\n// Update the toolbar buttons state\naddListener(document, 'selectionchange', updateToolbarState);\n\n// include SVG icons\nDOMReady(embedSVGIcons);\n\nexport { renderToolbar };","import settings from './settings.js';\nimport toolset from './toolset.js';\nimport { buildFragment, cloneObject, createElement } from './utils.js';\n\nconst STYLE_ATTRIBUTE = 'style';\n\n/**\n * Enable HTML tags belonging to a set of tools.\n * @param {array} tools A array of tool objects.\n * @return {object} The list of allowed tags.\n */\nfunction enableTags(tools) {\n  const allowedTags = cloneObject(settings.allowedTags);\n\n  tools.forEach(toolName => {\n    const tool = cloneObject(toolset[toolName]);\n\n    if (!tool || !tool.tags) {\n      return;\n    }\n\n    const isEmpty = !!tool.isEmpty;\n    const extraTags = tool.extraTags || [];\n    const aliasList = tool.alias || [];\n    const alias = aliasList.length ? tool.tags[0] : undefined;\n    const tags = [...tool.tags, ...extraTags, ...aliasList];\n    const attributes = tool.attributes || [];\n    const styles = tool.styles || [];\n\n    tags.forEach(tag => {\n      allowedTags[tag] = { attributes, styles, alias, isEmpty };\n      \n      if (!extraTags.includes(tag)) {\n        allowedTags[tag].toolName = toolName;\n      }\n    });\n  });\n\n  return allowedTags;\n}\n\n/**\n * Prepare raw content for editing.\n * @param {string} content The raw content.\n * @param {array} allowedTags The list of allowed tags.\n * @return {string} The filter HTML content.\n */\nfunction prepareContent(content, allowedTags) {\n  const container = createElement('div');\n  const fragment = buildFragment(content);\n\n  filterContent(fragment, allowedTags);\n  wrapTextNodes(fragment);\n  cleanContent(fragment, allowedTags);\n  container.appendChild(fragment);\n\n  return container.innerHTML;\n}\n\n/**\n * Replace a DOM element with another while preserving its content.\n * @param {object} node The element to replace.\n * @param {string} tag The HTML tag of the new element.\n * @param {boolean} [copyAttributes] If true, also copy the original element's attributes.\n */\nfunction replaceNode(node, tag, copyAttributes) {\n  const newElement = createElement(tag);\n  const parentNode = node.parentNode;\n  const attributes = node.attributes;\n\n  // Copy the original element's content\n  newElement.innerHTML = node.innerHTML || node.textContent || node.outerHTML;\n\n  // Copy the original element's attributes\n  if (copyAttributes && attributes) {\n    for (let i = 0; i < attributes.length; i++) {\n      newElement.setAttribute(attributes[i].name, attributes[i].value);\n    }\n  }\n\n  // Replace the element\n  parentNode.replaceChild(newElement, node);\n}\n\n/**\n * Remove unsupported CSS styles from a node.\n * @param {object} node The element to filter.\n * @param {array} allowedStyles An array of supported styles.\n */\nfunction filterStyles(node, allowedStyles) {\n  const styleAttribute = node.getAttribute(STYLE_ATTRIBUTE);\n\n  if (styleAttribute) {\n    // Parse the styles\n    const styles = styleAttribute.split(';').map(style => {\n      const prop = style.split(':');\n      \n      return {\n        name: prop[0].trim(),\n        value: prop[1]\n      };\n    })\n    // Filter the styles\n    .filter(style => allowedStyles.includes(style.name))\n\n    // Convert back to a style string\n    .map(({ name, value }) => `${name}: ${value.trim()};`).join('');\n\n    if (styles !== '') {\n      node.setAttribute(STYLE_ATTRIBUTE, styles);\n    } else {\n      node.removeAttribute(STYLE_ATTRIBUTE);\n    }\n  }\n}\n\n/**\n * Remove unsupported HTML tags and attributes.\n * @param {object} node The parent element to filter recursively.\n * @param {array} allowedTags The list of allowed tags.\n */\nfunction filterContent(node, allowedTags) {\n  const children = Array.from(node.childNodes);\n\n  if (!children || !children.length) {\n    return;\n  }\n\n  children.forEach(childNode => {\n    // Element nodes\n    if (childNode.nodeType === 1) {\n      // Filter recursively (deeper nodes firest)\n      filterContent(childNode, allowedTags);\n\n      // Check if the current element is allowed\n      const tag = childNode.tagName.toLowerCase();\n      const allowedTag = allowedTags[tag];\n      const attributes = Array.from(childNode.attributes);\n\n      if (allowedTag) {\n        const allowedAttributes = allowedTag.attributes || [];\n        const allowedStyles = allowedTag.styles || [];\n\n        // Remove attributes that are not allowed\n        for (let i = 0; i < attributes.length; i++) {\n          const attributeName = attributes[i].name;\n\n          if (!allowedAttributes.includes(attributes[i].name)) {\n            if (attributeName === STYLE_ATTRIBUTE && allowedStyles.length) {\n              filterStyles(childNode, allowedStyles);\n            } else {\n              childNode.removeAttribute(attributes[i].name);\n            }\n          }\n        }\n\n        // If the tag is an alias, replace it with the standard tag\n        // e.g: <b> tags will be replaced with <strong> tags\n        if (allowedTag.alias) {\n          replaceNode(childNode, allowedTag.alias, true);\n        }\n      } else {\n        // Remove style nodes\n        if (tag === 'style') {\n          node.removeChild(childNode);\n\n        // And unwrap the other nodes\n        } else {\n          childNode.replaceWith(...childNode.childNodes);\n        }\n      }\n\n    // Remove comment nodes\n    } else if (childNode.nodeType === 8) {\n      node.removeChild(childNode);\n    }\n  });\n}\n\n/**\n * Remove empty nodes.\n * @param {object} node The parent element to filter recursively.\n * @param {array} allowedTags The list of allowed tags.\n */\nfunction cleanContent(node, allowedTags) {\n  const children = Array.from(node.childNodes);\n\n  if (!children || !children.length) {\n    return;\n  }\n\n  children.forEach(childNode => {\n    // Remove empty element nodes\n    if (childNode.nodeType === 1) {\n      // Filter recursively (deeper nodes firest)\n      cleanContent(childNode, allowedTags);\n\n      // Check if the element can be empty\n      const tag = childNode.tagName.toLowerCase();\n      const allowedTag = allowedTags[tag];\n\n      if (allowedTag && !allowedTag.isEmpty && trimText(childNode.innerHTML) === '') {\n        node.removeChild(childNode);\n      }\n    }\n  });\n}\n\n/**\n * Wrap the child text nodes in a paragraph (non-recursively).\n * @param {object} node The parent element of the text nodes.\n */\nfunction wrapTextNodes(node) {\n  const children = Array.from(node.childNodes);\n\n  if (!children || !children.length) {\n    return;\n  }\n\n  const exclude = ['BLOCKQUOTE', 'H1', 'H2', 'H3', 'H4', 'HR', 'P', 'OL', 'UL'];\n  let appendToPrev = false;\n\n  children.forEach(childNode => {\n    if (childNode.nodeType !== 3 && exclude.includes(childNode.tagName)) {\n      appendToPrev = false;\n      return;\n    }\n\n    // Remove empty text node\n    /*if (trimText(childNode.textContent) === '') {\n      node.removeChild(childNode);\n\n    // Wrap text node in a paragraph\n    } else {*/\n      if (appendToPrev) {\n        const prev = childNode.previousElementSibling;\n\n        if (prev) {\n          prev.appendChild(childNode);\n        }\n      } else {\n        replaceNode(childNode, 'p');\n        appendToPrev = true;\n      }\n    /*}*/\n  });\n}\n\n/**\n * Trim whitespace from the start and end of a text.\n * @param {string} text The text to trim.\n * @return {string} The trimmed text.\n */\nfunction trimText(text) {\n  return text.replace(/^\\s+|\\s+$/g, '').trim();\n}\n\nexport {\n  enableTags,\n  prepareContent\n};","import window from 'window';\nimport document from 'document';\nimport settings from './settings.js';\nimport { instances } from './common.js';\nimport { renderToolbar } from './toolbar.js';\nimport { enableTags, prepareContent } from './filter.js';\nimport { \n  addListener,\n  cloneObject,\n  createElement,\n  DOMReady,\n  findInstance,\n  getInstanceId,\n  getTextAreaLabel\n} from './utils.js';\nimport {\n  dispatchEvent,\n  execCommand,\n  hasClass\n} from './shortcuts.js';\n\n\n// Next available instance id\nlet nextId = 0;\n\n/**\n * Init WYSIWYG editor instances.\n * @param {object} options Configuration options.\n */\nfunction init(options) {\n  const globalTranslations = window.wysiGlobalTranslations || {};\n  const translations = Object.assign({}, globalTranslations, options.translations || {});\n  const tools = options.tools || settings.tools;\n  const selector = options.el || settings.el;\n  const toolbar = renderToolbar(tools, translations);\n  const allowedTags = enableTags(tools);\n  const customTags = options.customTags || [];\n\n  // Add custom tags if any to the allowed tags list\n  customTags.forEach(custom => {\n    if (custom.tags) {\n      const attributes = custom.attributes || [];\n      const styles = custom.styles || [];\n      const isEmpty = !!custom.isEmpty;\n\n      custom.tags.forEach(tag => {\n        allowedTags[tag] = { attributes, styles, isEmpty };\n      });\n    }\n  });\n\n  // Append an editor instance\n  document.querySelectorAll(selector).forEach(field => {\n    const sibling = field.previousElementSibling;\n\n    if (!sibling || !hasClass(sibling, 'wysi-wrapper')) {\n      const instanceId = nextId++;\n\n      // Store the instance's options \n      instances[instanceId] = options;\n\n      // Cache the list of allowed tags in the instance\n      instances[instanceId].allowedTags = cloneObject(allowedTags);\n\n      // Wrapper\n      const wrapper = createElement('div', {\n        class: 'wysi-wrapper'\n      });\n\n      // Editable region\n      const editor = createElement('div', {\n        class: 'wysi-editor',\n        contenteditable: true,\n        role: 'textbox',\n        'aria-multiline': true,\n        'aria-label': getTextAreaLabel(field),\n        'data-wid': instanceId,\n        _innerHTML: prepareContent(field.value, allowedTags)\n      });      \n\n      // Insert the editor instance in the document\n      wrapper.appendChild(toolbar.cloneNode(true));\n      wrapper.appendChild(editor);\n      field.before(wrapper);\n\n      // Apply configuration\n      configure(wrapper, options);\n\n    // Reconfigure instance\n    } else {\n      configure(sibling, options);\n    }\n  });\n}\n\n/**\n * Configure a WYSIWYG editor instance.\n * @param {object} instance The editor instance to configure.\n * @param {object} options The configuration options.\n */\nfunction configure(instance, options) {\n  if (typeof options !== 'object') {\n    return;\n  }\n\n  for (const key in options) {\n    switch (key) {\n      case 'darkMode':\n      case 'autoGrow':\n      case 'autoHide':\n        instance.classList.toggle(`wysi-${key.toLowerCase()}`, !!options[key]);\n        break;\n      case 'height':\n        const height = options.height;\n\n        if (!isNaN(height)) {\n          const editor = instance.lastChild;\n\n          editor.style.minHeight = `${height}px`;\n          editor.style.maxHeight = `${height}px`;\n        }\n        break;\n    }\n  }\n}\n\n/**\n * Destroy a WYSIWYG editor instance.\n * @param {string} selector One or more selectors pointing to textarea fields.\n */\nfunction destroy(selector) {\n  document.querySelectorAll(selector).forEach(field => {\n    const sibling = field.previousElementSibling;\n\n    if (sibling && hasClass(sibling, 'wysi-wrapper')) {\n      const instanceId = getInstanceId(sibling.lastChild);\n\n      delete instances[instanceId];\n      sibling.remove();\n    }\n  });\n}\n\n/**\n * Clean up content before pasting it in an editor.\n * @param {object} event The browser's paste event.\n */\nfunction cleanPastedContent(event) {\n  const { editor } = findInstance(event.target);\n  const clipboardData = event.clipboardData;\n\n  if (editor && clipboardData.types.includes('text/html')) {\n    const pasted = clipboardData.getData('text/html');\n    const instanceId = getInstanceId(editor);\n    const allowedTags = instances[instanceId].allowedTags;\n    const content = prepareContent(pasted, allowedTags);\n\n    // Manually paste the cleaned content\n    execCommand('insertHTML', content);\n\n    // Prevent the default paste action\n    event.preventDefault();\n  }\n}\n\n\n/**\n * Bootstrap the WYSIWYG editor.\n */\nfunction bootstrap() {\n  // Configure editable regions\n  execCommand('styleWithCSS', false);\n  execCommand('enableObjectResizing', false);\n  execCommand('enableInlineTableEditing', false);\n  execCommand('defaultParagraphSeparator', 'p');\n\n  // Update the textarea value when the editor's content changes\n  addListener(document, 'input', '.wysi-editor', event => {\n    const editor = event.target;\n    const textarea = editor.parentNode.nextElementSibling;\n    const instanceId = getInstanceId(editor);\n    const onChange = instances[instanceId].onChange;\n    const content = editor.innerHTML;\n\n    textarea.value = content;\n    dispatchEvent(textarea, 'change');\n\n    if (onChange) {\n      onChange(content);\n    }\n  });\n\n  // Clean up pasted content\n  addListener(document, 'paste', cleanPastedContent);\n}\n\n// Expose Wysi to the global scope\nwindow.Wysi = (() => {\n  const methods = {\n    destroy: destroy\n  };\n\n  function Wysi(options) {\n    DOMReady(() => {\n      init(options || {});\n    });\n  }\n\n  for (const key in methods) {\n    Wysi[key] = (...args) => {\n      DOMReady(methods[key], args);\n    };\n  }\n\n  return Wysi;\n})();\n\n// Bootstrap Wysi when the DOM is ready\nDOMReady(bootstrap);\n"],"names":["settings","el","tools","label","items","darkMode","height","autoGrow","autoHide","allowedTags","br","attributes","styles","isEmpty","customTags","instances","selectedClass","execCommand","command","value","document","hasClass","element","classes","classList","contains","formatBlock","format","currentSelection","toolset","tags","paragraph","heading","action","quote","bold","alias","italic","underline","strike","alignLeft","alignCenter","alignRight","alignJustify","ul","extraTags","ol","indent","outdent","link","attributeLabels","hasForm","url","image","text","original","html","replace","hr","removeFormat","unlink","addListener","context","type","selector","fn","addEventListener","event","target","matches","call","buildFragment","template","createElement","innerHTML","trim","content","cloneObject","obj","JSON","parse","stringify","tag","attributeName","substring","setAttribute","DOMReady","args","undefined","readyState","apply","execAction","editor","options","tool","realAction","restoreSelection","focus","findInstance","currentNode","ancestor","toolbar","nodes","body","tagName","push","parentNode","children","getInstanceId","getAttribute","getTextAreaLabel","textarea","labelElement","parent","id","nodeName","querySelector","filter","childNodes","n","nodeType","map","textContent","l","setSelection","setCurrentSelection","range","selection","getSelection","removeAllRanges","addRange","toggleButton","button","expanded","renderListBox","details","firstItem","listBox","class","concat","join","title","_innerHTML","renderListBoxItem","menu","role","tabindex","forEach","item","option","name","appendChild","icon","openListBox","isOpen","nextElementSibling","selectedItem","firstElementChild","selectListBoxItem","previousElementSibling","closeListBox","activeListBox","closePopover","ignoreSelection","popover","NodeList","prototype","Array","stopImmediatePropagation","key","preventDefault","documentElement","anchorNode","prev","next","lastElementChild","click","inputs","querySelectorAll","_findInstance","values","node","includes","toLowerCase","selectContents","createRange","selectNodeContents","selectNode","attribute","rangeCount","getRangeAt","input","i","openPopover","selected","outerHTML","execPopoverAction","form","firstField","shiftKey","isSelectionInProgress","renderToolbar","translations","toolName","paragraphLabel","headingLabel","renderFormatTool","select","renderToolGroup","labels","fields","wrapper","field","span","_textContent","cancel","save","extraTool","renderPopover","renderTool","setTimeout","remove","add","instanceId","textAlign","style","charAt","toUpperCase","slice","allowedTag","svgElement","STYLE_ATTRIBUTE","prepareContent","container","fragment","filterContent","from","length","exclude","appendToPrev","childNode","replaceNode","wrapTextNodes","cleanContent","copyAttributes","newElement","replaceChild","filterStyles","allowedStyles","styleAttribute","split","prop","_ref","removeAttribute","allowedAttributes","removeChild","replaceWith","nextId","init","globalTranslations","window","wysiGlobalTranslations","Object","assign","aliasList","enableTags","custom","sibling","configure","contenteditable","cloneNode","before","instance","toggle","isNaN","lastChild","minHeight","maxHeight","destroy","cleanPastedContent","clipboardData","types","pasted","getData","Wysi","methods","_loop","_len","arguments","_key","onChange","dispatchEvent","Event","bubbles"],"mappings":";;;;;4BACe,IAAAA,EAAA,CAGbC,GAAI,2BAGJC,MAAO,CACL,SAAU,IAAK,OAAQ,SAAU,IACjC,CACEC,MAAO,iBACPC,MAAO,CAAC,YAAa,cAAe,aAAc,iBACjD,IACH,KAAM,KAAM,IAAK,SAAU,UAAW,IAAK,OAAQ,SAIrDC,UAAU,EAGVC,OAAQ,IAGRC,UAAU,EAGVC,UAAU,EAIVC,YAAa,CACXC,GAAI,CACFC,WAAY,GACZC,OAAQ,GACRC,SAAS,IAKbC,WAAY,ICtCDC,EAAY,CAAA,EAGZC,EAAgB,gBCAhBC,EAAc,SAACC,EAASC,GAAY,YAAP,IAALA,IAAAA,EAAQ,MAASC,EAASH,YAAYC,GAAS,EAAOC,EAAM,EACpFE,EAAW,SAACC,EAASC,GAAO,OAAKD,EAAQE,WAAaF,EAAQE,UAAUC,SAASF,EAAQ,ECCtG,SAASG,EAAYC,GACnBV,EAAY,cAAmBU,IAAAA,MACjC,CAGe,ICHXC,EDGWC,EAAA,CACbF,OAAQ,CACNG,KAAM,CAAC,IAAK,KAAM,KAAM,KAAM,MAC9BlB,OAAQ,CAAC,cACTT,MAAO,sBACP4B,UAAW,YACXC,QAAS,UACTC,OAAQ,SAACN,GAAM,OAAKD,EAAYC,EAAO,GAEzCO,MAAO,CACLJ,KAAM,CAAC,cACP3B,MAAO,QACP8B,OAAQ,WAAA,OAAMP,EAAY,aAAa,GAEzCS,KAAM,CACJL,KAAM,CAAC,UACPM,MAAO,CAAC,KACRjC,MAAO,QAETkC,OAAQ,CACNP,KAAM,CAAC,MACPM,MAAO,CAAC,KACRjC,MAAO,UAETmC,UAAW,CACTR,KAAM,CAAC,KACP3B,MAAO,aAEToC,OAAQ,CACNT,KAAM,CAAC,KACPM,MAAO,CAAC,MAAO,UACfjC,MAAO,iBACPe,QAAS,iBAEXsB,UAAW,CACTrC,MAAO,aACPe,QAAS,eAEXuB,YAAa,CACXtC,MAAO,eACPe,QAAS,iBAEXwB,WAAY,CACVvC,MAAO,cACPe,QAAS,gBAEXyB,aAAc,CACZxC,MAAO,UACPe,QAAS,eAEX0B,GAAI,CACFd,KAAM,CAAC,MACPe,UAAW,CAAC,MACZjC,OAAQ,CAAC,cACTT,MAAO,gBACPe,QAAS,uBAEX4B,GAAI,CACFhB,KAAM,CAAC,MACPe,UAAW,CAAC,MACZjC,OAAQ,CAAC,cACTT,MAAO,gBACPe,QAAS,qBAEX6B,OAAQ,CACN5C,MAAO,mBAET6C,QAAS,CACP7C,MAAO,mBAET8C,KAAM,CACJnB,KAAM,CAAC,KACPnB,WAAY,CAAmB,QAC/BuC,gBAAiB,CAAC,OAClBC,SAAS,EACThD,MAAO,OACP8B,OAAQ,SAACmB,GAAG,OAAKnC,EAAY,aAAcmC,EAAI,GAEjDC,MAAO,CACLvB,KAAM,CAAC,OACPnB,WAAY,CAAC,MAAO,OACpBuC,gBAAiB,CAAC,MAAO,oBACzBrC,SAAS,EACTsC,SAAS,EACThD,MAAO,QACP8B,OAAQ,SAACmB,EAAKE,EAAWC,QAAP,IAAJD,IAAAA,EAAO,IACnB,IAAMD,EAAK,aAAgBD,EAAG,UAAUE,EAA8B,2BAChEE,EAAOD,EAAWA,EAASE,QAAQ,cAAeJ,GAASA,EACjEpC,EAAY,aAAcuC,EAC5B,GAEFE,GAAI,CACF5B,KAAM,CAAC,MACPjB,SAAS,EACTV,MAAO,kBACPe,QAAS,wBAEXyC,aAAc,CACZxD,MAAO,iBAETyD,OAAQ,CACNzD,MAAO,gBC1FJ,SAAS0D,EAAYC,EAASC,EAAMC,EAAUC,GAE3B,iBAAbD,EACTF,EAAQI,iBAAiBH,GAAM,SAAAI,GAC7B,IAAMC,EAASD,EAAMC,OAEjBA,EAAOC,QAAQL,IACjBC,EAAGK,KAAKF,EAAQD,EAEpB,KAKAF,EAAKD,EACLF,EAAQI,iBAAiBH,EAAME,GAEnC,CAOO,SAASM,EAAcf,GAC5B,IAAMgB,EAAWC,EAAc,YAG/B,OADAD,EAASE,UAAYlB,EAAKmB,OACnBH,EAASI,OAClB,CAOO,SAASC,EAAYC,GAC1B,OAAOA,EAAMC,KAAKC,MAAMD,KAAKE,UAAUH,IAAQA,CACjD,CAQO,SAASL,EAAcS,EAAKvE,GACjC,IAAMW,EAAUF,EAASqD,cAAcS,GAEvC,GAAIvE,EACF,IAAK,IAAMwE,KAAiBxE,EAED,MAArBwE,EAAc,GAChB7D,EAAQ6D,EAAcC,UAAU,IAAMzE,EAAWwE,GAEjD7D,EAAQ+D,aAAaF,EAAexE,EAAWwE,IAKrD,OAAO7D,CACT,CAOO,SAASgE,EAASrB,EAAIsB,GAC3BA,OAAgBC,IAATD,EAAqBA,EAAO,GAEP,YAAxBnE,EAASqE,WACXxB,EAAEyB,WAAIH,EAAAA,GAEN1B,EAAYzC,EAAU,oBAAoB,WACxC6C,EAAEyB,WAAIH,EAAAA,EACR,GAEJ,CAQO,SAASI,EAAW1D,EAAQ2D,EAAQC,QAAO,IAAPA,IAAAA,EAAU,IACnD,IAAMC,EAAOjE,EAAQI,GAErB,GAAI6D,EAAM,CACR,IAAM5E,EAAU4E,EAAK5E,SAAWe,EAC1B8D,EAAaD,EAAK7D,QAAW,WAAA,OAAMhB,EAAYC,IAGrD8E,IAGAD,EAAUL,WAAIG,EAAAA,GAGdD,EAAOK,OACT,CACF,CAOO,SAASC,EAAaC,GAK3B,IAJA,IACIC,EAAUC,EAAST,EADjBU,EAAQ,GAIPH,GAAeA,IAAgB/E,EAASmF,MAAM,CAGnD,GAFYJ,EAAYK,QAEf,CACP,GAAInF,EAAS8E,EAAa,gBAAiB,CAEzCC,EAAWD,EACX,KACF,CACEG,EAAMG,KAAKN,EAEf,CAEAA,EAAcA,EAAYO,UAC5B,CAEA,GAAIN,EAAU,CACZ,IAAMO,EAAWP,EAASO,SAE1BN,EAAUM,EAAS,GACnBf,EAASe,EAAS,EACpB,CAEA,MAAO,CAAEN,QAAAA,EAAST,OAAAA,EAAQU,MAAAA,EAC5B,CAOO,SAASM,EAAchB,GAC5B,OAAOA,EAAOiB,aAAa,WAC7B,CAOO,SAASC,EAAiBC,GAC/B,IAEIC,EAFEC,EAASF,EAASL,WAClBQ,EAAKH,EAASG,GAcpB,GAVwB,UAApBD,EAAOE,SACTH,EAAeC,OAICzB,IAAP0B,IACTF,EAAe5F,EAASgG,cAA4BF,cAAAA,SAIlDF,EAAc,CAChB,IAEM7G,EAFY,GAAGkH,OAAO/C,KAAK0C,EAAaM,YAAY,SAAAC,GAAC,OAAmB,IAAfA,EAAEC,YACzCC,KAAI,SAAAF,GAAC,OAAIA,EAAEG,YAAYjE,QAAQ,OAAQ,KAAKkB,UAChD0C,QAAO,SAAAM,GAAC,MAAU,KAANA,KAAU,GAE1C,GAAIxH,EACF,OAAOA,CAEX,CAEA,MAAO,EACT,CAKO,SAAS6F,IACVpE,IACFgG,EAAahG,GACbA,OAAmB4D,EAEvB,CAMO,SAASqC,EAAoBC,GAClClG,EAAmBkG,CACrB,CAMO,SAASF,EAAaE,GAC3B,IAAMC,EAAY3G,EAAS4G,eAE3BD,EAAUE,kBACVF,EAAUG,SAASJ,EACrB,CAOO,SAASK,EAAaC,EAAQC,GACnCD,EAAO/C,aAAa,gBAAiBgD,EACvC,CChOA,SAASC,EAAcC,GACrB,IAAMpI,EAAQoI,EAAQpI,MAChBC,EAAQmI,EAAQnI,MAChBoI,EAAYpI,EAAM,GAIlBqI,EAAUhE,EAAc,MAAO,CAAEiE,MAHvB,CAAC,gBAAgBC,OAAOJ,EAAQhH,SAAW,IAGLqH,KAAK,OAGrDR,EAAS3D,EAAc,SAAU,CACrCV,KAAM,SACN8E,MAAO1I,EACP,aAAiBA,EAASqI,IAAAA,EAAUrI,MACpC,gBAAiB,UACjB,iBAAiB,EACjB2I,WAAYC,EAAkBP,KAI1BQ,EAAOvE,EAAc,MAAO,CAChCwE,KAAM,UACNC,UAAW,EACX,aAAc/I,IAuBhB,OAnBAC,EAAM+I,SAAQ,SAAAC,GACZ,IAAMC,EAAS5E,EAAc,SAAU,CACrCV,KAAM,SACNkF,KAAM,SACNC,UAAW,EACX,aAAcE,EAAKjJ,MACnB,iBAAiB,EACjB,cAAeiJ,EAAKnH,OACpB,cAAemH,EAAKE,MAAQ,GAC5BR,WAAYC,EAAkBK,KAGhCJ,EAAKO,YAAYF,EACnB,IAGAZ,EAAQc,YAAYnB,GACpBK,EAAQc,YAAYP,GAEbP,CACT,CAOA,SAASM,EAAkBK,GACzB,OAAOA,EAAKI,KAAgCJ,yBAAAA,EAAKI,KAAI,iBAAmBJ,EAAKjJ,KAC/E,CAMA,SAASsJ,EAAYrB,GACnB,IAAMsB,EAAkD,SAAzCtB,EAAOvB,aAAa,iBAC7B4B,EAAUL,EAAOuB,mBACnBC,EAAenB,EAAQrB,cAAc,0BAEpCwC,IACHA,EAAenB,EAAQoB,mBAGzB1B,EAAaC,GAASsB,GACtBE,EAAa3D,OACf,CAMA,SAAS6D,EAAkBV,GACzB,IAAMX,EAAUW,EAAK1C,WACf0B,EAASK,EAAQsB,uBACjBH,EAAenB,EAAQrB,cAAc,0BAEvCwC,GACFA,EAAavE,aAAa,gBAAiB,SAG7C+D,EAAK/D,aAAa,gBAAiB,QACnC+C,EAAO1D,UAAY0E,EAAK1E,SAC1B,CAKA,SAASsF,IACP,IAAMC,EAAgB7I,EAASgG,cAAc,wCAEzC6C,GACF9B,EAAa8B,GAAe,EAEhC,CCiEA,SAASC,EAAaC,GACpB,IAAMC,EAAUhJ,EAASgG,cAAc,wCAEnCgD,GACFjC,EAAaiC,GAAS,GAGnBD,GACHnE,GAEJ,MFtLiBR,IAAb6E,UAA0BA,SAASC,YAAcD,SAASC,UAAUnB,UACpEkB,SAASC,UAAUnB,QAAUoB,MAAMD,UAAUnB,SC6GjDtF,EAAYzC,EAAU,QAAS,0BAA0B,SAAA+C,GACvD6F,IACAP,EAAYtF,EAAMC,QAClBD,EAAMqG,0BACR,IAGA3G,EAAYzC,EAAU,UAAW,0BAA0B,SAAA+C,GACzD,OAAQA,EAAMsG,KACZ,IAAK,UACL,IAAK,YACL,IAAK,QACL,IAAK,IACHhB,EAAYtF,EAAMC,QAClBD,EAAMuG,iBAGZ,IAGA7G,EAAYzC,EAASuJ,gBAAiB,YAAa,gCAAgC,SAAAxG,GACjFA,EAAMC,OAAO6B,OACf,IAGApC,EAAYzC,EAAU,QAAS,gCAAgC,SAAA+C,GAC7D,IAAMiF,EAAOjF,EAAMC,OACbnC,EAASmH,EAAKvC,aAAa,eAC3BwC,EAASD,EAAKvC,aAAa,eACzBjB,EAAWM,EAAakD,GAAxBxD,OACFmC,EAAY3G,EAAS4G,eAEvBD,GAAanC,EAAOnE,SAASsG,EAAU6C,aACzCjF,EAAW1D,EAAQ2D,EAAQ,CAACyD,IAG9BS,EAAkBV,EACpB,IAGAvF,EAAYzC,EAAU,UAAW,gCAAgC,SAAA+C,GAC/D,IAAMiF,EAAOjF,EAAMC,OACbqE,EAAUW,EAAK1C,WACf0B,EAASK,EAAQsB,uBACnBW,GAAiB,EAErB,OAAQvG,EAAMsG,KACZ,IAAK,UACH,IAAMI,EAAOzB,EAAKW,uBAEdc,GACFA,EAAK5E,QAGP,MACF,IAAK,YACH,IAAM6E,EAAO1B,EAAKO,mBAEdmB,GACFA,EAAK7E,QAGP,MACF,IAAK,OACHwC,EAAQoB,kBAAkB5D,QAC1B,MACF,IAAK,MACHwC,EAAQsC,iBAAiB9E,QACzB,MACF,IAAK,MACHmD,EAAK4B,QACL,MACF,IAAK,SACH7C,EAAaC,GAAQ,GACrB,MACF,QACEsC,GAAiB,EAGjBA,GACFvG,EAAMuG,gBAEV,IAGA7G,EAAYzC,EAAU,SAAS,SAAA+C,GAC7B6F,GACF,ICZAnG,EAAYzC,EAAU,QAAS,0BAA0B,SAAA+C,GACvD+F,IAxGF,SAAqB9B,GACnB,IAAM6C,EAAS7C,EAAOuB,mBAAmBuB,iBAAiB,SACpDnD,EAAY3G,EAAS4G,eACrB4C,EAAa7C,EAAU6C,WAC7BO,EAA0BjF,EAAa0E,GAA/BhF,EAAMuF,EAANvF,OAAQU,EAAK6E,EAAL7E,MACV8E,EAAS,GAEf,GAAIxF,EAAQ,CAEV,IAAM3D,EAASmG,EAAOvB,aAAa,eAC7Bf,EAAOjE,EAAQI,GACjBmC,EAASkC,EAAMe,QAAO,SAAAgE,GAAI,OAAIvF,EAAKhE,KAAKwJ,SAASD,EAAK7E,QAAQ+E,kBAAgB,GAC9EC,GAAiB,EASrB,GANKpH,IACHA,EAASwB,EAAOwB,cAAa,IAAKpG,GAClCwK,GAAiB,GAIfpH,EAAQ,CACV,IAAM0D,EAAQ1G,EAASqK,cAInBD,EACF1D,EAAM4D,mBAAmBtH,GAEzB0D,EAAM6D,WAAWvH,GAInByD,EAAoBC,GAGpBhC,EAAKnF,WAAWwI,SAAQ,SAAAyC,GACtBR,EAAO3E,KAAKrC,EAAOyC,aAAa+E,GAClC,GAGF,MAAW7D,GAAanC,EAAOnE,SAASmJ,IAAe7C,EAAU8D,YAE/DhE,EAAoBE,EAAU+D,WAAW,GAE7C,CAGAb,EAAO9B,SAAQ,SAAC4C,EAAOC,GACrBD,EAAM5K,MAAQiK,EAAOY,IAAM,EAC7B,IAGA7D,EAAaC,GAAQ,GAGrB6C,EAAO,GAAGhF,OACZ,CAgDEgG,CAAY9H,EAAMC,QAClBD,EAAMqG,0BACR,IAGA3G,EAAYzC,EAAU,QAAS,6CAA6C,SAAA+C,IA/C5E,SAA2BiE,GACzB,IAAMnG,EAASmG,EAAOvB,aAAa,eAC7BoE,EAAS7C,EAAO1B,WAAWwE,iBAAiB,SAC1CtF,EAAWM,EAAakC,GAAxBxC,OACFC,EAAU,GAOhB,GALAoF,EAAO9B,SAAQ,SAAA4C,GACblG,EAAQY,KAAKsF,EAAM5K,MACrB,IAGe,UAAXc,EAAoB,CACtB,IAAMiK,EAAWtG,EAAOwB,cAAa,IAAKpG,GACpCiG,EAASiF,EAAWA,EAASxF,WAAa,CAAA,EAE5CwF,GAA+B,MAAnBjF,EAAOT,SACrBX,EAAQY,KAAKQ,EAAOkF,UAExB,CAEAxG,EAAW1D,EAAQ2D,EAAQC,EAC7B,CA2BEuG,CAAkBjI,EAAMC,QACxB8F,GAAa,EACf,IAGArG,EAAYzC,EAAU,QAAS,mDAAmD,SAAA+C,GAChF+F,GACF,IAGArG,EAAYzC,EAAU,QAAS,+BAA+B,SAAA+C,GAC5DA,EAAMqG,0BACR,IAGA3G,EAAYzC,EAAU,UAAW,mBAAmB,SAAA+C,GAClD,IAAMC,EAASD,EAAMC,OACf6C,EAAS7C,EAAOsC,WAChB2F,EAA0B,QAAnBpF,EAAOT,QAAoBS,EAASA,EAAOP,WAExD,OAAQvC,EAAMsG,KACZ,IAAK,MACH,IAAM6B,EAAaD,EAAKjF,cAAc,SAElCjD,EAAMoI,SACJnI,IAAWkI,IACbD,EAAKtB,iBAAiB9E,QACtB9B,EAAMuG,kBAGHtG,EAAOuF,oBAAuBvF,EAAOsC,WAAWiD,qBACnD2C,EAAWrG,QACX9B,EAAMuG,kBAGV,MACF,IAAK,QACH,GAAuB,UAAnBtG,EAAOoC,QACY6F,EAAKjF,cAAc,8BAE3B4D,QACb7G,EAAMuG,iBAER,MACF,IAAK,SACHR,IAIN,IAEA,IAAIsC,GAAwB,ECzO5B,SAASC,EAAcvM,EAAOwM,GAC5B,IAAMrG,EAAU5B,EAAc,MAAO,CAAEiE,MAAO,iBAgC9C,OA7BAxI,EAAMiJ,SAAQ,SAAAwD,GACZ,OAAQA,GAEN,IAAK,IACHtG,EAAQkD,YAAY9E,EAAc,MAAO,CAAEiE,MAAO,oBAClD,MAGF,IAAK,IACHrC,EAAQkD,YAAY9E,EAAc,MAAO,CAAEiE,MAAO,kBAClD,MAGF,IAAK,SACHrC,EAAQkD,YA0EhB,SAA0BmD,GACxB,IAAMvM,EAAQuM,EAAqB,QAAK7K,EAAQF,OAAOxB,MACjDyM,EAAiBF,EAAwB,WAAK7K,EAAQF,OAAOI,UAC7D8K,EAAeH,EAAsB,SAAK7K,EAAQF,OAAOK,QACzDT,EAAU,cACVnB,EAAQyB,EAAQF,OAAOG,KAAK2F,KAAI,SAAAvC,GAKpC,MAAO,CAAEoE,KAJIpE,EAIE/E,MAHO,MAAR+E,EAAc0H,EAAoBC,MAAgB3H,EAAIE,UAAU,GAGxDnD,OAFP,SAGjB,IAEA,OAAOqG,EAAc,CAAEnI,MAAAA,EAAOC,MAAAA,EAAOmB,QAAAA,GACvC,CAxF4BuL,CAAiBJ,IACrC,MAGF,QAC0B,iBAAbC,EACLA,EAASvM,OACXiG,EAAQkD,YA8CpB,SAAyBhB,EAASmE,GAChC,IAAMvM,EAAQoI,EAAQpI,OAASuM,EAAaK,QAAU,iBAGhD3M,EAFUmI,EAAQnI,MAEFqH,KAAI,SAAA4B,GACxB,IAAMvD,EAAOjE,EAAQwH,GAKrB,MAAO,CAAElJ,MAJKuM,EAAarD,IAAWvD,EAAK3F,MAI3BqJ,KAHHH,EAGSpH,OAFPoH,EAGjB,IAEA,OAAOf,EAAc,CAAEnI,MAAAA,EAAOC,MAAAA,GAChC,CA5DgC4M,CAAgBL,EAAUD,IAiB1D,SAAoBpD,EAAMjD,EAASqG,GACjC,IAAM5G,EAAOjE,EAAQyH,GACfnJ,EAAQuM,EAAapD,IAASxD,EAAK3F,MACnCiI,EAAS3D,EAAc,SAAU,CACrCV,KAAM,SACN8E,MAAO1I,EACP,aAAcA,EACd,gBAAgB,EAChB,cAAemJ,EACfR,oCAAqCQ,EAAI,mBAI3C,GAAIxD,EAAK3C,QAAS,CAChB,IAAMiH,EDzDV,SAAuBuC,EAAUvE,EAAQsE,GACvC,IAAM5G,EAAOjE,EAAQ8K,GACfM,EAASnH,EAAK5C,gBACdgK,EAASpH,EAAKnF,WAAW8G,KAAI,SAACmE,EAAWI,GAC7C,MAAO,CACL1C,KAAMsC,EACNzL,MAAOuM,EAAad,IAAcqB,EAAOjB,GAE7C,IAGMmB,EAAU1I,EAAc,MAAO,CACnCiE,MAAO,iBAIH0B,EAAU3F,EAAc,MAAO,CACnCyE,UAAW,IAIbd,EAAO/C,aAAa,iBAAiB,GACrC+C,EAAO/C,aAAa,iBAAiB,GAErC8H,EAAQ5D,YAAYnB,GACpB+E,EAAQ5D,YAAYa,GAEpB8C,EAAO/D,SAAQ,SAAAiE,GACb,IAAMjN,EAAQsE,EAAc,SACtB4I,EAAO5I,EAAc,OAAQ,CAAE6I,aAAcF,EAAMjN,QACnD4L,EAAQtH,EAAc,QAAS,CAAEV,KAAM,SAE7C5D,EAAMoJ,YAAY8D,GAClBlN,EAAMoJ,YAAYwC,GAClB3B,EAAQb,YAAYpJ,EACtB,IAEA,IAAMoN,EAAS9I,EAAc,SAAU,CACrCV,KAAM,SACNuJ,aAAcZ,EAAaa,QAAU,WAGjCC,EAAO/I,EAAc,SAAU,CACnCV,KAAM,SACN,cAAe4I,EACfW,aAAcZ,EAAac,MAAQ,SAIrC,GAAiB,SAAbb,EAAqB,CACvB,IAAMc,EAAY,SACZtN,EAAQuM,EAAae,IAAc5L,EAAQ4L,GAAWtN,MAE5DiK,EAAQb,YAAY9E,EAAc,SAAU,CAC1CV,KAAM,SACN8E,MAAO1I,EACP,aAAcA,EACd,cAAesN,EACf3E,WAAU,+CAEd,CAKA,OAHAsB,EAAQb,YAAYgE,GACpBnD,EAAQb,YAAYiE,GAEbL,CACT,CCToBO,CAAcpE,EAAMlB,EAAQsE,GAC5CrG,EAAQkD,YAAYa,EAGtB,MACE/D,EAAQkD,YAAYnB,EAExB,CAnCUuF,CAAWhB,EAAUtG,EAASqG,GAGtC,IAEOrG,CACT,CD0MAxC,EAAYzC,EAAU,SAAS,SAAA+C,GACxBqI,GACHtC,GAEJ,IAIArG,EAAYzC,EAAU,YAAa,kCAAkC,SAAA+C,GACnEqI,GAAwB,CAC1B,IAGA3I,EAAYzC,EAAU,WAAW,SAAA+C,GAC/ByJ,YAAW,WAAQpB,GAAwB,CAAO,GACpD,IClEA3I,EAAYzC,EAAU,QAAS,gCAAgC,SAAA+C,GAC7D,IAAM+H,EAAW9K,EAASgG,cAAa,IAAKpG,GAExCkL,GAAYA,IAAa/H,EAAMC,QACjC8H,EAAS1K,UAAUqM,OAAO7M,EAE9B,IAGA6C,EAAYzC,EAAU,QAAS,oBAAoB,SAAA+C,GACjD,IAAMd,EAAQc,EAAMC,OACd0D,EAAQ1G,EAASqK,cAEvBpI,EAAM7B,UAAUsM,IAAI9M,GAEpB8G,EAAM6D,WAAWtI,GACjBuE,EAAaE,EACf,IAGAjE,EAAYzC,EAAU,QAAS,0BAA0B,SAAA+C,GACvD,IAAMiE,EAASjE,EAAMC,OACfnC,EAASmG,EAAOvB,aAAa,eAC3BjB,EAAWM,EAAakC,GAAxBxC,OACFmC,EAAY3G,EAAS4G,eAEvBD,GAAanC,EAAOnE,SAASsG,EAAU6C,aACzCjF,EAAW1D,EAAQ2D,EAEvB,IAGA/B,EAAYzC,EAAU,mBA1GtB,WACE,IAAA+J,EAAmCjF,EAAa9E,EAAS4G,eAAe4C,YAAhEvE,EAAO8E,EAAP9E,QAAST,EAAMuF,EAANvF,OAAQU,EAAK6E,EAAL7E,MACnBxE,EAAOwE,EAAMmB,KAAI,SAAA4D,GAAI,OAAIA,EAAK7E,QAAQ+E,iBAG5C,GAAK3F,EAAL,CAKA,IAAMmI,EAAanH,EAAchB,GAC3BnF,EAAcM,EAAUgN,GAAYtN,YAG1C4F,EAAQ6E,iBAAiB,yBAAyB/B,SAAQ,SAAAf,GAAM,OAAIA,EAAO/C,aAAa,eAAgB,YAGxGgB,EAAQ6E,iBAAiB,8CAA8C/B,SAAQ,SAAAf,GAAM,OAAI0B,EAAkB1B,MAI3GtG,EAAKqH,SAAQ,SAACjE,EAAK8G,GACjB,OAAQ9G,GACN,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,IAAMvD,EAAS0E,EAAQe,cAAqDlC,uCAAAA,QACtE8I,EAAY1H,EAAM0F,GAAGiC,MAAMD,UAOjC,GALIrM,GACFmI,EAAkBnI,GAIhBqM,EAAW,CACb,IAAM/L,EAAS,QAAU+L,EAAUE,OAAO,GAAGC,cAAgBH,EAAUI,MAAM,GACvEhG,EAAS/B,EAAQe,cAA+BnF,iBAAAA,QAElDmG,IAC6C,YAA3CA,EAAO1B,WAAWG,aAAa,QACjCiD,EAAkB1B,GAElBA,EAAO/C,aAAa,eAAgB,QAG1C,CACA,MACF,QACE,IAAMgJ,EAAa5N,EAAYyE,GACzBjD,EAASoM,EAAaA,EAAW1B,cAAWnH,EAElD,GAAIvD,EACaoE,EAAQe,cAA+BnF,iBAAAA,QAC/CoD,aAAa,eAAgB,QAG5C,GApDA,CAqDF,IAiDAC,GA5CA,WAEE,IACMgJ,EAAa/J,EADL,qoMAGdnD,EAASmF,KAAKgD,YAAY+E,EAC5B,ICxMA,IAAMC,EAAkB,QA2CxB,SAASC,EAAe5J,EAASnE,GAC/B,IAAMgO,EAAYhK,EAAc,OAC1BiK,EAAWnK,EAAcK,GAO/B,OALA+J,EAAcD,EAAUjO,GAiK1B,SAAuB4K,GACrB,IAAM1E,EAAW4D,MAAMqE,KAAKvD,EAAK/D,YAEjC,IAAKX,IAAaA,EAASkI,OACzB,OAGF,IAAMC,EAAU,CAAC,aAAc,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,MACpEC,GAAe,EAEnBpI,EAASwC,SAAQ,SAAA6F,GACf,GAA2B,IAAvBA,EAAUxH,UAAkBsH,EAAQxD,SAAS0D,EAAUxI,SACzDuI,GAAe,OAUf,GAAIA,EAAc,CAChB,IAAMlE,EAAOmE,EAAUjF,uBAEnBc,GACFA,EAAKtB,YAAYyF,EAErB,MACEC,EAAYD,EAAW,KACvBD,GAAe,CAGrB,GACF,CAlMEG,CAAcR,GACdS,EAAaT,EAAUjO,GACvBgO,EAAUlF,YAAYmF,GAEfD,EAAU/J,SACnB,CAQA,SAASuK,EAAY5D,EAAMnG,EAAKkK,GAC9B,IAAMC,EAAa5K,EAAcS,GAC3BwB,EAAa2E,EAAK3E,WAClB/F,EAAa0K,EAAK1K,WAMxB,GAHA0O,EAAW3K,UAAY2G,EAAK3G,WAAa2G,EAAK3D,aAAe2D,EAAKc,UAG9DiD,GAAkBzO,EACpB,IAAK,IAAIqL,EAAI,EAAGA,EAAIrL,EAAWkO,OAAQ7C,IACrCqD,EAAWhK,aAAa1E,EAAWqL,GAAG1C,KAAM3I,EAAWqL,GAAG7K,OAK9DuF,EAAW4I,aAAaD,EAAYhE,EACtC,CAOA,SAASkE,EAAalE,EAAMmE,GAC1B,IAAMC,EAAiBpE,EAAKxE,aAAa0H,GAEzC,GAAIkB,EAAgB,CAElB,IAAM7O,EAAS6O,EAAeC,MAAM,KAAKjI,KAAI,SAAAwG,GAC3C,IAAM0B,EAAO1B,EAAMyB,MAAM,KAEzB,MAAO,CACLpG,KAAMqG,EAAK,GAAGhL,OACdxD,MAAOwO,EAAK,OAIftI,QAAO,SAAA4G,GAAK,OAAIuB,EAAclE,SAAS2C,EAAM3E,KAAK,IAGlD7B,KAAI,SAAAmI,GAAc,OAAPA,EAAJtG,KAA8BnI,KAAnByO,EAALzO,MAA8BwD,OAAM,GAAA,IAAKiE,KAAK,IAE7C,KAAXhI,EACFyK,EAAKhG,aAAakJ,EAAiB3N,GAEnCyK,EAAKwE,gBAAgBtB,EAEzB,CACF,CAOA,SAASI,EAActD,EAAM5K,GAC3B,IAAMkG,EAAW4D,MAAMqE,KAAKvD,EAAK/D,YAE5BX,GAAaA,EAASkI,QAI3BlI,EAASwC,SAAQ,SAAA6F,GAEf,GAA2B,IAAvBA,EAAUxH,SAAgB,CAE5BmH,EAAcK,EAAWvO,GAGzB,IAAMyE,EAAM8J,EAAUxI,QAAQ+E,cACxB8C,EAAa5N,EAAYyE,GACzBvE,EAAa4J,MAAMqE,KAAKI,EAAUrO,YAExC,GAAI0N,EAAY,CAKd,IAJA,IAAMyB,EAAoBzB,EAAW1N,YAAc,GAC7C6O,EAAgBnB,EAAWzN,QAAU,GAGlCoL,EAAI,EAAGA,EAAIrL,EAAWkO,OAAQ7C,IAAK,CAC1C,IAAM7G,EAAgBxE,EAAWqL,GAAG1C,KAE/BwG,EAAkBxE,SAAS3K,EAAWqL,GAAG1C,QACxCnE,IAAkBoJ,GAAmBiB,EAAcX,OACrDU,EAAaP,EAAWQ,GAExBR,EAAUa,gBAAgBlP,EAAWqL,GAAG1C,MAG9C,CAII+E,EAAWjM,OACb6M,EAAYD,EAAWX,EAAWjM,OAAO,EAE7C,KAEc,UAAR8C,EACFmG,EAAK0E,YAAYf,GAIjBA,EAAUgB,YAAWtK,MAArBsJ,EAAyBA,EAAU1H,WAKzC,MAAkC,IAAvB0H,EAAUxH,UACnB6D,EAAK0E,YAAYf,EAErB,GACF,CAOA,SAASG,EAAa9D,EAAM5K,GAC1B,IAAMkG,EAAW4D,MAAMqE,KAAKvD,EAAK/D,YAE5BX,GAAaA,EAASkI,QAI3BlI,EAASwC,SAAQ,SAAA6F,GAEf,GAA2B,IAAvBA,EAAUxH,SAAgB,CAE5B2H,EAAaH,EAAWvO,GAGxB,IAAMyE,EAAM8J,EAAUxI,QAAQ+E,cACxB8C,EAAa5N,EAAYyE,GAE3BmJ,IAAeA,EAAWxN,SAA6C,KAAzBmO,EAAUtK,UAqDpDjB,QAAQ,aAAc,IAAIkB,QApDhC0G,EAAK0E,YAAYf,EAErB,CACF,GACF,CCvLA,IAAIiB,EAAS,EAMb,SAASC,EAAKrK,GACZ,IAAMsK,EAAqBC,EAAOC,wBAA0B,GACtD3D,EAAe4D,OAAOC,OAAO,CAAA,EAAIJ,EAAoBtK,EAAQ6G,cAAgB,CAAA,GAC7ExM,EAAQ2F,EAAQ3F,OAASF,EAASE,MAClC8D,EAAW6B,EAAQ5F,IAAMD,EAASC,GAClCoG,EAAUoG,EAAcvM,EAAOwM,GAC/BjM,EDxBR,SAAoBP,GAClB,IAAMO,EAAcoE,EAAY7E,EAASS,aA0BzC,OAxBAP,EAAMiJ,SAAQ,SAAAwD,GACZ,IAAM7G,EAAOjB,EAAYhD,EAAQ8K,IAEjC,GAAK7G,GAASA,EAAKhE,KAAnB,CAIA,IAAMjB,IAAYiF,EAAKjF,QACjBgC,EAAYiD,EAAKjD,WAAa,GAC9B2N,EAAY1K,EAAK1D,OAAS,GAC1BA,EAAQoO,EAAU3B,OAAS/I,EAAKhE,KAAK,QAAK0D,EAC1C1D,EAAI6G,GAAAA,OAAO7C,EAAKhE,KAASe,EAAc2N,GACvC7P,EAAamF,EAAKnF,YAAc,GAChCC,EAASkF,EAAKlF,QAAU,GAE9BkB,EAAKqH,SAAQ,SAAAjE,GACXzE,EAAYyE,GAAO,CAAEvE,WAAAA,EAAYC,OAAAA,EAAQwB,MAAAA,EAAOvB,QAAAA,GAE3CgC,EAAUyI,SAASpG,KACtBzE,EAAYyE,GAAKyH,SAAWA,EAEhC,GAhBA,CAiBF,IAEOlM,CACT,CCJsBgQ,CAAWvQ,IACZ2F,EAAQ/E,YAAc,IAG9BqI,SAAQ,SAAAuH,GACjB,GAAIA,EAAO5O,KAAM,CACf,IAAMnB,EAAa+P,EAAO/P,YAAc,GAClCC,EAAS8P,EAAO9P,QAAU,GAC1BC,IAAY6P,EAAO7P,QAEzB6P,EAAO5O,KAAKqH,SAAQ,SAAAjE,GAClBzE,EAAYyE,GAAO,CAAEvE,WAAAA,EAAYC,OAAAA,EAAQC,QAAAA,EAC3C,GACF,CACF,IAGAO,EAAS8J,iBAAiBlH,GAAUmF,SAAQ,SAAAiE,GAC1C,IAAMuD,EAAUvD,EAAMrD,uBAEtB,GAAK4G,GAAYtP,EAASsP,EAAS,gBAmCjCC,EAAUD,EAAS9K,OAnC+B,CAClD,IAAMkI,EAAakC,IAGnBlP,EAAUgN,GAAclI,EAGxB9E,EAAUgN,GAAYtN,YAAcoE,EAAYpE,GAGhD,IAAM0M,EAAU1I,EAAc,MAAO,CACnCiE,MAAO,iBAIH9C,EAASnB,EAAc,MAAO,CAClCiE,MAAO,cACPmI,iBAAiB,EACjB5H,KAAM,UACN,kBAAkB,EAClB,aAAcnC,EAAiBsG,GAC/B,WAAYW,EACZjF,WAAY0F,EAAepB,EAAMjM,MAAOV,KAI1C0M,EAAQ5D,YAAYlD,EAAQyK,WAAU,IACtC3D,EAAQ5D,YAAY3D,GACpBwH,EAAM2D,OAAO5D,GAGbyD,EAAUzD,EAAStH,EAGrB,CAGF,GACF,CAOA,SAAS+K,EAAUI,EAAUnL,GAC3B,GAAuB,iBAAZA,EAIX,IAAK,IAAM4E,KAAO5E,EAChB,OAAQ4E,GACN,IAAK,WACL,IAAK,WACL,IAAK,WACHuG,EAASxP,UAAUyP,OAAM,QAASxG,EAAIc,gBAAmB1F,EAAQ4E,IACjE,MACF,IAAK,SACH,IAAMnK,EAASuF,EAAQvF,OAEvB,IAAK4Q,MAAM5Q,GAAS,CAClB,IAAMsF,EAASoL,EAASG,UAExBvL,EAAOqI,MAAMmD,UAAe9Q,EAAU,KACtCsF,EAAOqI,MAAMoD,UAAe/Q,EAAU,IACxC,EAIR,CAMA,SAASgR,EAAQtN,GACf5C,EAAS8J,iBAAiBlH,GAAUmF,SAAQ,SAAAiE,GAC1C,IAAMuD,EAAUvD,EAAMrD,uBAEtB,GAAI4G,GAAWtP,EAASsP,EAAS,gBAAiB,CAChD,IAAM5C,EAAanH,EAAc+J,EAAQQ,kBAElCpQ,EAAUgN,GACjB4C,EAAQ9C,QACV,CACF,GACF,CAMA,SAAS0D,EAAmBpN,GAC1B,IAAQyB,EAAWM,EAAa/B,EAAMC,QAA9BwB,OACF4L,EAAgBrN,EAAMqN,cAE5B,GAAI5L,GAAU4L,EAAcC,MAAMnG,SAAS,aAAc,CACvD,IAAMoG,EAASF,EAAcG,QAAQ,aAC/B5D,EAAanH,EAAchB,GAE3BhB,EAAU4J,EAAekD,EADX3Q,EAAUgN,GAAYtN,aAI1CQ,EAAY,aAAc2D,GAG1BT,EAAMuG,gBACR,CACF,CAkCA0F,EAAOwB,KAAQ,WACb,IAAMC,EAAU,CACdP,QAASA,GAGX,SAASM,EAAK/L,GACZP,GAAS,WACP4K,EAAKrK,GAAW,CAAA,EAClB,GACF,CAAC,IAAAiM,EAAA,SAAArH,GAGCmH,EAAKnH,GAAO,WAAa,IAAA,IAAAsH,EAAAC,UAAAnD,OAATtJ,EAAIgF,IAAAA,MAAAwH,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ1M,EAAI0M,GAAAD,UAAAC,GAClB3M,EAASuM,EAAQpH,GAAMlF,KAF3B,IAAK,IAAMkF,KAAOoH,EAAOC,EAAArH,GAMzB,OAAOmH,CACT,CAlBe,GAqBftM,GAjDA,WAEErE,EAAY,gBAAgB,GAC5BA,EAAY,wBAAwB,GACpCA,EAAY,4BAA4B,GACxCA,EAAY,4BAA6B,KAGzC4C,EAAYzC,EAAU,QAAS,gBAAgB,SAAA+C,GAC7C,IAAMyB,EAASzB,EAAMC,OACf2C,EAAWnB,EAAOc,WAAWiD,mBAC7BoE,EAAanH,EAAchB,GAC3BsM,EAAWnR,EAAUgN,GAAYmE,SACjCtN,EAAUgB,EAAOlB,UAEvBqC,EAAS5F,MAAQyD,EPrLQ,SAACtD,EAAS6C,GAAU7C,EAAQ6Q,cAAc,IAAIC,MAAMjO,EAAO,CAAEkO,SAAS,IAAQ,COsLvGF,CAAcpL,EAAU,UAEpBmL,GACFA,EAAStN,EAEb,IAGAf,EAAYzC,EAAU,QAASmQ,EACjC"}