{"version":3,"file":"wysi.min.js","sources":["../src/settings.js","../src/toolset.js","../src/common.js","../src/utils.js","../src/shortcuts.js","../src/commands.js","../src/listbox.js","../src/popover.js","../src/toolbar.js","../src/filter.js","../src/core.js"],"sourcesContent":["// Default settings\nexport default {\n\n  // Default selector\n  el: '[data-wysi], .wysi-field',\n\n  // Default tools in the toolbar\n  tools: [\n    'format', '|', 'bold', 'italic', '|', \n    {\n      label: 'Text alignment',\n      items: ['alignLeft', 'alignCenter', 'alignRight', 'alignJustify']\n    }, '|',\n    'ul', 'ol', '|', 'indent', 'outdent', '|', 'link', 'image'\n  ],\n\n  // Enable dark mode (toolbar only)\n  darkMode: false,\n\n  // Height of the editable region\n  height: 200,\n\n  // Grow the editable region's height to fit its content\n  autoGrow: false,\n\n  // Hide the toolbar when the editable region is out of focus\n  autoHide: false,\n\n  // Default list of allowed tags\n  // These tags are always allowed regardless of the instance options\n  allowedTags: {\n    br: {\n      attributes: [],\n      styles: [],\n      isEmpty: true\n    }\n  },\n\n  // Custom tags to allow when filtering inserted content\n  customTags: [\n    /* Example:\n\n    {\n      tags: ['table', 'thead', 'tbody', 'tr', 'td', 'th'], // Tags to allow\n      attributes: ['id', 'class'], // These attributes will be permitted for all the tags above\n      styles: ['width'],\n      isEmpty: false\n    }\n\n    */\n  ]\n};","// Supported tools\nexport default {\n  format: {\n    tags: ['p', 'h1', 'h2', 'h3', 'h4'],\n    styles: ['text-align'],\n    label: 'Select block format',\n    paragraph: 'Paragraph',\n    heading: 'Heading'\n  },\n  quote: {\n    tags: ['blockquote'],\n    label: 'Quote'\n  },\n  bold: {\n    tags: ['strong'],\n    alias: ['b'],\n    label: 'Bold'\n  },\n  italic: {\n    tags: ['em'],\n    alias: ['i'],\n    label: 'Italic'\n  },\n  underline: {\n    tags: ['u'],\n    label: 'Underline'\n  },\n  strike: {\n    tags: ['s'],\n    alias: ['del', 'strike'],\n    label: 'Strike-through',\n    command: 'strikeThrough'\n  },\n  alignLeft: {\n    label: 'Align left',\n    command: 'justifyLeft'\n  },\n  alignCenter: {\n    label: 'Align center',\n    command: 'justifyCenter'\n  },\n  alignRight: {\n    label: 'Align right',\n    command: 'justifyRight'\n  },\n  alignJustify: {\n    label: 'Justify',\n    command: 'justifyFull'\n  },\n  ul: {\n    tags: ['ul'],\n    extraTags: ['li'],\n    styles: ['text-align'],\n    label: 'Bulleted list',\n    command: 'insertUnorderedList'\n  },\n  ol: {\n    tags: ['ol'],\n    extraTags: ['li'],\n    styles: ['text-align'],\n    label: 'Numbered list',\n    command: 'insertOrderedList'\n  },\n  indent: {\n    label: 'Increase indent'\n  },\n  outdent: {\n    label: 'Decrease indent'\n  },\n  link: {\n    tags: ['a'],\n    attributes: ['href', 'target'],\n    attributeLabels: ['URL', 'Open link in'],\n    hasForm: true,\n    formOptions: {\n      target: [\n        {\n          label: 'Current tab',\n          value: ''\n        },\n        {\n          label: 'New tab',\n          value: '_blank'\n        }\n      ]\n    },\n    label: 'Link'\n  },\n  image: {\n    tags: ['img'],\n    attributes: ['src', 'alt'],\n    attributeLabels: ['URL', 'Alternative text'],\n    extraSettings: ['size', 'position'],\n    extraSettingLabels: ['Image size', 'Image position'],\n    styles: ['width', 'display', 'margin', 'float'],\n    isEmpty: true,\n    hasForm: true,\n    formOptions: {\n      size: [\n        {\n          label: 'None',\n          value: '',\n          criterion: null \n        },\n        {\n          label: '100%',\n          value: '100%',\n          criterion: { width: '100%' }\n        },\n        {\n          label: '50%',\n          value: '50%',\n          criterion: { width: '50%' }\n        },\n        {\n          label: '25%',\n          value: '25%',\n          criterion: { width: '25%' }\n        }\n      ],\n      position: [\n        {\n          label: 'None',\n          value: '',\n          criterion: null \n        },\n        {\n          label: 'Left',\n          value: 'left',\n          criterion: { float: 'left' }\n        },\n        {\n          label: 'Center',\n          value: 'center',\n          criterion: { margin: 'auto' }\n        },\n        {\n          label: 'Right',\n          value: 'right',\n          criterion: { float: 'right' }\n        }\n      ]\n    },\n    label: 'Image'\n  },\n  hr: {\n    tags: ['hr'],\n    isEmpty: true,\n    label: 'Horizontal line',\n    command: 'insertHorizontalRule'\n  },\n  removeFormat: {\n    label: 'Remove format'\n  },\n  unlink: {\n    label: 'Remove link'\n  }\n};","// Instances storage\nexport const instances = {};\n\n// The CSS class to use for selected elements\nexport const selectedClass = 'wysi-selected';\n\n// Placeholder elements CSS class\nexport const placeholderClass = 'wysi-fragment-placeholder';\n\n// Heading elements\nexport const headingElements = ['H1', 'H2', 'H3', 'H4'];\n\n// Block type HTML elements\nexport const blockElements = ['BLOCKQUOTE', 'HR', 'P', 'OL', 'UL'].concat(headingElements);\n\n// Detect Firefox browser\nexport const isFirefox = navigator.userAgent.search(/Gecko\\//) > -1;","import document from 'document';\nimport { hasClass } from './shortcuts.js';\n\n// Used to store the current DOM selection for later use\nlet currentSelection;\n\n// For storing translated strings\nlet availableTranslations;\n\n// Polyfill for Nodelist.forEach\nif (NodeList !== undefined && NodeList.prototype && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = Array.prototype.forEach;\n}\n\n/**\n * Shortcut for addEventListener to optimize the minified JS.\n * @param {object} context The context to which the listener is attached.\n * @param {string} type Event type.\n * @param {(string|function)} selector Event target if delegation is used, event handler if not.\n * @param {function} [fn] Event handler if delegation is used.\n */\nexport function addListener(context, type, selector, fn) {\n  // Delegate event to the target of the selector\n  if (typeof selector === 'string') {\n    context.addEventListener(type, event => {\n      const target = event.target;\n\n      if (target.matches(selector)) {\n        fn.call(target, event);\n      }\n    });\n\n  // If the selector is not a string then it's a function\n  // in which case we need a regular event listener\n  } else {\n    fn = selector;\n    context.addEventListener(type, fn);\n  }\n}\n\n/**\n * Build an html fragment from a string.\n * @param {string} html The HTML code.\n * @return {object} A document fragment.\n */\nexport function buildFragment(html) {\n  const template = createElement('template');\n\n  template.innerHTML = html.trim();\n  return template.content;\n}\n\n/**\n * Deep clone an object.\n * @param {object} obj The object to clone.\n * @return {object} The clone object.\n */\nexport function cloneObject(obj) {\n  return obj ? JSON.parse(JSON.stringify(obj)) : obj;\n}\n\n/**\n * Create an element and optionally set its attributes.\n * @param {string} tag The HTML tag of the new element.\n * @param {object} [attributes] The element's attributes.\n * @return {object} An HTML element.\n */\nexport function createElement(tag, attributes) {\n  const element = document.createElement(tag);\n\n  if (attributes) {\n    for (const attributeName in attributes) {\n      // Attribute names starting with underscore are actually properties\n      if (attributeName[0] === '_') {\n        element[attributeName.substring(1)] = attributes[attributeName];\n      } else {\n        element.setAttribute(attributeName, attributes[attributeName]);\n      }\n    }\n  }\n\n  return element;\n}\n\n/**\n * Call a function only when the DOM is ready.\n * @param {function} fn The function to call.\n * @param {array} [args] Arguments to pass to the function.\n */\nexport function DOMReady(fn, args) {\n  args = args !== undefined ? args : [];\n\n  if (document.readyState !== 'loading') {\n    fn(...args);\n  } else {\n    addListener(document, 'DOMContentLoaded', () => {\n      fn(...args);\n    });\n  }\n}\n\n/**\n * Find the the deepest child of a node.\n * @param {object} node The target node.\n * @return {object} The deepest child node of our target node.\n */\nexport function findDeepestChildNode(node) {\n  while(node.firstChild !== null) {\n    node = node.firstChild;\n  }\n\n  return node;\n}\n\n/**\n * Find the current editor instance.\n * @param {object} currentNode The possible child node of the editor instance.\n * @return {object} The instance's editable region and toolbar, and an array of nodes that lead to it.\n */\nexport function findInstance(currentNode) {\n  const nodes = [];\n  let ancestor, toolbar, editor;\n\n  // Find all HTML tags between the current node and the editable ancestor\n  while (currentNode && currentNode !== document.body) {\n    const tag = currentNode.tagName;\n\n    if (tag) {\n      if (hasClass(currentNode, 'wysi-wrapper')) {\n        // Editable ancestor found\n        ancestor = currentNode;\n        break;\n      } else {\n        nodes.push(currentNode);\n      }\n    }\n\n    currentNode = currentNode.parentNode;\n  }\n\n  if (ancestor) {\n    const children = ancestor.children;\n\n    toolbar = children[0];\n    editor = children[1];\n  }\n\n  return { toolbar, editor, nodes };\n}\n\n/**\n * Get the current selection.\n * @return {object} The current selection.\n */\nexport function getCurrentSelection() {\n  return currentSelection;\n}\n\n/**\n * Get the html content of a document fragment.\n * @param {string} fragment A document fragment.\n * @return {string} The html content of the fragment.\n */\nexport function getFragmentContent(fragment) {\n  const wrapper = createElement('div');\n\n  wrapper.appendChild(fragment);\n  return wrapper.innerHTML;\n}\n\n/**\n * Get an editor's instance id.\n * @param {object} editor The editor element.\n * @return {string} The instance id.\n */ \nexport function getInstanceId(editor) {\n  return editor.dataset.wid;\n}\n\n/**\n * Get a list of DOM elements based on a selector value.\n * @param {(string|object)} selector A CSS selector string, a DOM element or a list of DOM elements.\n * @return {array} A list of DOM elements.\n */ \nexport function getTargetElements(selector) {\n  // If selector is a string, get the elements that it represents\n  if (typeof selector === 'string') {\n    return Array.from(document.querySelectorAll(selector));\n  }\n\n  // If selector is a DOM element, wrap it in an array\n  if (selector instanceof Node) {\n    return [selector];\n  }\n\n  // If selector is a NodeList or an HTMLCollection, convert it to an array\n  if (selector instanceof NodeList || selector instanceof HTMLCollection) {\n    return Array.from(selector);\n  }\n\n  // If selector is an array, find any DOM elements it contains\n  if (Array.isArray(selector)) {\n    return selector.filter(el => el instanceof Node);\n  }\n\n  return [];\n}\n\n/**\n * Try to guess the textarea element's label if any.\n * @param {object} textarea The textarea element.\n * @return {string} The textarea element's label or an empty string.\n */ \nexport function getTextAreaLabel(textarea) {\n  const parent = textarea.parentNode;\n  const id = textarea.id;\n  let labelElement;\n\n  // If the textarea element is inside a label element\n  if (parent.nodeName === 'LABEL') {\n    labelElement = parent;\n\n  // Or if the textarea element has an id, and there is a label element\n  // with an attribute \"for\" that points to that id\n  } else if (id !== undefined) {\n    labelElement = document.querySelector(`label[for=\"${id}\"]`);\n  }\n\n  // If a label element is found, return the first non empty child text node\n  if (labelElement) {\n    const textNodes = [].filter.call(labelElement.childNodes, n => n.nodeType === 3);\n    const texts = textNodes.map(n => n.textContent.replace(/\\s+/g, ' ').trim());\n    const label = texts.filter(l => l !== '')[0];\n\n    if (label) {\n      return label;\n    }\n  }\n\n  return '';\n}\n\n/**\n * Get a translated string if applicable.\n * @param {string} category The category of the string.\n * @param {string} str The string to translate.\n * @return {string} The translated string, or the original string otherwise.\n */ \nexport function getTranslation(category, str) {\n  if (availableTranslations[category] && availableTranslations[category][str]) {\n    return availableTranslations[category][str];\n  }\n\n  return str;\n}\n\n/**\n * Restore a previous selection if any.\n */\nexport function restoreSelection() {\n  if (currentSelection) {\n    setSelection(currentSelection);\n    currentSelection = undefined;\n  }\n}\n\n/**\n * Set the value of the current selection.\n * @param {object} range The range to set.\n */\nexport function setCurrentSelection(range) {\n  currentSelection = range;\n}\n\n/**\n * Set the selection to a range.\n * @param {object} range The range to select.\n */\nexport function setSelection(range) {\n  const selection = document.getSelection();\n\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n\n/**\n * Store translated strings.\n * @param {object} translations The translated strings.\n */\nexport function storeTranslations(translations) {\n  availableTranslations = translations;\n}\n\n/**\n * Set the expanded state of a button.\n * @param {object} button The button.\n * @param {boolean} expanded The expanded state.\n */\nexport function toggleButton(button, expanded) {\n  button.setAttribute('aria-expanded', expanded);\n}","import document from 'document';\n\n// Shortcuts\nexport const dispatchEvent = (element, event) => element.dispatchEvent(new Event(event, { bubbles: true }));\nexport const execCommand = (command, value = null) => document.execCommand(command, false, value);\nexport const hasClass = (element, classes) => element.classList && element.classList.contains(classes);","import toolset from './toolset.js';\nimport { restoreSelection } from './utils.js';\nimport { execCommand } from './shortcuts.js';\n\n/**\n * Execute an action.\n * @param {string} action The action to execute.\n * @param {object} editor The editor instance.\n * @param {array} [options] Optional action parameters.\n */\nexport function execAction(action, editor, options = []) {\n  const tool = toolset[action];\n  \n  if (tool) {\n    const command = tool.command || action;\n\n    // Restore selection if any\n    restoreSelection();\n\n    // Execute the tool's action\n    execEditorCommand(command, options);\n\n    // Focus the editor instance\n    editor.focus();\n  }\n}\n\n/**\n * Execute an editor command.\n * @param {string} command The command to execute.\n * @param {array} [options] Optional command parameters.\n */\nexport function execEditorCommand(command, options) {\n  switch (command) {\n    // Block level formatting\n    case 'quote':\n      options[0] = 'blockquote';\n    case 'format':\n      execCommand('formatBlock', `<${options[0]}>`);\n      break;\n\n    // Links\n    case 'link':\n      const [linkUrl, linkTarget = '', linkText] = options;\n\n      if (linkText) {\n        const targetAttr = linkTarget !== '' ? ` target=\"${linkTarget}\"` : '';\n        const linkTag = `<a href=\"${linkUrl}\"${targetAttr}>${linkText}</a>`;\n\n        execCommand('insertHTML', linkTag);\n      }\n      break;\n\n    // Images\n    case 'image':\n      const styles = [];\n      const [imageUrl, altText = '', size, position, originalHtml] = options;\n\n      if (size !== '') {\n        styles.push(`width: ${size};`);\n      }\n\n      if (position !== '') {\n        if (position === 'center') {\n          styles.push('display: block; margin: auto;')\n        } else {\n          styles.push(`float: ${position};`);\n        }\n      }\n\n      const styleAttr = styles.length > 0 ? ` style=\"${styles.join(' ')}\"` : '';\n      const image = `<img src=\"${imageUrl}\" alt=\"${altText}\" class=\"wysi-selected\"${styleAttr}>`;\n      const imageTag = originalHtml ? originalHtml.replace(/<img[^>]+>/i, image) : image;\n\n      execCommand('insertHTML', imageTag);\n      break;\n\n    // All the other commands\n    default:\n      execCommand(command);\n  }\n}","import document from 'document';\nimport toolset from './toolset.js';\nimport { instances } from './common.js';\nimport { execAction } from './commands.js';\nimport {\n  addListener,\n  createElement,\n  findInstance,\n  toggleButton\n} from './utils.js';\n\n\n/**\n * Render a list box.\n * @param {object} details The list box properties and data.\n * @return {object} A DOM element containing the list box.\n */\nfunction renderListBox(details) {\n  const label = details.label;\n  const items = details.items;\n  const firstItem = items[0];\n  const classes = ['wysi-listbox'].concat(details.classes || []);\n\n  // List box wrapper\n  const listBox = createElement('div', { class: classes.join(' ') });\n\n  // List box button\n  const button = createElement('button', {\n    type: 'button',\n    title: label,\n    'aria-label': `${label} ${firstItem.label}`,\n    'aria-haspopup': 'listbox',\n    'aria-expanded': false,\n    _innerHTML: renderListBoxItem(firstItem)\n  });\n\n  // List box menu\n  const menu = createElement('div', {\n    role: 'listbox',\n    tabindex: -1,\n    'aria-label': label\n  });\n\n  // List box items\n  items.forEach(item => {\n    const option = createElement('button', {\n      type: 'button',\n      role: 'option',\n      tabindex: -1,\n      'aria-label': item.label,\n      'aria-selected': false,\n      'data-action': item.action,\n      'data-option': item.name || '',\n      _innerHTML: renderListBoxItem(item)\n    });\n\n    menu.appendChild(option);\n  });\n\n  // Tie it all together\n  listBox.appendChild(button);\n  listBox.appendChild(menu);\n\n  return listBox;\n}\n\n/**\n * Render a list box item.\n * @param {object} item The list box item.\n * @return {string} The list box item's content.\n */\nfunction renderListBoxItem(item) {\n  return item.icon ? `<svg><use href=\"#wysi-${item.icon}\"></use></svg>` : item.label;\n}\n\n/**\n * Open a list box.\n * @param {object} button The list box's button.\n */\nfunction openListBox(button) {\n  const isOpen = button.getAttribute('aria-expanded') === 'true';\n  const listBox = button.nextElementSibling;\n  let selectedItem = listBox.querySelector('[aria-selected=\"true\"]');\n\n  if (!selectedItem) {\n    selectedItem = listBox.firstElementChild;\n  }\n\n  toggleButton(button, !isOpen);\n  selectedItem.focus();\n}\n\n/**\n * Select a list box item.\n * @param {object} item The list box item.\n */\nfunction selectListBoxItem(item) {\n  const listBox = item.parentNode;\n  const button = listBox.previousElementSibling;\n  const selectedItem = listBox.querySelector('[aria-selected=\"true\"]');\n\n  if (selectedItem) {\n    selectedItem.setAttribute('aria-selected', 'false');\n  }\n\n  item.setAttribute('aria-selected', 'true');\n  button.innerHTML = item.innerHTML;\n}\n\n/**\n * Close the currently open list box if any.\n */\nfunction closeListBox() {\n  const activeListBox = document.querySelector('.wysi-listbox [aria-expanded=\"true\"]');\n\n  if (activeListBox) {\n    toggleButton(activeListBox, false);\n  }\n}\n\n// list box button click\naddListener(document, 'click', '.wysi-listbox > button', event => {\n  closeListBox();\n  openListBox(event.target);\n  event.stopImmediatePropagation();\n});\n\n// On key press on the list box button\naddListener(document, 'keydown', '.wysi-listbox > button', event => {\n  switch (event.key) {\n    case 'ArrowUp':\n    case 'ArrowDown':\n    case 'Enter':\n    case ' ':\n      openListBox(event.target);\n      event.preventDefault();\n      break;\n  }\n});\n\n// When the mouse moves on a list box item, focus it\naddListener(document.documentElement, 'mousemove', '.wysi-listbox > div > button', event => {\n  event.target.focus();\n});\n\n// On click on an list box item\naddListener(document, 'click', '.wysi-listbox > div > button', event => {\n  const item = event.target;\n  const action = item.dataset.action;\n  const option = item.dataset.option;\n  const { editor } = findInstance(item);\n  const selection = document.getSelection();\n\n  if (selection && editor.contains(selection.anchorNode)) {\n    execAction(action, editor, [option]);\n  }\n\n  selectListBoxItem(item);\n});\n\n// On key press on an item\naddListener(document, 'keydown', '.wysi-listbox > div > button', event => {\n  const item = event.target;\n  const listBox = item.parentNode;\n  const button = listBox.previousElementSibling;\n  let preventDefault = true;\n\n  switch (event.key) {\n    case 'ArrowUp':\n      const prev = item.previousElementSibling;\n\n      if (prev) {\n        prev.focus();\n      }\n\n      break;\n    case 'ArrowDown':\n      const next = item.nextElementSibling;\n\n      if (next) {\n        next.focus();\n      }\n\n      break;\n    case 'Home':\n      listBox.firstElementChild.focus();\n      break;\n    case 'End':\n      listBox.lastElementChild.focus();\n      break;\n    case 'Tab':\n      item.click();\n      break;\n    case 'Escape':\n      toggleButton(button, false);\n      break;\n    default:\n      preventDefault = false;\n  }\n\n  if (preventDefault) {\n    event.preventDefault();\n  }\n});\n\n// Close open popups and dropdowns on click outside\naddListener(document, 'click', event => {\n  closeListBox();\n});\n\nexport { renderListBox, selectListBoxItem };","import document from 'document';\nimport toolset from './toolset.js';\nimport { renderListBox, selectListBoxItem } from './listbox.js';\nimport { selectedClass } from './common.js';\nimport { execAction } from './commands.js';\nimport {\n  addListener,\n  createElement,\n  findInstance,\n  getCurrentSelection,\n  getFragmentContent,\n  getTranslation,\n  restoreSelection,\n  setCurrentSelection,\n  toggleButton\n} from './utils.js';\n\n/**\n * Render a popover form to set a tool's parameters.\n * @param {string} toolName The tool name.\n * @param {object} button The tool's toolbar button.\n * @return {object} A DOM element containing the button and the popover.\n */\nfunction renderPopover(toolName, button) {\n  const tool = toolset[toolName];\n  const labels = tool.attributeLabels;\n  const fields = tool.attributes.map((attribute, i) => {\n    return {\n      name: attribute,\n      label: getTranslation(toolName, labels[i]),\n    }\n  });\n\n  // Popover wrapper\n  const wrapper = createElement('div', {\n    class: 'wysi-popover'\n  });\n\n  // Popover\n  const popover = createElement('div', {\n    tabindex: -1,\n  });\n\n  // Toolbar Button\n  button.setAttribute('aria-haspopup', true);\n  button.setAttribute('aria-expanded', false);\n\n  wrapper.appendChild(button);\n  wrapper.appendChild(popover);\n\n  fields.forEach(field => {\n    // Link target requires special handling later\n    if (toolName !== 'link' || field.name !== 'target') {\n      const label = createElement('label');\n      const span = createElement('span', { _textContent: field.label });\n      const input = createElement('input', { type: 'text', 'data-attribute': field.name });\n\n      label.appendChild(span);\n      label.appendChild(input);\n      popover.appendChild(label);\n    }\n  });\n\n  // Link popover\n  if (toolName === 'link') {\n    // Add the target attribute\n    const targetField = fields.find(f => f.name === 'target');\n\n    if (targetField) {\n      targetField.toolName = toolName;\n      targetField.options = tool.formOptions ? tool.formOptions.target || [] : [];\n      popover.appendChild(createElement('label', { _textContent: targetField.label }));\n      popover.appendChild(renderSegmentedField(targetField));\n    }\n\n    // The link popover needs an extra \"Remove link\" button\n    const extraTool = 'unlink';\n    const label = getTranslation(toolName, toolset[extraTool].label);\n\n    popover.appendChild(createElement('button', {\n      type: 'button',\n      title: label,\n      'aria-label': label,\n      'data-action': extraTool,\n      _innerHTML: `<svg><use href=\"#wysi-delete\"></use></svg>`\n    }));\n  }\n\n  // Image popover\n  if (toolName === 'image') {\n    const imageSettings = tool.extraSettings.map((setting, i) => {\n      return {\n        name: setting,\n        label: getTranslation(toolName, tool.extraSettingLabels[i])\n      }\n    });\n\n    imageSettings.forEach(setting => {\n      setting.toolName = toolName;\n      setting.options = tool.formOptions ? tool.formOptions[setting.name] || [] : [];\n      popover.appendChild(createElement('label', { _textContent: setting.label }));\n      popover.appendChild(renderSegmentedField(setting));\n    });\n  }\n\n  const cancel = createElement('button', {\n    type: 'button',\n    _textContent: getTranslation('popover', 'Cancel')\n  });\n\n  const save = createElement('button', {\n    type: 'button',\n    'data-action': toolName,\n    _textContent: getTranslation('popover', 'Save')\n  });\n\n  popover.appendChild(cancel);\n  popover.appendChild(save);\n\n  return wrapper;\n}\n\n/**\n * Render a segmented form field.\n * @param {object} field The field attributes.\n * @return {object} A DOM element representing the segmented field.\n */\nfunction renderSegmentedField(field) {\n  const segmented = createElement('fieldset', {\n    class: 'wysi-segmented'\n  });\n\n  // Add the fieldset legend for accessibility\n  segmented.appendChild(createElement('legend', { _textContent: field.label }));\n\n  // Add field options\n  field.options.forEach((option, i) => {\n    segmented.appendChild(createElement('input', {\n      id: `wysi-${field.toolName}-${field.name}-${i}`,\n      name: `wysi-${field.toolName}-${field.name}`,\n      type: 'radio',\n      'data-attribute': field.name,\n      value: option.value\n    }));\n    \n    segmented.appendChild(createElement('label', {\n      for: `wysi-${field.toolName}-${field.name}-${i}`,\n      _textContent: getTranslation(field.toolName, option.label)\n    }));\n  });\n\n  return segmented;\n}\n\n/**\n * Open a popover.\n * @param {object} button The popover's button.\n */\nfunction openPopover(button) {\n  const inputs = button.nextElementSibling.querySelectorAll('input[type=\"text\"]');\n  const radioButtons = button.nextElementSibling.querySelectorAll('input[type=\"radio\"]');\n  const selection = document.getSelection();\n  const anchorNode = selection.anchorNode;\n  const { editor, nodes } = findInstance(anchorNode);\n  const values = {};\n\n  if (editor) {\n    // Try to find an existing target of the popover's action from the DOM selection\n    const action = button.dataset.action;\n    const tool = toolset[action];\n    let target = editor.querySelector(`.${selectedClass}`);\n    let selectContents = false;\n\n    // If that fails, look for an element with the selection CSS class\n    if (!target) {\n      target = nodes.filter(node => tool.tags.includes(node.tagName.toLowerCase()))[0];\n      selectContents = true;\n    }\n\n    // If an existing target is found, we will be in modification mode\n    if (target) {\n      const range = document.createRange();\n      \n      // Add the target to a selection range\n      // Depending on the type of the target, select the whole node or just its contents\n      if (selectContents) {\n        range.selectNodeContents(target);\n      } else {\n        range.selectNode(target);\n      }\n\n      // Save the current selection for later use\n      setCurrentSelection(range);\n\n      // Retrieve the current attribute values of the target for modification\n      tool.attributes.forEach(attribute => {\n        values[attribute] = target.getAttribute(attribute);\n      });\n\n      // Process extra popover settings\n      if (tool.extraSettings) {\n        tool.extraSettings.forEach(setting => {\n          const settingOptions = tool.formOptions[setting];\n\n          for (const option of settingOptions) {\n            if (!option.criterion) {\n              continue;\n            }\n\n            const key = Object.keys(option.criterion)[0];\n            const value = option.criterion[key];\n\n            if (target.style[key] && target.style[key] === value) {\n              values[setting] = option.value;\n              break;\n            }\n          }\n        });\n      }\n\n    // If no existing target is found, we are adding new content\n    } else if (selection && editor.contains(anchorNode) && selection.rangeCount) {\n      // Save the current selection to keep track of where to insert the content\n      setCurrentSelection(selection.getRangeAt(0));\n    }\n  }\n\n  // Populate the input fields with the existing values if any\n  inputs.forEach(input => {\n    input.value = values[input.dataset.attribute] || '';\n  });\n\n  // Check the relevent radio fields if any\n  radioButtons.forEach(radio => {\n    const value = values[radio.dataset.attribute] || '';\n\n    if (radio.value === value) {\n      radio.checked = true;\n    }\n  });\n\n  // Open this popover\n  toggleButton(button, true);\n\n  // Focus the first input field\n  inputs[0].focus();\n}\n\n/**\n * Execute a popover's action.\n * @param {object} button The popover's action button.\n */\nfunction execPopoverAction(button) {\n  const action = button.dataset.action;\n  const selection = getCurrentSelection();\n  const inputs = button.parentNode.querySelectorAll('input[type=\"text\"]');\n  const radioButtons = button.parentNode.querySelectorAll('input[type=\"radio\"]');\n  const { editor } = findInstance(button);\n  const options = [];\n\n  inputs.forEach(input => {\n    options.push(input.value);\n  });\n\n  radioButtons.forEach(radio => {\n    if (radio.checked) {\n      options.push(radio.value);\n    }\n  });\n\n  // Workaround for links being removed when updating images\n  if (action === 'image') {\n    const selected = editor.querySelector(`.${selectedClass}`);\n    const parent = selected ? selected.parentNode : {};\n\n    if (selected && parent.tagName === 'A') {\n      options.push(parent.outerHTML);\n    }\n\n  // Save the content of the current selection to use as a link text\n  } else if (action === 'link' && selection) {\n    options.push(getFragmentContent(selection.cloneContents()));\n  }\n\n  execAction(action, editor, options);\n}\n\n/**\n * Close the open popover if any.\n * @param {boolean} ignoreSelection If true, do not restore the previous selection.\n */\nfunction closePopover(ignoreSelection) {\n  const popover = document.querySelector('.wysi-popover [aria-expanded=\"true\"]');\n\n  if (popover) {\n    toggleButton(popover, false);\n  }\n\n  if (!ignoreSelection) {\n    restoreSelection();\n  }\n}\n\n// Open a popover\naddListener(document, 'click', '.wysi-popover > button', event => {\n  closePopover();\n  openPopover(event.target);\n  event.stopImmediatePropagation();\n});\n\n// Execute the popover action\naddListener(document, 'click', '.wysi-popover > div > button[data-action]', event => {\n  execPopoverAction(event.target);\n  closePopover(true);\n});\n\n// Cancel the popover\naddListener(document, 'click', '.wysi-popover > div > button:not([data-action])', event => {\n  closePopover();\n});\n\n// Prevent clicks on the popover content to propagate (keep popover open)\naddListener(document, 'click', '.wysi-popover *:not(button)', event => {\n  event.stopImmediatePropagation();\n});\n\n// Trap focus inside a popover until it's closed\naddListener(document, 'keydown', '.wysi-popover *', event => {\n  const target = event.target;\n  const parent = target.parentNode;\n  const form = parent.tagName === 'DIV' ? parent : parent.parentNode;\n\n  switch (event.key) {\n    case 'Tab':\n      const firstField = form.querySelector('input');\n\n      if (event.shiftKey) {\n        if (target === firstField) {\n          form.lastElementChild.focus();\n          event.preventDefault();\n        }\n      } else {\n        if (!target.nextElementSibling && !target.parentNode.nextElementSibling) {\n          firstField.focus();\n          event.preventDefault();\n        }\n      }\n      break;\n    case 'Enter':\n      if (target.tagName === 'INPUT') {\n        const actionButton = form.querySelector('[data-action]:last-of-type');\n\n        actionButton.click();\n        event.preventDefault();\n      }\n      break;\n    case 'Escape':\n      closePopover();\n      break;\n  }\n\n});\n\nlet isSelectionInProgress = false;\n\n// Close open popups and dropdowns on click outside\naddListener(document, 'click', event => {\n  if (!isSelectionInProgress) {\n    closePopover();\n  }\n});\n\n// Text selection within a popover is in progress\n// This helps avoid closing a popover when the end of a text selection is outside it\naddListener(document, 'mousedown', '.wysi-popover, .wysi-popover *', event => {\n  isSelectionInProgress = true;\n});\n\n// The text selection ended\naddListener(document, 'mouseup', event => {\n  setTimeout(() => { isSelectionInProgress = false; });\n});\n\nexport { renderPopover };","import document from 'document';\nimport toolset from './toolset.js';\nimport { renderPopover } from './popover.js';\nimport { renderListBox, selectListBoxItem } from './listbox.js';\nimport { instances, selectedClass } from './common.js';\nimport { execAction } from './commands.js';\nimport {\n  addListener,\n  buildFragment,\n  createElement,\n  DOMReady,\n  findDeepestChildNode,\n  findInstance,\n  getInstanceId,\n  getTranslation,\n  setSelection\n} from './utils.js';\n\n/**\n * Render the toolbar.\n * @param {array} tools The list of tools in the toolbar.\n * @return {string} The toolbars HTML string.\n */\nfunction renderToolbar(tools) {\n  const toolbar = createElement('div', { class: 'wysi-toolbar' });\n\n  // Generate toolbar buttons\n  tools.forEach(toolName => {\n    switch (toolName) {\n      // Toolbar separator\n      case '|':\n        toolbar.appendChild(createElement('div', { class: 'wysi-separator' }));\n        break;\n\n      // Toolbar new line\n      case '-':\n        toolbar.appendChild(createElement('div', { class: 'wysi-newline' }));\n        break;\n\n      // The format tool renders as a list box\n      case 'format':\n        toolbar.appendChild(renderFormatTool());\n        break;\n\n      // All the other tools render as buttons\n      default:\n        if (typeof toolName === 'object') {\n          if (toolName.items) {\n            toolbar.appendChild(renderToolGroup(toolName));\n          }\n        } else {\n          renderTool(toolName, toolbar);\n        }\n    }\n  });\n\n  return toolbar;\n}\n\n/**\n * Render a tool.\n * @param {string} name The tool's name.\n * @param {object} toolbar The toolbar to which the tool will be appended.\n */\nfunction renderTool(name, toolbar) {\n  const tool = toolset[name];\n  const label = getTranslation(name, tool.label);\n  const button = createElement('button', {\n    type: 'button',\n    title: label,\n    'aria-label': label,\n    'aria-pressed': false,\n    'data-action': name,\n    _innerHTML: `<svg><use href=\"#wysi-${name}\"></use></svg>`\n  });\n\n  // Tools that require parameters (e.g: image, link) need a popover\n  if (tool.hasForm) {\n    const popover = renderPopover(name, button);\n    toolbar.appendChild(popover);\n\n  // The other tools only display a button\n  } else {\n    toolbar.appendChild(button);\n  }\n}\n\n/**\n * Render a tool group.\n * @param {object} details The group's properties.\n * @return {object} A DOM element containing the tool group.\n */\nfunction renderToolGroup(details) {\n  const label = details.label || getTranslation('toolbar', 'Select an item');\n  const options = details.items;\n\n  const items = options.map(option => {\n    const tool = toolset[option];\n    const label = getTranslation(option, tool.label);\n    const icon = option;\n    const action = option;\n\n    return { label, icon, action };\n  });\n\n  return renderListBox({ label, items });\n}\n\n/**\n * Render format tool.\n * @return {object} A DOM element containing the format tool.\n */\nfunction renderFormatTool() {\n  const toolName = 'format';\n  const label = getTranslation(toolName, toolset.format.label);\n  const paragraphLabel = getTranslation(toolName, toolset.format.paragraph);\n  const headingLabel = getTranslation(toolName, toolset.format.heading);\n  const classes = 'wysi-format';\n  const items = toolset.format.tags.map(tag => { \n    const name = tag;\n    const label = tag === 'p' ? paragraphLabel : `${headingLabel} ${tag.substring(1)}`;\n    const action = 'format';\n\n    return { name, label, action };\n  });\n\n  return renderListBox({ label, items, classes });\n}\n\n/**\n * Update toolbar buttons state.\n */\nfunction updateToolbarState() {\n  const selection = document.getSelection();\n  const anchorNode = selection.anchorNode;\n\n  if (!anchorNode) {\n    return;\n  }\n\n  const range = selection.getRangeAt(0);\n\n  // This is to fix double click selection on Firefox not highlighting the relevant tool in some cases\n  // We want to find the deepest child node to properly handle nested styles\n  const candidateNode = findDeepestChildNode(range.startContainer.nextElementSibling || range.startContainer);\n\n  // Fallback to the original selection.anchorNode if a more suitable node is not found\n  const selectedNode = range.intersectsNode(candidateNode) ? candidateNode : anchorNode;\n\n  // Get editor instance\n  const { toolbar, editor, nodes } = findInstance(selectedNode);\n  const tags = nodes.map(node => node.tagName.toLowerCase());\n\n  // Abort if the selection is not within an editor instance\n  if (!editor) {\n    return;\n  }\n\n  // Check for an element with the selection class (likely an image)\n  const selectedObject = editor.querySelector(`.${selectedClass}`);\n\n  // If such element exists, add its tag to the list of active tags\n  if (selectedObject) {\n    tags.push(selectedObject.tagName.toLowerCase());\n  }\n\n  // Get the list of allowed tags in the current editor instance\n  const instanceId = getInstanceId(editor);\n  const allowedTags = instances[instanceId].allowedTags;\n\n  // Reset the state of all buttons\n  toolbar.querySelectorAll('[aria-pressed=\"true\"]').forEach(button => button.setAttribute('aria-pressed', 'false'));\n\n  // Reset the state of all list boxes\n  toolbar.querySelectorAll('.wysi-listbox > div > button:first-of-type').forEach(button => selectListBoxItem(button));\n\n  // Update the buttons states\n  tags.forEach((tag, i) => {\n    switch (tag) {\n      case 'p':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'li':\n        const format = toolbar.querySelector(`[data-action=\"format\"][data-option=\"${tag}\"]`);\n        const textAlign = nodes[i].style.textAlign || nodes[i].getAttribute('align');\n\n        if (format) {\n          selectListBoxItem(format);\n        }\n\n        // Check for text align\n        if (textAlign) {\n          const action = 'align' + textAlign.charAt(0).toUpperCase() + textAlign.slice(1);\n          const button = toolbar.querySelector(`[data-action=\"${action}\"]`);\n          \n          if (button) {\n            if (button.parentNode.getAttribute('role') === 'listbox') {\n              selectListBoxItem(button);\n            } else {\n              button.setAttribute('aria-pressed', 'true');\n            }\n          }\n        }\n        break;\n      default:\n        const allowedTag = allowedTags[tag];\n        const action = allowedTag ? allowedTag.toolName : undefined;\n\n        if (action) {\n          const button = toolbar.querySelector(`[data-action=\"${action}\"]`);\n          button.setAttribute('aria-pressed', 'true');\n        }\n    }    \n  });\n}\n\n/**\n * Embed SVG icons in the HTML document.\n */\nfunction embedSVGIcons() {\n  // The icons will be included during the build process\n  const icons = '_SVGIcons_';\n  const svgElement = buildFragment(icons);\n\n  document.body.appendChild(svgElement);\n}\n\n// Deselect selected element when clicking outside\naddListener(document, 'mousedown', '.wysi-editor, .wysi-editor *', event => {\n  const selected = document.querySelector(`.${selectedClass}`);\n\n  if (selected && selected !== event.target) {\n    selected.classList.remove(selectedClass);\n  }\n});\n\n// Select an image when it's clicked\naddListener(document, 'mousedown', '.wysi-editor img', event => {\n  const image = event.target;\n  const range = document.createRange();\n\n  image.classList.add(selectedClass);\n\n  range.selectNode(image);\n  setSelection(range);\n});\n\n// Toolbar button click\naddListener(document, 'click', '.wysi-toolbar > button', event => {\n  const button = event.target;\n  const action = button.dataset.action;\n  const { editor } = findInstance(button);\n  const selection = document.getSelection();\n\n  if (selection && editor.contains(selection.anchorNode)) {\n    execAction(action, editor);\n  }\n});\n\n// Update the toolbar buttons state\naddListener(document, 'selectionchange', updateToolbarState);\naddListener(document, 'input', '.wysi-editor', updateToolbarState);\n\n// include SVG icons\nDOMReady(embedSVGIcons);\n\nexport { renderToolbar };","import settings from './settings.js';\nimport toolset from './toolset.js';\nimport { buildFragment, cloneObject, createElement } from './utils.js';\nimport { blockElements } from './common.js';\n\nconst STYLE_ATTRIBUTE = 'style';\nconst ALIGN_ATTRIBUTE = 'align';\n\n/**\n * Enable HTML tags belonging to a set of tools.\n * @param {array} tools A array of tool objects.\n * @return {object} The list of allowed tags.\n */\nfunction enableTags(tools) {\n  const allowedTags = cloneObject(settings.allowedTags);\n\n  tools.forEach(toolName => {\n    const tool = cloneObject(toolset[toolName]);\n\n    if (!tool || !tool.tags) {\n      return;\n    }\n\n    const isEmpty = !!tool.isEmpty;\n    const extraTags = tool.extraTags || [];\n    const aliasList = tool.alias || [];\n    const alias = aliasList.length ? tool.tags[0] : undefined;\n    const tags = [...tool.tags, ...extraTags, ...aliasList];\n    const attributes = tool.attributes || [];\n    const styles = tool.styles || [];\n\n    tags.forEach(tag => {\n      allowedTags[tag] = { attributes, styles, alias, isEmpty };\n      \n      if (!extraTags.includes(tag)) {\n        allowedTags[tag].toolName = toolName;\n      }\n    });\n  });\n\n  return allowedTags;\n}\n\n/**\n * Prepare raw content for editing.\n * @param {string} content The raw content.\n * @param {array} allowedTags The list of allowed tags.\n * @param {boolean} filterOnly If true, only filter the content, without further cleaning.\n * @return {string} The filtered HTML content.\n */\nfunction prepareContent(content, allowedTags, filterOnly) {\n  const container = createElement('div');\n  const fragment = buildFragment(content);\n\n  filterContent(fragment, allowedTags);\n\n  if (!filterOnly) {\n    wrapTextNodes(fragment);\n    cleanContent(fragment, allowedTags);\n  }\n\n  container.appendChild(fragment);\n\n  return container.innerHTML;\n}\n\n/**\n * Replace a DOM element with another while preserving its content.\n * @param {object} node The element to replace.\n * @param {string} tag The HTML tag of the new element.\n * @param {boolean} [copyAttributes] If true, also copy the original element's attributes.\n */\nfunction replaceNode(node, tag, copyAttributes) {\n  const newElement = createElement(tag);\n  const parentNode = node.parentNode;\n  const attributes = node.attributes;\n\n  // Copy the original element's content\n  newElement.innerHTML = node.innerHTML || node.textContent || node.outerHTML;\n\n  // Copy the original element's attributes\n  if (copyAttributes && attributes) {\n    for (let i = 0; i < attributes.length; i++) {\n      newElement.setAttribute(attributes[i].name, attributes[i].value);\n    }\n  }\n\n  // Replace the element\n  parentNode.replaceChild(newElement, node);\n}\n\n/**\n * Remove unsupported CSS styles from a node.\n * @param {object} node The element to filter.\n * @param {array} allowedStyles An array of supported styles.\n */\nfunction filterStyles(node, allowedStyles) {\n  const styleAttribute = node.getAttribute(STYLE_ATTRIBUTE);\n\n  if (styleAttribute) {\n    // Parse the styles\n    const styles = styleAttribute.split(';').map(style => {\n      const prop = style.split(':');\n      \n      return {\n        name: prop[0].trim(),\n        value: prop[1]\n      };\n    })\n    // Filter the styles\n    .filter(style => allowedStyles.includes(style.name))\n\n    // Remove text-align: left\n    .filter(style => style.name !== 'text-align' || style.value.trim() !== 'left')\n\n    // Convert back to a style string\n    .map(({ name, value }) => `${name}: ${value.trim()};`).join('');\n\n    if (styles !== '') {\n      node.setAttribute(STYLE_ATTRIBUTE, styles);\n    } else {\n      node.removeAttribute(STYLE_ATTRIBUTE);\n    }\n  }\n}\n\n/**\n * Remove unsupported HTML tags and attributes.\n * @param {object} node The parent element to filter recursively.\n * @param {array} allowedTags The list of allowed tags.\n */\nfunction filterContent(node, allowedTags) {\n  const children = Array.from(node.childNodes);\n\n  if (!children || !children.length) {\n    return;\n  }\n\n  children.forEach(childNode => {\n    // Element nodes\n    if (childNode.nodeType === 1) {\n      // Filter recursively (deeper nodes first)\n      filterContent(childNode, allowedTags);\n\n      // Check if the current element is allowed\n      const tag = childNode.tagName.toLowerCase();\n      const allowedTag = allowedTags[tag];\n      const attributes = Array.from(childNode.attributes);\n\n      // Check for the deprecated align attribute (mainly in Firefox)\n      const deprecatedAlignAttribute = childNode.getAttribute(ALIGN_ATTRIBUTE);\n\n      if (allowedTag) {\n        const allowedAttributes = allowedTag.attributes || [];\n        const allowedStyles = allowedTag.styles || [];\n\n        // Remove attributes that are not allowed\n        for (let i = 0; i < attributes.length; i++) {\n          const attributeName = attributes[i].name;\n\n          if (!allowedAttributes.includes(attributes[i].name)) {\n            // Replace deprecated align attribute with text-align style\n            if (attributeName === ALIGN_ATTRIBUTE) {\n              if (deprecatedAlignAttribute !== 'left') {\n                childNode.style.textAlign = deprecatedAlignAttribute;\n              }\n            }\n\n            if (attributeName === STYLE_ATTRIBUTE && allowedStyles.length) {\n              filterStyles(childNode, allowedStyles);\n            } else {\n              childNode.removeAttribute(attributes[i].name);\n            }\n          }\n        }\n\n        // If the tag is an alias, replace it with the standard tag\n        // e.g: <b> tags will be replaced with <strong> tags\n        if (allowedTag.alias) {\n          replaceNode(childNode, allowedTag.alias, true);\n        }\n      } else {\n        // Remove style nodes\n        if (tag === 'style') {\n          node.removeChild(childNode);\n\n        // And unwrap the other nodes\n        } else {\n          // Fix bad alignment handling on Firefox\n          if (deprecatedAlignAttribute !== null) {\n            if (childNode.parentNode && childNode.parentNode.tagName === 'LI') {\n              childNode.parentNode.style.textAlign = deprecatedAlignAttribute;\n            } else {\n              for (const divChild of childNode.childNodes) {\n                divChild.style.textAlign = deprecatedAlignAttribute;\n              }\n            }\n          }\n\n          childNode.replaceWith(...childNode.childNodes);\n        }\n      }\n\n    // Remove comment nodes\n    } else if (childNode.nodeType === 8) {\n      node.removeChild(childNode);\n    }\n  });\n}\n\n/**\n * Remove empty nodes.\n * @param {object} node The parent element to filter recursively.\n * @param {array} allowedTags The list of allowed tags.\n */\nfunction cleanContent(node, allowedTags) {\n  const children = Array.from(node.childNodes);\n\n  if (!children || !children.length) {\n    return;\n  }\n\n  children.forEach(childNode => {\n    // Remove empty element nodes\n    if (childNode.nodeType === 1) {\n      // Filter recursively (deeper nodes first)\n      cleanContent(childNode, allowedTags);\n\n      // Check if the element can be empty\n      const tag = childNode.tagName.toLowerCase();\n      const allowedTag = allowedTags[tag];\n\n      if (allowedTag && !allowedTag.isEmpty && trimText(childNode.innerHTML) === '') {\n        node.removeChild(childNode);\n      }\n    }\n  });\n}\n\n/**\n * Wrap the child text nodes in a paragraph (non-recursively).\n * @param {object} node The parent element of the text nodes.\n */\nfunction wrapTextNodes(node) {\n  const children = Array.from(node.childNodes);\n\n  if (!children || !children.length) {\n    return;\n  }\n\n  let appendToPrev = false;\n\n  children.forEach(childNode => {\n    if (childNode.nodeType !== 3 && blockElements.includes(childNode.tagName)) {\n      appendToPrev = false;\n      return;\n    }\n\n    // Remove empty text node\n    /*if (trimText(childNode.textContent) === '') {\n      node.removeChild(childNode);\n\n    // Wrap text node in a paragraph\n    } else {*/\n      if (appendToPrev) {\n        const prev = childNode.previousElementSibling;\n\n        if (prev) {\n          prev.appendChild(childNode);\n        }\n      } else {\n        replaceNode(childNode, 'p');\n        appendToPrev = true;\n      }\n    /*}*/\n  });\n}\n\n/**\n * Trim whitespace from the start and end of a text.\n * @param {string} text The text to trim.\n * @return {string} The trimmed text.\n */\nfunction trimText(text) {\n  return text.replace(/^\\s+|\\s+$/g, '').trim();\n}\n\nexport {\n  enableTags,\n  prepareContent\n};","import window from 'window';\nimport document from 'document';\nimport settings from './settings.js';\nimport { renderToolbar } from './toolbar.js';\nimport { enableTags, prepareContent } from './filter.js';\nimport {\n  instances,\n  placeholderClass,\n  headingElements,\n  blockElements,\n  isFirefox\n} from './common.js';\nimport { \n  addListener,\n  cloneObject,\n  createElement,\n  DOMReady,\n  findInstance,\n  getInstanceId,\n  getTargetElements,\n  getTextAreaLabel,\n  storeTranslations\n} from './utils.js';\nimport {\n  dispatchEvent,\n  execCommand,\n  hasClass\n} from './shortcuts.js';\n\n\n// Next available instance id\nlet nextId = 0;\n\n/**\n * Init WYSIWYG editor instances.\n * @param {object} options Configuration options.\n */\nfunction init(options) {\n  const globalTranslations = window.wysiGlobalTranslations || {};\n  const translations = Object.assign({}, globalTranslations, options.translations || {});\n\n  // Store translated strings\n  storeTranslations(translations);\n\n  const tools = options.tools || settings.tools;\n  const selector = options.el || settings.el;\n  const targetEls = getTargetElements(selector);\n  const toolbar = renderToolbar(tools);\n  const allowedTags = enableTags(tools);\n  const customTags = options.customTags || [];\n\n  // Add custom tags if any to the allowed tags list\n  customTags.forEach(custom => {\n    if (custom.tags) {\n      const attributes = custom.attributes || [];\n      const styles = custom.styles || [];\n      const isEmpty = !!custom.isEmpty;\n\n      custom.tags.forEach(tag => {\n        allowedTags[tag] = { attributes, styles, isEmpty };\n      });\n    }\n  });\n\n  // Append an editor instance to target elements\n  targetEls.forEach(field => {\n    const sibling = field.previousElementSibling;\n\n    if (!sibling || !hasClass(sibling, 'wysi-wrapper')) {\n      const instanceId = nextId++;\n\n      // Store the instance's options \n      instances[instanceId] = options;\n\n      // Cache the list of allowed tags in the instance\n      instances[instanceId].allowedTags = cloneObject(allowedTags);\n\n      // Wrapper\n      const wrapper = createElement('div', {\n        class: 'wysi-wrapper'\n      });\n\n      // Editable region\n      const editor = createElement('div', {\n        class: 'wysi-editor',\n        contenteditable: true,\n        role: 'textbox',\n        'aria-multiline': true,\n        'aria-label': getTextAreaLabel(field),\n        'data-wid': instanceId,\n        _innerHTML: prepareContent(field.value, allowedTags)\n      });      \n\n      // Insert the editor instance in the document\n      wrapper.appendChild(toolbar.cloneNode(true));\n      wrapper.appendChild(editor);\n      field.before(wrapper);\n\n      // Apply configuration\n      configure(wrapper, options);\n\n    // Reconfigure instance\n    } else {\n      configure(sibling, options);\n    }\n  });\n}\n\n/**\n * Configure a WYSIWYG editor instance.\n * @param {object} instance The editor instance to configure.\n * @param {object} options The configuration options.\n */\nfunction configure(instance, options) {\n  if (typeof options !== 'object') {\n    return;\n  }\n\n  for (const key in options) {\n    switch (key) {\n      case 'darkMode':\n      case 'autoGrow':\n      case 'autoHide':\n        instance.classList.toggle(`wysi-${key.toLowerCase()}`, !!options[key]);\n        break;\n      case 'height':\n        const height = options.height;\n\n        if (!isNaN(height)) {\n          const editor = instance.lastChild;\n\n          editor.style.minHeight = `${height}px`;\n          editor.style.maxHeight = `${height}px`;\n        }\n        break;\n    }\n  }\n}\n\n/**\n * Destroy a WYSIWYG editor instance.\n * @param {string} selector One or more selectors pointing to textarea fields.\n */\nfunction destroy(selector) {\n  document.querySelectorAll(selector).forEach(field => {\n    const sibling = field.previousElementSibling;\n\n    if (sibling && hasClass(sibling, 'wysi-wrapper')) {\n      const instanceId = getInstanceId(sibling.lastChild);\n\n      delete instances[instanceId];\n      sibling.remove();\n    }\n  });\n}\n\n/**\n * Clean up content before pasting it in an editor.\n * @param {object} event The browser's paste event.\n */\nfunction cleanPastedContent(event) {\n  const { editor, nodes } = findInstance(event.target);\n  const clipboardData = event.clipboardData;\n\n  if (editor && clipboardData.types.includes('text/html')) {\n    const pasted = clipboardData.getData('text/html');\n    const instanceId = getInstanceId(editor);\n    const allowedTags = instances[instanceId].allowedTags;\n    let content = prepareContent(pasted, allowedTags);\n\n    // Detect a heading tag in the current selection\n    const splitHeadingTag = nodes.filter(n => headingElements.includes(n.tagName)).length > 0;\n\n    // Force split the heading tag if any.\n    // This fixes a bug in Webkit/Blink browsers where the whole content is converted to a heading\n    if (splitHeadingTag && !isFirefox) {\n      const splitter = `<h1 class=\"${placeholderClass}\"><br></h1><p class=\"${placeholderClass}\"><br></p>`;\n      content = splitter + content + splitter;\n    }\n\n    // Manually paste the cleaned content\n    execCommand('insertHTML', content);\n\n    if (splitHeadingTag && !isFirefox) {\n      // Remove placeholder elements if any\n      editor.querySelectorAll(`.${placeholderClass}`).forEach(fragment => {\n        fragment.remove();\n      });\n\n      // Unwrap nested heading elements to fix a bug in Webkit/Blink browsers\n      editor.querySelectorAll(headingElements.join()).forEach(heading => {\n        const firstChild = heading.firstElementChild;\n\n        if (firstChild && blockElements.includes(firstChild.tagName)) {\n          heading.replaceWith(...heading.childNodes);\n        }\n      });\n    }\n\n    // Prevent the default paste action\n    event.preventDefault();\n  }\n}\n\n\n/**\n * Bootstrap the WYSIWYG editor.\n */\nfunction bootstrap() {\n  // Configure editable regions\n  execCommand('styleWithCSS', false);\n  execCommand('enableObjectResizing', false);\n  execCommand('enableInlineTableEditing', false);\n  execCommand('defaultParagraphSeparator', 'p');\n\n  // Update the textarea value when the editor's content changes\n  addListener(document, 'input', '.wysi-editor', event => {\n    const editor = event.target;\n    const textarea = editor.parentNode.nextElementSibling;\n    const instanceId = getInstanceId(editor);\n    const onChange = instances[instanceId].onChange;\n    const content = prepareContent(editor.innerHTML, instances[instanceId].allowedTags, true);\n\n    textarea.value = content;\n    dispatchEvent(textarea, 'change');\n\n    if (onChange) {\n      onChange(content);\n    }\n  });\n\n  // Clean up pasted content\n  addListener(document, 'paste', cleanPastedContent);\n}\n\n// Expose Wysi to the global scope\nwindow.Wysi = (() => {\n  const methods = {\n    destroy: destroy\n  };\n\n  function Wysi(options) {\n    DOMReady(() => {\n      init(options || {});\n    });\n  }\n\n  for (const key in methods) {\n    Wysi[key] = (...args) => {\n      DOMReady(methods[key], args);\n    };\n  }\n\n  return Wysi;\n})();\n\n// Bootstrap Wysi when the DOM is ready\nDOMReady(bootstrap);\n"],"names":["settings","el","tools","label","items","darkMode","height","autoGrow","autoHide","allowedTags","br","attributes","styles","isEmpty","customTags","toolset","format","tags","paragraph","heading","quote","bold","alias","italic","underline","strike","command","alignLeft","alignCenter","alignRight","alignJustify","ul","extraTags","ol","indent","outdent","link","attributeLabels","hasForm","formOptions","target","value","image","extraSettings","extraSettingLabels","size","criterion","width","position","float","margin","hr","removeFormat","unlink","currentSelection","availableTranslations","instances","selectedClass","placeholderClass","headingElements","blockElements","concat","isFirefox","navigator","userAgent","search","execCommand","document","hasClass","element","classes","classList","contains","addListener","context","type","selector","fn","addEventListener","event","matches","call","buildFragment","html","template","createElement","innerHTML","trim","content","cloneObject","obj","JSON","parse","stringify","tag","attributeName","substring","setAttribute","DOMReady","args","undefined","readyState","apply","findInstance","currentNode","ancestor","toolbar","editor","nodes","body","tagName","push","parentNode","children","getInstanceId","dataset","wid","getTextAreaLabel","textarea","labelElement","parent","id","nodeName","querySelector","filter","childNodes","n","nodeType","map","textContent","replace","l","getTranslation","category","str","restoreSelection","setSelection","setCurrentSelection","range","selection","getSelection","removeAllRanges","addRange","toggleButton","button","expanded","execAction","action","options","tool","linkUrl","_options$","linkTarget","linkText","imageUrl","_options$2","altText","originalHtml","length","join","imageTag","execEditorCommand","focus","renderListBox","details","firstItem","listBox","class","title","_innerHTML","renderListBoxItem","menu","role","tabindex","forEach","item","option","name","appendChild","icon","openListBox","isOpen","getAttribute","nextElementSibling","selectedItem","firstElementChild","selectListBoxItem","previousElementSibling","closeListBox","activeListBox","renderSegmentedField","field","segmented","_textContent","i","toolName","for","execPopoverAction","fragment","wrapper","inputs","querySelectorAll","radioButtons","input","radio","checked","selected","outerHTML","cloneContents","closePopover","ignoreSelection","popover","NodeList","prototype","Array","stopImmediatePropagation","key","preventDefault","documentElement","anchorNode","prev","next","lastElementChild","click","_findInstance","values","selectContents","node","includes","toLowerCase","createRange","selectNodeContents","selectNode","attribute","setting","_step","_iterator","_createForOfIteratorHelperLoose","done","Object","keys","style","rangeCount","getRangeAt","openPopover","form","firstField","shiftKey","isSelectionInProgress","renderToolbar","paragraphLabel","headingLabel","renderFormatTool","labels","fields","span","targetField","find","f","extraTool","cancel","save","renderPopover","renderTool","updateToolbarState","candidateNode","firstChild","findDeepestChildNode","startContainer","intersectsNode","selectedObject","instanceId","textAlign","charAt","toUpperCase","slice","allowedTag","setTimeout","remove","add","svgElement","STYLE_ATTRIBUTE","ALIGN_ATTRIBUTE","prepareContent","filterOnly","container","filterContent","from","appendToPrev","childNode","replaceNode","wrapTextNodes","cleanContent","copyAttributes","newElement","replaceChild","filterStyles","allowedStyles","styleAttribute","split","prop","_ref","removeAttribute","deprecatedAlignAttribute","allowedAttributes","removeChild","replaceWith","nextId","init","globalTranslations","window","wysiGlobalTranslations","translations","storeTranslations","assign","targetEls","Node","HTMLCollection","isArray","getTargetElements","aliasList","enableTags","custom","sibling","configure","contenteditable","cloneNode","before","instance","toggle","isNaN","lastChild","minHeight","maxHeight","destroy","cleanPastedContent","clipboardData","types","pasted","getData","splitHeadingTag","splitter","Wysi","methods","_loop","_len","arguments","_key","onChange","dispatchEvent","Event","bubbles"],"mappings":";;;;;4BACe,IAAAA,EAAA,CAGbC,GAAI,2BAGJC,MAAO,CACL,SAAU,IAAK,OAAQ,SAAU,IACjC,CACEC,MAAO,iBACPC,MAAO,CAAC,YAAa,cAAe,aAAc,iBACjD,IACH,KAAM,KAAM,IAAK,SAAU,UAAW,IAAK,OAAQ,SAIrDC,UAAU,EAGVC,OAAQ,IAGRC,UAAU,EAGVC,UAAU,EAIVC,YAAa,CACXC,GAAI,CACFC,WAAY,GACZC,OAAQ,GACRC,SAAS,IAKbC,WAAY,ICtCCC,EAAA,CACbC,OAAQ,CACNC,KAAM,CAAC,IAAK,KAAM,KAAM,KAAM,MAC9BL,OAAQ,CAAC,cACTT,MAAO,sBACPe,UAAW,YACXC,QAAS,WAEXC,MAAO,CACLH,KAAM,CAAC,cACPd,MAAO,SAETkB,KAAM,CACJJ,KAAM,CAAC,UACPK,MAAO,CAAC,KACRnB,MAAO,QAEToB,OAAQ,CACNN,KAAM,CAAC,MACPK,MAAO,CAAC,KACRnB,MAAO,UAETqB,UAAW,CACTP,KAAM,CAAC,KACPd,MAAO,aAETsB,OAAQ,CACNR,KAAM,CAAC,KACPK,MAAO,CAAC,MAAO,UACfnB,MAAO,iBACPuB,QAAS,iBAEXC,UAAW,CACTxB,MAAO,aACPuB,QAAS,eAEXE,YAAa,CACXzB,MAAO,eACPuB,QAAS,iBAEXG,WAAY,CACV1B,MAAO,cACPuB,QAAS,gBAEXI,aAAc,CACZ3B,MAAO,UACPuB,QAAS,eAEXK,GAAI,CACFd,KAAM,CAAC,MACPe,UAAW,CAAC,MACZpB,OAAQ,CAAC,cACTT,MAAO,gBACPuB,QAAS,uBAEXO,GAAI,CACFhB,KAAM,CAAC,MACPe,UAAW,CAAC,MACZpB,OAAQ,CAAC,cACTT,MAAO,gBACPuB,QAAS,qBAEXQ,OAAQ,CACN/B,MAAO,mBAETgC,QAAS,CACPhC,MAAO,mBAETiC,KAAM,CACJnB,KAAM,CAAC,KACPN,WAAY,CAAC,OAAQ,UACrB0B,gBAAiB,CAAC,MAAO,gBACzBC,SAAS,EACTC,YAAa,CACXC,OAAQ,CACN,CACErC,MAAO,cACPsC,MAAO,IAET,CACEtC,MAAO,UACPsC,MAAO,YAIbtC,MAAO,QAETuC,MAAO,CACLzB,KAAM,CAAC,OACPN,WAAY,CAAC,MAAO,OACpB0B,gBAAiB,CAAC,MAAO,oBACzBM,cAAe,CAAC,OAAQ,YACxBC,mBAAoB,CAAC,aAAc,kBACnChC,OAAQ,CAAC,QAAS,UAAW,SAAU,SACvCC,SAAS,EACTyB,SAAS,EACTC,YAAa,CACXM,KAAM,CACJ,CACE1C,MAAO,OACPsC,MAAO,GACPK,UAAW,MAEb,CACE3C,MAAO,OACPsC,MAAO,OACPK,UAAW,CAAEC,MAAO,SAEtB,CACE5C,MAAO,MACPsC,MAAO,MACPK,UAAW,CAAEC,MAAO,QAEtB,CACE5C,MAAO,MACPsC,MAAO,MACPK,UAAW,CAAEC,MAAO,SAGxBC,SAAU,CACR,CACE7C,MAAO,OACPsC,MAAO,GACPK,UAAW,MAEb,CACE3C,MAAO,OACPsC,MAAO,OACPK,UAAW,CAAEG,MAAO,SAEtB,CACE9C,MAAO,SACPsC,MAAO,SACPK,UAAW,CAAEI,OAAQ,SAEvB,CACE/C,MAAO,QACPsC,MAAO,QACPK,UAAW,CAAEG,MAAO,YAI1B9C,MAAO,SAETgD,GAAI,CACFlC,KAAM,CAAC,MACPJ,SAAS,EACTV,MAAO,kBACPuB,QAAS,wBAEX0B,aAAc,CACZjD,MAAO,iBAETkD,OAAQ,CACNlD,MAAO,s0BC1JJ,ICGHmD,EAGAC,EDNSC,EAAY,CAAA,EAGZC,EAAgB,gBAGhBC,EAAmB,4BAGnBC,EAAkB,CAAC,KAAM,KAAM,KAAM,MAGrCC,EAAgB,CAAC,aAAc,KAAM,IAAK,KAAM,MAAMC,OAAOF,GAG7DG,EAAYC,UAAUC,UAAUC,OAAO,YAAc,EEZrDC,EAAc,SAACxC,EAASe,GAAY,YAAP,IAALA,IAAAA,EAAQ,MAAS0B,EAASD,YAAYxC,GAAS,EAAOe,EAAM,EACpF2B,EAAW,SAACC,EAASC,GAAO,OAAKD,EAAQE,WAAaF,EAAQE,UAAUC,SAASF,EAAQ,EDgB/F,SAASG,EAAYC,EAASC,EAAMC,EAAUC,GAE3B,iBAAbD,EACTF,EAAQI,iBAAiBH,GAAM,SAAAI,GAC7B,IAAMvC,EAASuC,EAAMvC,OAEjBA,EAAOwC,QAAQJ,IACjBC,EAAGI,KAAKzC,EAAQuC,EAEpB,KAKAF,EAAKD,EACLF,EAAQI,iBAAiBH,EAAME,GAEnC,CAOO,SAASK,EAAcC,GAC5B,IAAMC,EAAWC,EAAc,YAG/B,OADAD,EAASE,UAAYH,EAAKI,OACnBH,EAASI,OAClB,CAOO,SAASC,EAAYC,GAC1B,OAAOA,EAAMC,KAAKC,MAAMD,KAAKE,UAAUH,IAAQA,CACjD,CAQO,SAASL,EAAcS,EAAKnF,GACjC,IAAM0D,EAAUF,EAASkB,cAAcS,GAEvC,GAAInF,EACF,IAAK,IAAMoF,KAAiBpF,EAED,MAArBoF,EAAc,GAChB1B,EAAQ0B,EAAcC,UAAU,IAAMrF,EAAWoF,GAEjD1B,EAAQ4B,aAAaF,EAAepF,EAAWoF,IAKrD,OAAO1B,CACT,CAOO,SAAS6B,EAASrB,EAAIsB,GAC3BA,OAAgBC,IAATD,EAAqBA,EAAO,GAEP,YAAxBhC,EAASkC,WACXxB,EAAEyB,WAAIH,EAAAA,GAEN1B,EAAYN,EAAU,oBAAoB,WACxCU,EAAEyB,WAAIH,EAAAA,EACR,GAEJ,CAoBO,SAASI,EAAaC,GAK3B,IAJA,IACIC,EAAUC,EAASC,EADjBC,EAAQ,GAIPJ,GAAeA,IAAgBrC,EAAS0C,MAAM,CAGnD,GAFYL,EAAYM,QAEf,CACP,GAAI1C,EAASoC,EAAa,gBAAiB,CAEzCC,EAAWD,EACX,KACF,CACEI,EAAMG,KAAKP,EAEf,CAEAA,EAAcA,EAAYQ,UAC5B,CAEA,GAAIP,EAAU,CACZ,IAAMQ,EAAWR,EAASQ,SAE1BP,EAAUO,EAAS,GACnBN,EAASM,EAAS,EACpB,CAEA,MAAO,CAAEP,QAAAA,EAASC,OAAAA,EAAQC,MAAAA,EAC5B,CA2BO,SAASM,EAAcP,GAC5B,OAAOA,EAAOQ,QAAQC,GACxB,CAoCO,SAASC,EAAiBC,GAC/B,IAEIC,EAFEC,EAASF,EAASN,WAClBS,EAAKH,EAASG,GAcpB,GAVwB,UAApBD,EAAOE,SACTH,EAAeC,OAICpB,IAAPqB,IACTF,EAAepD,EAASwD,cAA4BF,cAAAA,SAIlDF,EAAc,CAChB,IAEMpH,EAFY,GAAGyH,OAAO3C,KAAKsC,EAAaM,YAAY,SAAAC,GAAC,OAAmB,IAAfA,EAAEC,YACzCC,KAAI,SAAAF,GAAC,OAAIA,EAAEG,YAAYC,QAAQ,OAAQ,KAAK3C,UAChDqC,QAAO,SAAAO,GAAC,MAAU,KAANA,KAAU,GAE1C,GAAIhI,EACF,OAAOA,CAEX,CAEA,MAAO,EACT,CAQO,SAASiI,EAAeC,EAAUC,GACvC,OAAI/E,EAAsB8E,IAAa9E,EAAsB8E,GAAUC,GAC9D/E,EAAsB8E,GAAUC,GAGlCA,CACT,CAKO,SAASC,IACVjF,IACFkF,EAAalF,GACbA,OAAmB8C,EAEvB,CAMO,SAASqC,EAAoBC,GAClCpF,EAAmBoF,CACrB,CAMO,SAASF,EAAaE,GAC3B,IAAMC,EAAYxE,EAASyE,eAE3BD,EAAUE,kBACVF,EAAUG,SAASJ,EACrB,CAeO,SAASK,EAAaC,EAAQC,GACnCD,EAAO/C,aAAa,gBAAiBgD,EACvC,CElSO,SAASC,EAAWC,EAAQxC,EAAQyC,QAAO,IAAPA,IAAAA,EAAU,IACnD,IAAMC,EAAOtI,EAAQoI,GAErB,GAAIE,EAAM,CACR,IAAM3H,EAAU2H,EAAK3H,SAAWyH,EAGhCZ,IAeG,SAA2B7G,EAAS0H,GACzC,OAAQ1H,GAEN,IAAK,QACH0H,EAAQ,GAAK,aACf,IAAK,SACHlF,EAAY,cAAmBkF,IAAAA,EAAQ,QACvC,MAGF,IAAK,OACH,IAAOE,EAAsCF,EAAO,GAAAG,EAAPH,EAAO,GAApCI,OAAa,IAAHD,EAAG,GAAEA,EAAEE,EAAYL,EAAO,GAEpD,GAAIK,EAIFvF,EAAY,aAFgBoF,YAAAA,OADM,KAAfE,EAAgCA,YAAAA,MAAgB,IAClB,IAAIC,EAAc,QAIrE,MAGF,IAAK,QACH,IAAM7I,EAAS,GACR8I,EAAwDN,EAAO,GAAAO,EAAPP,EAAO,GAArDQ,OAAU,IAAHD,EAAG,GAAEA,EAAE9G,EAAgCuG,EAAO,GAAjCpG,EAA0BoG,EAAO,GAAvBS,EAAgBT,EAAO,GAEzD,KAATvG,GACFjC,EAAOmG,KAAelE,UAAAA,OAGP,KAAbG,IACe,WAAbA,EACFpC,EAAOmG,KAAK,iCAEZnG,EAAOmG,KAAe/D,UAAAA,QAI1B,IACMN,EAAqBgH,aAAAA,YAAkBE,EAAO,2BADlChJ,EAAOkJ,OAAS,EAAelJ,WAAAA,EAAOmJ,KAAK,SAAU,IACmB,IACpFC,EAAWH,EAAeA,EAAa3B,QAAQ,cAAexF,GAASA,EAE7EwB,EAAY,aAAc8F,GAC1B,MAGF,QACE9F,EAAYxC,GAElB,CA7DIuI,CAAkBvI,EAAS0H,GAG3BzC,EAAOuD,OACT,CACF,CCRA,SAASC,EAAcC,GACrB,IAAMjK,EAAQiK,EAAQjK,MAChBC,EAAQgK,EAAQhK,MAChBiK,EAAYjK,EAAM,GAIlBkK,EAAUjF,EAAc,MAAO,CAAEkF,MAHvB,CAAC,gBAAgB1G,OAAOuG,EAAQ9F,SAAW,IAGLyF,KAAK,OAGrDf,EAAS3D,EAAc,SAAU,CACrCV,KAAM,SACN6F,MAAOrK,EACP,aAAiBA,EAASkK,IAAAA,EAAUlK,MACpC,gBAAiB,UACjB,iBAAiB,EACjBsK,WAAYC,EAAkBL,KAI1BM,EAAOtF,EAAc,MAAO,CAChCuF,KAAM,UACNC,UAAW,EACX,aAAc1K,IAuBhB,OAnBAC,EAAM0K,SAAQ,SAAAC,GACZ,IAAMC,EAAS3F,EAAc,SAAU,CACrCV,KAAM,SACNiG,KAAM,SACNC,UAAW,EACX,aAAcE,EAAK5K,MACnB,iBAAiB,EACjB,cAAe4K,EAAK5B,OACpB,cAAe4B,EAAKE,MAAQ,GAC5BR,WAAYC,EAAkBK,KAGhCJ,EAAKO,YAAYF,EACnB,IAGAV,EAAQY,YAAYlC,GACpBsB,EAAQY,YAAYP,GAEbL,CACT,CAOA,SAASI,EAAkBK,GACzB,OAAOA,EAAKI,KAAgCJ,yBAAAA,EAAKI,KAAI,iBAAmBJ,EAAK5K,KAC/E,CAMA,SAASiL,EAAYpC,GACnB,IAAMqC,EAAkD,SAAzCrC,EAAOsC,aAAa,iBAC7BhB,EAAUtB,EAAOuC,mBACnBC,EAAelB,EAAQ3C,cAAc,0BAEpC6D,IACHA,EAAelB,EAAQmB,mBAGzB1C,EAAaC,GAASqC,GACtBG,EAAatB,OACf,CAMA,SAASwB,EAAkBX,GACzB,IAAMT,EAAUS,EAAK/D,WACfgC,EAASsB,EAAQqB,uBACjBH,EAAelB,EAAQ3C,cAAc,0BAEvC6D,GACFA,EAAavF,aAAa,gBAAiB,SAG7C8E,EAAK9E,aAAa,gBAAiB,QACnC+C,EAAO1D,UAAYyF,EAAKzF,SAC1B,CAKA,SAASsG,IACP,IAAMC,EAAgB1H,EAASwD,cAAc,wCAEzCkE,GACF9C,EAAa8C,GAAe,EAEhC,CCSA,SAASC,EAAqBC,GAC5B,IAAMC,EAAY3G,EAAc,WAAY,CAC1CkF,MAAO,mBAsBT,OAlBAyB,EAAUd,YAAY7F,EAAc,SAAU,CAAE4G,aAAcF,EAAM5L,SAGpE4L,EAAM3C,QAAQ0B,SAAQ,SAACE,EAAQkB,GAC7BF,EAAUd,YAAY7F,EAAc,QAAS,CAC3CoC,GAAE,QAAUsE,EAAMI,aAAYJ,EAAMd,KAAI,IAAIiB,EAC5CjB,aAAcc,EAAMI,SAAYJ,IAAAA,EAAMd,KACtCtG,KAAM,QACN,iBAAkBoH,EAAMd,KACxBxI,MAAOuI,EAAOvI,SAGhBuJ,EAAUd,YAAY7F,EAAc,QAAS,CAC3C+G,IAAG,QAAUL,EAAMI,aAAYJ,EAAMd,KAAI,IAAIiB,EAC7CD,aAAc7D,EAAe2D,EAAMI,SAAUnB,EAAO7K,SAExD,IAEO6L,CACT,CAoGA,SAASK,EAAkBrD,GACzB,IJ1FiCsD,EAC3BC,EIyFApD,EAASH,EAAO7B,QAAQgC,OACxBR,EJnGCrF,EIoGDkJ,EAASxD,EAAOhC,WAAWyF,iBAAiB,sBAC5CC,EAAe1D,EAAOhC,WAAWyF,iBAAiB,uBAChD9F,EAAWJ,EAAayC,GAAxBrC,OACFyC,EAAU,GAahB,GAXAoD,EAAO1B,SAAQ,SAAA6B,GACbvD,EAAQrC,KAAK4F,EAAMlK,MACrB,IAEAiK,EAAa5B,SAAQ,SAAA8B,GACfA,EAAMC,SACRzD,EAAQrC,KAAK6F,EAAMnK,MAEvB,IAGe,UAAX0G,EAAoB,CACtB,IAAM2D,EAAWnG,EAAOgB,cAAa,IAAKlE,GACpC+D,EAASsF,EAAWA,EAAS9F,WAAa,CAAA,EAE5C8F,GAA+B,MAAnBtF,EAAOV,SACrBsC,EAAQrC,KAAKS,EAAOuF,UAIxB,KAAsB,SAAX5D,GAAqBR,GAC9BS,EAAQrC,MJtHuBuF,EIsHC3D,EAAUqE,iBJrHtCT,EAAUlH,EAAc,QAEtB6F,YAAYoB,GACbC,EAAQjH,YIqHf4D,EAAWC,EAAQxC,EAAQyC,EAC7B,CAMA,SAAS6D,EAAaC,GACpB,IAAMC,EAAUhJ,EAASwD,cAAc,wCAEnCwF,GACFpE,EAAaoE,GAAS,GAGnBD,GACH3E,GAEJ,MJnSiBnC,IAAbgH,UAA0BA,SAASC,YAAcD,SAASC,UAAUvC,UACpEsC,SAASC,UAAUvC,QAAUwC,MAAMD,UAAUvC,SG8GjDrG,EAAYN,EAAU,QAAS,0BAA0B,SAAAY,GACvD6G,IACAR,EAAYrG,EAAMvC,QAClBuC,EAAMwI,0BACR,IAGA9I,EAAYN,EAAU,UAAW,0BAA0B,SAAAY,GACzD,OAAQA,EAAMyI,KACZ,IAAK,UACL,IAAK,YACL,IAAK,QACL,IAAK,IACHpC,EAAYrG,EAAMvC,QAClBuC,EAAM0I,iBAGZ,IAGAhJ,EAAYN,EAASuJ,gBAAiB,YAAa,gCAAgC,SAAA3I,GACjFA,EAAMvC,OAAO0H,OACf,IAGAzF,EAAYN,EAAU,QAAS,gCAAgC,SAAAY,GAC7D,IAAMgG,EAAOhG,EAAMvC,OACb2G,EAAS4B,EAAK5D,QAAQgC,OACtB6B,EAASD,EAAK5D,QAAQ6D,OACpBrE,EAAWJ,EAAawE,GAAxBpE,OACFgC,EAAYxE,EAASyE,eAEvBD,GAAahC,EAAOnC,SAASmE,EAAUgF,aACzCzE,EAAWC,EAAQxC,EAAQ,CAACqE,IAG9BU,EAAkBX,EACpB,IAGAtG,EAAYN,EAAU,UAAW,gCAAgC,SAAAY,GAC/D,IAAMgG,EAAOhG,EAAMvC,OACb8H,EAAUS,EAAK/D,WACfgC,EAASsB,EAAQqB,uBACnB8B,GAAiB,EAErB,OAAQ1I,EAAMyI,KACZ,IAAK,UACH,IAAMI,EAAO7C,EAAKY,uBAEdiC,GACFA,EAAK1D,QAGP,MACF,IAAK,YACH,IAAM2D,EAAO9C,EAAKQ,mBAEdsC,GACFA,EAAK3D,QAGP,MACF,IAAK,OACHI,EAAQmB,kBAAkBvB,QAC1B,MACF,IAAK,MACHI,EAAQwD,iBAAiB5D,QACzB,MACF,IAAK,MACHa,EAAKgD,QACL,MACF,IAAK,SACHhF,EAAaC,GAAQ,GACrB,MACF,QACEyE,GAAiB,EAGjBA,GACF1I,EAAM0I,gBAEV,IAGAhJ,EAAYN,EAAU,SAAS,SAAAY,GAC7B6G,GACF,ICgGAnH,EAAYN,EAAU,QAAS,0BAA0B,SAAAY,GACvDkI,IAnJF,SAAqBjE,GACnB,IAAMwD,EAASxD,EAAOuC,mBAAmBkB,iBAAiB,sBACpDC,EAAe1D,EAAOuC,mBAAmBkB,iBAAiB,uBAC1D9D,EAAYxE,EAASyE,eACrB+E,EAAahF,EAAUgF,WAC7BK,EAA0BzH,EAAaoH,GAA/BhH,EAAMqH,EAANrH,OAAQC,EAAKoH,EAALpH,MACVqH,EAAS,CAAA,EAEf,GAAItH,EAAQ,CAEV,IAAMwC,EAASH,EAAO7B,QAAQgC,OACxBE,EAAOtI,EAAQoI,GACjB3G,EAASmE,EAAOgB,cAAa,IAAKlE,GAClCyK,GAAiB,EASrB,GANK1L,IACHA,EAASoE,EAAMgB,QAAO,SAAAuG,GAAI,OAAI9E,EAAKpI,KAAKmN,SAASD,EAAKrH,QAAQuH,kBAAgB,GAC9EH,GAAiB,GAIf1L,EAAQ,CACV,IAAMkG,EAAQvE,EAASmK,cAInBJ,EACFxF,EAAM6F,mBAAmB/L,GAEzBkG,EAAM8F,WAAWhM,GAInBiG,EAAoBC,GAGpBW,EAAK1I,WAAWmK,SAAQ,SAAA2D,GACtBR,EAAOQ,GAAajM,EAAO8I,aAAamD,EAC1C,IAGIpF,EAAK1G,eACP0G,EAAK1G,cAAcmI,SAAQ,SAAA4D,GAGzB,IAFA,IAEmCC,EAAnCC,EAAAC,EAFuBxF,EAAK9G,YAAYmM,MAELC,EAAAC,KAAAE,MAAE,CAAA,IAA1B9D,EAAM2D,EAAAlM,MACf,GAAKuI,EAAOlI,UAAZ,CAIA,IAAM0K,EAAMuB,OAAOC,KAAKhE,EAAOlI,WAAW,GACpCL,EAAQuI,EAAOlI,UAAU0K,GAE/B,GAAIhL,EAAOyM,MAAMzB,IAAQhL,EAAOyM,MAAMzB,KAAS/K,EAAO,CACpDwL,EAAOS,GAAW1D,EAAOvI,MACzB,KACF,CARA,CASF,CACF,GAIJ,MAAWkG,GAAahC,EAAOnC,SAASmJ,IAAehF,EAAUuG,YAE/DzG,EAAoBE,EAAUwG,WAAW,GAE7C,CAGA3C,EAAO1B,SAAQ,SAAA6B,GACbA,EAAMlK,MAAQwL,EAAOtB,EAAMxF,QAAQsH,YAAc,EACnD,IAGA/B,EAAa5B,SAAQ,SAAA8B,GACnB,IAAMnK,EAAQwL,EAAOrB,EAAMzF,QAAQsH,YAAc,GAE7C7B,EAAMnK,QAAUA,IAClBmK,EAAMC,SAAU,EAEpB,IAGA9D,EAAaC,GAAQ,GAGrBwD,EAAO,GAAGtC,OACZ,CA4DEkF,CAAYrK,EAAMvC,QAClBuC,EAAMwI,0BACR,IAGA9I,EAAYN,EAAU,QAAS,6CAA6C,SAAAY,GAC1EsH,EAAkBtH,EAAMvC,QACxByK,GAAa,EACf,IAGAxI,EAAYN,EAAU,QAAS,mDAAmD,SAAAY,GAChFkI,GACF,IAGAxI,EAAYN,EAAU,QAAS,+BAA+B,SAAAY,GAC5DA,EAAMwI,0BACR,IAGA9I,EAAYN,EAAU,UAAW,mBAAmB,SAAAY,GAClD,IAAMvC,EAASuC,EAAMvC,OACfgF,EAAShF,EAAOwE,WAChBqI,EAA0B,QAAnB7H,EAAOV,QAAoBU,EAASA,EAAOR,WAExD,OAAQjC,EAAMyI,KACZ,IAAK,MACH,IAAM8B,EAAaD,EAAK1H,cAAc,SAElC5C,EAAMwK,SACJ/M,IAAW8M,IACbD,EAAKvB,iBAAiB5D,QACtBnF,EAAM0I,kBAGHjL,EAAO+I,oBAAuB/I,EAAOwE,WAAWuE,qBACnD+D,EAAWpF,QACXnF,EAAM0I,kBAGV,MACF,IAAK,QACH,GAAuB,UAAnBjL,EAAOsE,QACYuI,EAAK1H,cAAc,8BAE3BoG,QACbhJ,EAAM0I,iBAER,MACF,IAAK,SACHR,IAIN,IAEA,IAAIuC,GAAwB,ECpV5B,SAASC,EAAcvP,GACrB,IAAMwG,EAAUrB,EAAc,MAAO,CAAEkF,MAAO,iBAgC9C,OA7BArK,EAAM4K,SAAQ,SAAAqB,GACZ,OAAQA,GAEN,IAAK,IACHzF,EAAQwE,YAAY7F,EAAc,MAAO,CAAEkF,MAAO,oBAClD,MAGF,IAAK,IACH7D,EAAQwE,YAAY7F,EAAc,MAAO,CAAEkF,MAAO,kBAClD,MAGF,IAAK,SACH7D,EAAQwE,YAuEhB,WACE,IAAMiB,EAAW,SACXhM,EAAQiI,EAAe+D,EAAUpL,EAAQC,OAAOb,OAChDuP,EAAiBtH,EAAe+D,EAAUpL,EAAQC,OAAOE,WACzDyO,EAAevH,EAAe+D,EAAUpL,EAAQC,OAAOG,SACvDmD,EAAU,cACVlE,EAAQW,EAAQC,OAAOC,KAAK+G,KAAI,SAAAlC,GAKpC,MAAO,CAAEmF,KAJInF,EAIE3F,MAHO,MAAR2F,EAAc4J,EAAoBC,MAAgB7J,EAAIE,UAAU,GAGxDmD,OAFP,SAGjB,IAEA,OAAOgB,EAAc,CAAEhK,MAAAA,EAAOC,MAAAA,EAAOkE,QAAAA,GACvC,CAtF4BsL,IACpB,MAGF,QAC0B,iBAAbzD,EACLA,EAAS/L,OACXsG,EAAQwE,aA6CZ/K,GADiBiK,EA5CuB+B,GA6CxBhM,OAASiI,EAAe,UAAW,kBAGnDhI,EAFUgK,EAAQhK,MAEF4H,KAAI,SAAAgD,GAMxB,MAAO,CAAE7K,MAJKiI,EAAe4C,EADhBjK,EAAQiK,GACqB7K,OAI1BgL,KAHHH,EAGS7B,OAFP6B,EAGjB,IAEOb,EAAc,CAAEhK,MAAAA,EAAOC,MAAAA,MAzChC,SAAoB6K,EAAMvE,GACxB,IAAM2C,EAAOtI,EAAQkK,GACf9K,EAAQiI,EAAe6C,EAAM5B,EAAKlJ,OAClC6I,EAAS3D,EAAc,SAAU,CACrCV,KAAM,SACN6F,MAAOrK,EACP,aAAcA,EACd,gBAAgB,EAChB,cAAe8K,EACfR,oCAAqCQ,EAAI,mBAI3C,GAAI5B,EAAK/G,QAAS,CAChB,IAAM6K,EDvDV,SAAuBhB,EAAUnD,GAC/B,IAAMK,EAAOtI,EAAQoL,GACf0D,EAASxG,EAAKhH,gBACdyN,EAASzG,EAAK1I,WAAWqH,KAAI,SAACyG,EAAWvC,GAC7C,MAAO,CACLjB,KAAMwD,EACNtO,MAAOiI,EAAe+D,EAAU0D,EAAO3D,IAE3C,IAGMK,EAAUlH,EAAc,MAAO,CACnCkF,MAAO,iBAIH4C,EAAU9H,EAAc,MAAO,CACnCwF,UAAW,IAwBb,GApBA7B,EAAO/C,aAAa,iBAAiB,GACrC+C,EAAO/C,aAAa,iBAAiB,GAErCsG,EAAQrB,YAAYlC,GACpBuD,EAAQrB,YAAYiC,GAEpB2C,EAAOhF,SAAQ,SAAAiB,GAEb,GAAiB,SAAbI,GAAsC,WAAfJ,EAAMd,KAAmB,CAClD,IAAM9K,EAAQkF,EAAc,SACtB0K,EAAO1K,EAAc,OAAQ,CAAE4G,aAAcF,EAAM5L,QACnDwM,EAAQtH,EAAc,QAAS,CAAEV,KAAM,OAAQ,iBAAkBoH,EAAMd,OAE7E9K,EAAM+K,YAAY6E,GAClB5P,EAAM+K,YAAYyB,GAClBQ,EAAQjC,YAAY/K,EACtB,CACF,IAGiB,SAAbgM,EAAqB,CAEvB,IAAM6D,EAAcF,EAAOG,MAAK,SAAAC,GAAC,MAAe,WAAXA,EAAEjF,QAEnC+E,IACFA,EAAY7D,SAAWA,EACvB6D,EAAY5G,QAAUC,EAAK9G,aAAc8G,EAAK9G,YAAYC,QAAe,GACzE2K,EAAQjC,YAAY7F,EAAc,QAAS,CAAE4G,aAAc+D,EAAY7P,SACvEgN,EAAQjC,YAAYY,EAAqBkE,KAI3C,IAAMG,EAAY,SACZhQ,EAAQiI,EAAe+D,EAAUpL,EAAQoP,GAAWhQ,OAE1DgN,EAAQjC,YAAY7F,EAAc,SAAU,CAC1CV,KAAM,SACN6F,MAAOrK,EACP,aAAcA,EACd,cAAegQ,EACf1F,WAAU,+CAEd,CAGiB,UAAb0B,GACoB9C,EAAK1G,cAAcqF,KAAI,SAAC0G,EAASxC,GACrD,MAAO,CACLjB,KAAMyD,EACNvO,MAAOiI,EAAe+D,EAAU9C,EAAKzG,mBAAmBsJ,IAE5D,IAEcpB,SAAQ,SAAA4D,GACpBA,EAAQvC,SAAWA,EACnBuC,EAAQtF,QAAUC,EAAK9G,aAAc8G,EAAK9G,YAAYmM,EAAQzD,OAAc,GAC5EkC,EAAQjC,YAAY7F,EAAc,QAAS,CAAE4G,aAAcyC,EAAQvO,SACnEgN,EAAQjC,YAAYY,EAAqB4C,GAC3C,IAGF,IAAM0B,EAAS/K,EAAc,SAAU,CACrCV,KAAM,SACNsH,aAAc7D,EAAe,UAAW,YAGpCiI,EAAOhL,EAAc,SAAU,CACnCV,KAAM,SACN,cAAewH,EACfF,aAAc7D,EAAe,UAAW,UAM1C,OAHA+E,EAAQjC,YAAYkF,GACpBjD,EAAQjC,YAAYmF,GAEb9D,CACT,CC1CoB+D,CAAcrF,EAAMjC,GACpCtC,EAAQwE,YAAYiC,EAGtB,MACEzG,EAAQwE,YAAYlC,EAExB,CAlCUuH,CAAWpE,EAAUzF,GAyC/B,IAAyB0D,EACjBjK,EAGAC,CA1CN,IAEOsG,CACT,CA2EA,SAAS8J,IACP,IAAM7H,EAAYxE,EAASyE,eACrB+E,EAAahF,EAAUgF,WAE7B,GAAKA,EAAL,CAIA,IAAMjF,EAAQC,EAAUwG,WAAW,GAI7BsB,ELtCD,SAA8BtC,GACnC,KAA0B,OAApBA,EAAKuC,YACTvC,EAAOA,EAAKuC,WAGd,OAAOvC,CACT,CKgCwBwC,CAAqBjI,EAAMkI,eAAerF,oBAAsB7C,EAAMkI,gBAM5F5C,EAAmCzH,EAHdmC,EAAMmI,eAAeJ,GAAiBA,EAAgB9C,GAGnEjH,EAAOsH,EAAPtH,QAASC,EAAMqH,EAANrH,OAAQC,EAAKoH,EAALpH,MACnB3F,EAAO2F,EAAMoB,KAAI,SAAAmG,GAAI,OAAIA,EAAKrH,QAAQuH,iBAG5C,GAAK1H,EAAL,CAKA,IAAMmK,EAAiBnK,EAAOgB,cAAa,IAAKlE,GAG5CqN,GACF7P,EAAK8F,KAAK+J,EAAehK,QAAQuH,eAInC,IAAM0C,EAAa7J,EAAcP,GAC3BlG,EAAc+C,EAAUuN,GAAYtQ,YAG1CiG,EAAQ+F,iBAAiB,yBAAyB3B,SAAQ,SAAA9B,GAAM,OAAIA,EAAO/C,aAAa,eAAgB,YAGxGS,EAAQ+F,iBAAiB,8CAA8C3B,SAAQ,SAAA9B,GAAM,OAAI0C,EAAkB1C,MAG3G/H,EAAK6J,SAAQ,SAAChF,EAAKoG,GACjB,OAAQpG,GACN,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,IAAM9E,EAAS0F,EAAQiB,cAAqD7B,uCAAAA,QACtEkL,EAAYpK,EAAMsF,GAAG+C,MAAM+B,WAAapK,EAAMsF,GAAGZ,aAAa,SAOpE,GALItK,GACF0K,EAAkB1K,GAIhBgQ,EAAW,CACb,IAAM7H,EAAS,QAAU6H,EAAUC,OAAO,GAAGC,cAAgBF,EAAUG,MAAM,GACvEnI,EAAStC,EAAQiB,cAA+BwB,iBAAAA,QAElDH,IAC6C,YAA3CA,EAAOhC,WAAWsE,aAAa,QACjCI,EAAkB1C,GAElBA,EAAO/C,aAAa,eAAgB,QAG1C,CACA,MACF,QACE,IAAMmL,EAAa3Q,EAAYqF,GACzBqD,EAASiI,EAAaA,EAAWjF,cAAW/F,EAElD,GAAI+C,EACazC,EAAQiB,cAA+BwB,iBAAAA,QAC/ClD,aAAa,eAAgB,QAG5C,GA3DA,CAlBA,CA8EF,CDsJAxB,EAAYN,EAAU,SAAS,SAAAY,GACxByK,GACHvC,GAEJ,IAIAxI,EAAYN,EAAU,YAAa,kCAAkC,SAAAY,GACnEyK,GAAwB,CAC1B,IAGA/K,EAAYN,EAAU,WAAW,SAAAY,GAC/BsM,YAAW,WAAQ7B,GAAwB,CAAO,GACpD,ICvJA/K,EAAYN,EAAU,YAAa,gCAAgC,SAAAY,GACjE,IAAM+H,EAAW3I,EAASwD,cAAa,IAAKlE,GAExCqJ,GAAYA,IAAa/H,EAAMvC,QACjCsK,EAASvI,UAAU+M,OAAO7N,EAE9B,IAGAgB,EAAYN,EAAU,YAAa,oBAAoB,SAAAY,GACrD,IAAMrC,EAAQqC,EAAMvC,OACdkG,EAAQvE,EAASmK,cAEvB5L,EAAM6B,UAAUgN,IAAI9N,GAEpBiF,EAAM8F,WAAW9L,GACjB8F,EAAaE,EACf,IAGAjE,EAAYN,EAAU,QAAS,0BAA0B,SAAAY,GACvD,IAAMiE,EAASjE,EAAMvC,OACf2G,EAASH,EAAO7B,QAAQgC,OACtBxC,EAAWJ,EAAayC,GAAxBrC,OACFgC,EAAYxE,EAASyE,eAEvBD,GAAahC,EAAOnC,SAASmE,EAAUgF,aACzCzE,EAAWC,EAAQxC,EAEvB,IAGAlC,EAAYN,EAAU,kBAAmBqM,GACzC/L,EAAYN,EAAU,QAAS,eAAgBqM,GAG/CtK,GA7CA,WAEE,IACMsL,EAAatM,EADL,qoMAGdf,EAAS0C,KAAKqE,YAAYsG,EAC5B,IC9NA,IAAMC,EAAkB,QAClBC,EAAkB,QA4CxB,SAASC,EAAenM,EAAS/E,EAAamR,GAC5C,IAAMC,EAAYxM,EAAc,OAC1BiH,EAAWpH,EAAcM,GAW/B,OATAsM,EAAcxF,EAAU7L,GAEnBmR,KA2LP,SAAuBzD,GACrB,IAAMlH,EAAWqG,MAAMyE,KAAK5D,EAAKtG,YAEjC,IAAKZ,IAAaA,EAAS6C,OACzB,OAGF,IAAIkI,GAAe,EAEnB/K,EAAS6D,SAAQ,SAAAmH,GACf,GAA2B,IAAvBA,EAAUlK,UAAkBnE,EAAcwK,SAAS6D,EAAUnL,SAC/DkL,GAAe,OAUf,GAAIA,EAAc,CAChB,IAAMpE,EAAOqE,EAAUtG,uBAEnBiC,GACFA,EAAK1C,YAAY+G,EAErB,MACEC,EAAYD,EAAW,KACvBD,GAAe,CAGrB,GACF,CA3NIG,CAAc7F,GACd8F,EAAa9F,EAAU7L,IAGzBoR,EAAU3G,YAAYoB,GAEfuF,EAAUvM,SACnB,CAQA,SAAS4M,EAAY/D,EAAMrI,EAAKuM,GAC9B,IAAMC,EAAajN,EAAcS,GAC3BkB,EAAamH,EAAKnH,WAClBrG,EAAawN,EAAKxN,WAMxB,GAHA2R,EAAWhN,UAAY6I,EAAK7I,WAAa6I,EAAKlG,aAAekG,EAAKpB,UAG9DsF,GAAkB1R,EACpB,IAAK,IAAIuL,EAAI,EAAGA,EAAIvL,EAAWmJ,OAAQoC,IACrCoG,EAAWrM,aAAatF,EAAWuL,GAAGjB,KAAMtK,EAAWuL,GAAGzJ,OAK9DuE,EAAWuL,aAAaD,EAAYnE,EACtC,CAOA,SAASqE,EAAarE,EAAMsE,GAC1B,IAAMC,EAAiBvE,EAAK7C,aAAamG,GAEzC,GAAIiB,EAAgB,CAElB,IAAM9R,EAAS8R,EAAeC,MAAM,KAAK3K,KAAI,SAAAiH,GAC3C,IAAM2D,EAAO3D,EAAM0D,MAAM,KAEzB,MAAO,CACL1H,KAAM2H,EAAK,GAAGrN,OACd9C,MAAOmQ,EAAK,OAIfhL,QAAO,SAAAqH,GAAK,OAAIwD,EAAcrE,SAASa,EAAMhE,KAAK,IAGlDrD,QAAO,SAAAqH,GAAK,MAAmB,eAAfA,EAAMhE,MAAgD,SAAvBgE,EAAMxM,MAAM8C,MAAiB,IAG5EyC,KAAI,SAAA6K,GAAc,OAAPA,EAAJ5H,KAA8BxI,KAAnBoQ,EAALpQ,MAA8B8C,OAAM,GAAA,IAAKwE,KAAK,IAE7C,KAAXnJ,EACFuN,EAAKlI,aAAawL,EAAiB7Q,GAEnCuN,EAAK2E,gBAAgBrB,EAEzB,CACF,CAOA,SAASK,EAAc3D,EAAM1N,GAC3B,IAAMwG,EAAWqG,MAAMyE,KAAK5D,EAAKtG,YAE5BZ,GAAaA,EAAS6C,QAI3B7C,EAAS6D,SAAQ,SAAAmH,GAEf,GAA2B,IAAvBA,EAAUlK,SAAgB,CAE5B+J,EAAcG,EAAWxR,GAGzB,IAAMqF,EAAMmM,EAAUnL,QAAQuH,cACxB+C,EAAa3Q,EAAYqF,GACzBnF,EAAa2M,MAAMyE,KAAKE,EAAUtR,YAGlCoS,EAA2Bd,EAAU3G,aAAaoG,GAExD,GAAIN,EAAY,CAKd,IAJA,IAAM4B,EAAoB5B,EAAWzQ,YAAc,GAC7C8R,EAAgBrB,EAAWxQ,QAAU,GAGlCsL,EAAI,EAAGA,EAAIvL,EAAWmJ,OAAQoC,IAAK,CAC1C,IAAMnG,EAAgBpF,EAAWuL,GAAGjB,KAE/B+H,EAAkB5E,SAASzN,EAAWuL,GAAGjB,QAExClF,IAAkB2L,GACa,SAA7BqB,IACFd,EAAUhD,MAAM+B,UAAY+B,GAI5BhN,IAAkB0L,GAAmBgB,EAAc3I,OACrD0I,EAAaP,EAAWQ,GAExBR,EAAUa,gBAAgBnS,EAAWuL,GAAGjB,MAG9C,CAIImG,EAAW9P,OACb4Q,EAAYD,EAAWb,EAAW9P,OAAO,EAE7C,MAEE,GAAY,UAARwE,EACFqI,EAAK8E,YAAYhB,OAGZ,CAEL,GAAiC,OAA7Bc,EACF,GAAId,EAAUjL,YAA+C,OAAjCiL,EAAUjL,WAAWF,QAC/CmL,EAAUjL,WAAWiI,MAAM+B,UAAY+B,OAEvC,IAAA,IAA2CpE,EAA3CC,EAAAC,EAAuBoD,EAAUpK,cAAU8G,EAAAC,KAAAE,MAAE,CAA1BH,EAAAlM,MACRwM,MAAM+B,UAAY+B,CAC7B,CAIJd,EAAUiB,YAAW5M,MAArB2L,EAAyBA,EAAUpK,WACrC,CAIJ,MAAkC,IAAvBoK,EAAUlK,UACnBoG,EAAK8E,YAAYhB,EAErB,GACF,CAOA,SAASG,EAAajE,EAAM1N,GAC1B,IAAMwG,EAAWqG,MAAMyE,KAAK5D,EAAKtG,YAE5BZ,GAAaA,EAAS6C,QAI3B7C,EAAS6D,SAAQ,SAAAmH,GAEf,GAA2B,IAAvBA,EAAUlK,SAAgB,CAE5BqK,EAAaH,EAAWxR,GAGxB,IAAMqF,EAAMmM,EAAUnL,QAAQuH,cACxB+C,EAAa3Q,EAAYqF,GAE3BsL,IAAeA,EAAWvQ,SAA6C,KAAzBoR,EAAU3M,UAoDpD4C,QAAQ,aAAc,IAAI3C,QAnDhC4I,EAAK8E,YAAYhB,EAErB,CACF,GACF,CC9MA,IAAIkB,EAAS,EAMb,SAASC,EAAKhK,GACZ,IAAMiK,EAAqBC,EAAOC,wBAA0B,IP2PvD,SAA2BC,GAChCjQ,EAAwBiQ,CAC1B,COzPEC,CAHqB1E,OAAO2E,OAAO,CAAA,EAAIL,EAAoBjK,EAAQoK,cAAgB,CAAA,IAKnF,IAAMtT,EAAQkJ,EAAQlJ,OAASF,EAASE,MAElCyT,EP0ID,SAA2B/O,GAEhC,MAAwB,iBAAbA,EACF0I,MAAMyE,KAAK5N,EAASsI,iBAAiB7H,IAI1CA,aAAoBgP,KACf,CAAChP,GAINA,aAAoBwI,UAAYxI,aAAoBiP,eAC/CvG,MAAMyE,KAAKnN,GAIhB0I,MAAMwG,QAAQlP,GACTA,EAASgD,QAAO,SAAA3H,GAAE,OAAIA,aAAc2T,QAGtC,EACT,COhKoBG,CADD3K,EAAQnJ,IAAMD,EAASC,IAElCyG,EAAU+I,EAAcvP,GACxBO,EDnCR,SAAoBP,GAClB,IAAMO,EAAcgF,EAAYzF,EAASS,aA0BzC,OAxBAP,EAAM4K,SAAQ,SAAAqB,GACZ,IAAM9C,EAAO5D,EAAY1E,EAAQoL,IAEjC,GAAK9C,GAASA,EAAKpI,KAAnB,CAIA,IAAMJ,IAAYwI,EAAKxI,QACjBmB,EAAYqH,EAAKrH,WAAa,GAC9BgS,EAAY3K,EAAK/H,OAAS,GAC1BA,EAAQ0S,EAAUlK,OAAST,EAAKpI,KAAK,QAAKmF,EAC1CnF,EAAI4C,GAAAA,OAAOwF,EAAKpI,KAASe,EAAcgS,GACvCrT,EAAa0I,EAAK1I,YAAc,GAChCC,EAASyI,EAAKzI,QAAU,GAE9BK,EAAK6J,SAAQ,SAAAhF,GACXrF,EAAYqF,GAAO,CAAEnF,WAAAA,EAAYC,OAAAA,EAAQU,MAAAA,EAAOT,QAAAA,GAE3CmB,EAAUoM,SAAStI,KACtBrF,EAAYqF,GAAKqG,SAAWA,EAEhC,GAhBA,CAiBF,IAEO1L,CACT,CCOsBwT,CAAW/T,IACZkJ,EAAQtI,YAAc,IAG9BgK,SAAQ,SAAAoJ,GACjB,GAAIA,EAAOjT,KAAM,CACf,IAAMN,EAAauT,EAAOvT,YAAc,GAClCC,EAASsT,EAAOtT,QAAU,GAC1BC,IAAYqT,EAAOrT,QAEzBqT,EAAOjT,KAAK6J,SAAQ,SAAAhF,GAClBrF,EAAYqF,GAAO,CAAEnF,WAAAA,EAAYC,OAAAA,EAAQC,QAAAA,EAC3C,GACF,CACF,IAGA8S,EAAU7I,SAAQ,SAAAiB,GAChB,IAAMoI,EAAUpI,EAAMJ,uBAEtB,GAAKwI,GAAY/P,EAAS+P,EAAS,gBAmCjCC,EAAUD,EAAS/K,OAnC+B,CAClD,IAAM2H,EAAaoC,IAGnB3P,EAAUuN,GAAc3H,EAGxB5F,EAAUuN,GAAYtQ,YAAcgF,EAAYhF,GAGhD,IAAM8L,EAAUlH,EAAc,MAAO,CACnCkF,MAAO,iBAIH5D,EAAStB,EAAc,MAAO,CAClCkF,MAAO,cACP8J,iBAAiB,EACjBzJ,KAAM,UACN,kBAAkB,EAClB,aAAcvD,EAAiB0E,GAC/B,WAAYgF,EACZtG,WAAYkH,EAAe5F,EAAMtJ,MAAOhC,KAI1C8L,EAAQrB,YAAYxE,EAAQ4N,WAAU,IACtC/H,EAAQrB,YAAYvE,GACpBoF,EAAMwI,OAAOhI,GAGb6H,EAAU7H,EAASnD,EAGrB,CAGF,GACF,CAOA,SAASgL,EAAUI,EAAUpL,GAC3B,GAAuB,iBAAZA,EAIX,IAAK,IAAMoE,KAAOpE,EAChB,OAAQoE,GACN,IAAK,WACL,IAAK,WACL,IAAK,WACHgH,EAASjQ,UAAUkQ,OAAM,QAASjH,EAAIa,gBAAmBjF,EAAQoE,IACjE,MACF,IAAK,SACH,IAAMlN,EAAS8I,EAAQ9I,OAEvB,IAAKoU,MAAMpU,GAAS,CAClB,IAAMqG,EAAS6N,EAASG,UAExBhO,EAAOsI,MAAM2F,UAAetU,EAAU,KACtCqG,EAAOsI,MAAM4F,UAAevU,EAAU,IACxC,EAIR,CAMA,SAASwU,EAAQlQ,GACfT,EAASsI,iBAAiB7H,GAAUkG,SAAQ,SAAAiB,GAC1C,IAAMoI,EAAUpI,EAAMJ,uBAEtB,GAAIwI,GAAW/P,EAAS+P,EAAS,gBAAiB,CAChD,IAAMpD,EAAa7J,EAAciN,EAAQQ,kBAElCnR,EAAUuN,GACjBoD,EAAQ7C,QACV,CACF,GACF,CAMA,SAASyD,EAAmBhQ,GAC1B,IAAAiJ,EAA0BzH,EAAaxB,EAAMvC,QAArCmE,EAAMqH,EAANrH,OAAQC,EAAKoH,EAALpH,MACVoO,EAAgBjQ,EAAMiQ,cAE5B,GAAIrO,GAAUqO,EAAcC,MAAM7G,SAAS,aAAc,CACvD,IAAM8G,EAASF,EAAcG,QAAQ,aAC/BpE,EAAa7J,EAAcP,GAE7BnB,EAAUmM,EAAeuD,EADT1R,EAAUuN,GAAYtQ,aAIpC2U,EAAkBxO,EAAMgB,QAAO,SAAAE,GAAC,OAAInE,EAAgByK,SAAStG,EAAEhB,YAAUgD,OAAS,EAIxF,GAAIsL,IAAoBtR,EAAW,CACjC,IAAMuR,EAAQ,cAAiB3R,EAAgB,wBAAwBA,EAA4B,aACnG8B,EAAU6P,EAAW7P,EAAU6P,CACjC,CAGAnR,EAAY,aAAcsB,GAEtB4P,IAAoBtR,IAEtB6C,EAAO8F,iBAAgB,IAAK/I,GAAoBoH,SAAQ,SAAAwB,GACtDA,EAASgF,QACX,IAGA3K,EAAO8F,iBAAiB9I,EAAgBoG,QAAQe,SAAQ,SAAA3J,GACtD,IAAMuP,EAAavP,EAAQsK,kBAEvBiF,GAAc9M,EAAcwK,SAASsC,EAAW5J,UAClD3F,EAAQ+R,YAAW5M,MAAnBnF,EAAuBA,EAAQ0G,WAEnC,KAIF9C,EAAM0I,gBACR,CACF,CAkCA6F,EAAOgC,KAAQ,WACb,IAAMC,EAAU,CACdT,QAASA,GAGX,SAASQ,EAAKlM,GACZlD,GAAS,WACPkN,EAAKhK,GAAW,CAAA,EAClB,GACF,CAAC,IAAAoM,EAAA,SAAAhI,GAGC8H,EAAK9H,GAAO,WAAa,IAAA,IAAAiI,EAAAC,UAAA5L,OAAT3D,EAAImH,IAAAA,MAAAmI,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJxP,EAAIwP,GAAAD,UAAAC,GAClBzP,EAASqP,EAAQ/H,GAAMrH,KAF3B,IAAK,IAAMqH,KAAO+H,EAAOC,EAAAhI,GAMzB,OAAO8H,CACT,CAlBe,GAqBfpP,GAjDA,WAEEhC,EAAY,gBAAgB,GAC5BA,EAAY,wBAAwB,GACpCA,EAAY,4BAA4B,GACxCA,EAAY,4BAA6B,KAGzCO,EAAYN,EAAU,QAAS,gBAAgB,SAAAY,GAC7C,IAAM4B,EAAS5B,EAAMvC,OACf8E,EAAWX,EAAOK,WAAWuE,mBAC7BwF,EAAa7J,EAAcP,GAC3BiP,EAAWpS,EAAUuN,GAAY6E,SACjCpQ,EAAUmM,EAAehL,EAAOrB,UAAW9B,EAAUuN,GAAYtQ,aAAa,GAEpF6G,EAAS7E,MAAQ+C,EN5NQ,SAACnB,EAASU,GAAUV,EAAQwR,cAAc,IAAIC,MAAM/Q,EAAO,CAAEgR,SAAS,IAAQ,CM6NvGF,CAAcvO,EAAU,UAEpBsO,GACFA,EAASpQ,EAEb,IAGAf,EAAYN,EAAU,QAAS4Q,EACjC"}