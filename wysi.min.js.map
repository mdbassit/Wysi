{"version":3,"file":"wysi.min.js","sources":["../src/settings.js","../src/utils.js","../src/toolset.js","../src/common.js","../src/shortcuts.js","../src/commands.js","../src/listbox.js","../src/popover.js","../src/toolbar.js","../src/filter.js","../src/core.js"],"sourcesContent":["// Default settings\nexport default {\n\n  // Default selector\n  el: '[data-wysi], .wysi-field',\n\n  // Default tools in the toolbar\n  tools: [\n    'format', '|', 'bold', 'italic', '|', \n    {\n      label: 'Text alignment',\n      items: ['alignLeft', 'alignCenter', 'alignRight', 'alignJustify']\n    }, '|',\n    'ul', 'ol', '|', 'indent', 'outdent', '|', 'link', 'image'\n  ],\n\n  // Enable dark mode (toolbar only)\n  darkMode: false,\n\n  // Height of the editable region\n  height: 200,\n\n  // Grow the editable region's height to fit its content\n  autoGrow: false,\n\n  // Hide the toolbar when the editable region is out of focus\n  autoHide: false,\n\n  // Default list of allowed tags\n  // These tags are always allowed regardless of the instance options\n  allowedTags: {\n    br: {\n      attributes: [],\n      styles: [],\n      isEmpty: true\n    }\n  },\n\n  // Custom tags to allow when filtering inserted content\n  customTags: [\n    /* Example:\n\n    {\n      tags: ['table', 'thead', 'tbody', 'tr', 'td', 'th'], // Tags to allow\n      attributes: ['id', 'class'], // These attributes will be permitted for all the tags above\n      styles: ['width'],\n      isEmpty: false\n    }\n\n    */\n  ]\n};","import document from 'document';\nimport { hasClass } from './shortcuts.js';\n\n// Used to store the current DOM selection for later use\nlet currentSelection;\n\n// Polyfill for Nodelist.forEach\nif (NodeList !== undefined && NodeList.prototype && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = Array.prototype.forEach;\n}\n\n/**\n * Shortcut for addEventListener to optimize the minified JS.\n * @param {object} context The context to which the listener is attached.\n * @param {string} type Event type.\n * @param {(string|function)} selector Event target if delegation is used, event handler if not.\n * @param {function} [fn] Event handler if delegation is used.\n */\nexport function addListener(context, type, selector, fn) {\n  // Delegate event to the target of the selector\n  if (typeof selector === 'string') {\n    context.addEventListener(type, event => {\n      const target = event.target;\n\n      if (target.matches(selector)) {\n        fn.call(target, event);\n      }\n    });\n\n  // If the selector is not a string then it's a function\n  // in which case we need a regular event listener\n  } else {\n    fn = selector;\n    context.addEventListener(type, fn);\n  }\n}\n\n/**\n * Build an html fragment from a string.\n * @param {string} html The HTML code.\n * @return {object} A document fragment.\n */\nexport function buildFragment(html) {\n  const template = createElement('template');\n\n  template.innerHTML = html.trim();\n  return template.content;\n}\n\n/**\n * Deep clone an object.\n * @param {object} obj The object to clone.\n * @return {object} The clone object.\n */\nexport function cloneObject(obj) {\n  return obj ? JSON.parse(JSON.stringify(obj)) : obj;\n}\n\n/**\n * Create an element and optionally set its attributes.\n * @param {string} tag The HTML tag of the new element.\n * @param {object} [attributes] The element's attributes.\n * @return {object} An HTML element.\n */\nexport function createElement(tag, attributes) {\n  const element = document.createElement(tag);\n\n  if (attributes) {\n    for (const attributeName in attributes) {\n      // Attribute names starting with underscore are actually properties\n      if (attributeName[0] === '_') {\n        element[attributeName.substring(1)] = attributes[attributeName];\n      } else {\n        element.setAttribute(attributeName, attributes[attributeName]);\n      }\n    }\n  }\n\n  return element;\n}\n\n/**\n * Call a function only when the DOM is ready.\n * @param {function} fn The function to call.\n * @param {array} [args] Arguments to pass to the function.\n */\nexport function DOMReady(fn, args) {\n  args = args !== undefined ? args : [];\n\n  if (document.readyState !== 'loading') {\n    fn(...args);\n  } else {\n    addListener(document, 'DOMContentLoaded', () => {\n      fn(...args);\n    });\n  }\n}\n\n/**\n * Find the current editor instance.\n * @param {object} currentNode The possible child node of the editor instance.\n * @return {object} The instance's editable region and toolbar, and an array of nodes that lead to it.\n */\nexport function findInstance(currentNode) {\n  const nodes = [];\n  let ancestor, toolbar, editor;\n\n  // Find all HTML tags between the current node and the editable ancestor\n  while (currentNode && currentNode !== document.body) {\n    const tag = currentNode.tagName;\n\n    if (tag) {\n      if (hasClass(currentNode, 'wysi-wrapper')) {\n        // Editable ancestor found\n        ancestor = currentNode;\n        break;\n      } else {\n        nodes.push(currentNode);\n      }\n    }\n\n    currentNode = currentNode.parentNode;\n  }\n\n  if (ancestor) {\n    const children = ancestor.children;\n\n    toolbar = children[0];\n    editor = children[1];\n  }\n\n  return { toolbar, editor, nodes };\n}\n\n/**\n * Get an editor's instance id.\n * @param {object} editor The editor element.\n * @return {string} The instance id.\n */ \nexport function getInstanceId(editor) {\n  return editor.getAttribute('data-wid');\n}\n\n/**\n * Get a list of DOM elements based on a selector value.\n * @param {(string|object)} selector A CSS selector string, a DOM element or a list of DOM elements.\n * @return {array} A list of DOM elements.\n */ \nexport function getTargetElements(selector) {\n  // If selector is a string, get the elements that it represents\n  if (typeof selector === 'string') {\n    return Array.from(document.querySelectorAll(selector));\n  }\n\n  // If selector is a DOM element, wrap it in an array\n  if (selector instanceof Node) {\n    return [selector];\n  }\n\n  // If selector is a NodeList or an HTMLCollection, convert it to an array\n  if (selector instanceof NodeList || selector instanceof HTMLCollection) {\n    return Array.from(selector);\n  }\n\n  // If selector is an array, find any DOM elements it contains\n  if (Array.isArray(selector)) {\n    return selector.filter(el => el instanceof Node);\n  }\n\n  return [];\n}\n\n/**\n * Try to guess the textarea element's label if any.\n * @param {object} textarea The textarea element.\n * @return {string} The textarea element's label or an empty string.\n */ \nexport function getTextAreaLabel(textarea) {\n  const parent = textarea.parentNode;\n  const id = textarea.id;\n  let labelElement;\n\n  // If the textarea element is inside a label element\n  if (parent.nodeName === 'LABEL') {\n    labelElement = parent;\n\n  // Or if the textarea element has an id, and there is a label element\n  // with an attribute \"for\" that points to that id\n  } else if (id !== undefined) {\n    labelElement = document.querySelector(`label[for=\"${id}\"]`);\n  }\n\n  // If a label element is found, return the first non empty child text node\n  if (labelElement) {\n    const textNodes = [].filter.call(labelElement.childNodes, n => n.nodeType === 3);\n    const texts = textNodes.map(n => n.textContent.replace(/\\s+/g, ' ').trim());\n    const label = texts.filter(l => l !== '')[0];\n\n    if (label) {\n      return label;\n    }\n  }\n\n  return '';\n}\n\n/**\n * Restore a previous selection if any.\n */\nexport function restoreSelection() {\n  if (currentSelection) {\n    setSelection(currentSelection);\n    currentSelection = undefined;\n  }\n}\n\n/**\n * Set the value of the current selection.\n * @param {object} range The range to set.\n */\nexport function setCurrentSelection(range) {\n  currentSelection = range;\n}\n\n/**\n * Set the selection to a range.\n * @param {object} range The range to select.\n */\nexport function setSelection(range) {\n  const selection = document.getSelection();\n\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n\n/**\n * Set the expanded state of a button.\n * @param {object} button The button.\n * @param {boolean} expanded The expanded state.\n */\nexport function toggleButton(button, expanded) {\n  button.setAttribute('aria-expanded', expanded);\n}","// Supported tools\nexport default {\n  format: {\n    tags: ['p', 'h1', 'h2', 'h3', 'h4'],\n    styles: ['text-align'],\n    label: 'Select block format',\n    paragraph: 'Paragraph',\n    heading: 'Heading'\n  },\n  quote: {\n    tags: ['blockquote'],\n    label: 'Quote'\n  },\n  bold: {\n    tags: ['strong'],\n    alias: ['b'],\n    label: 'Bold'\n  },\n  italic: {\n    tags: ['em'],\n    alias: ['i'],\n    label: 'Italic'\n  },\n  underline: {\n    tags: ['u'],\n    label: 'Underline'\n  },\n  strike: {\n    tags: ['s'],\n    alias: ['del', 'strike'],\n    label: 'Strike-through',\n    command: 'strikeThrough'\n  },\n  alignLeft: {\n    label: 'Align left',\n    command: 'justifyLeft'\n  },\n  alignCenter: {\n    label: 'Align center',\n    command: 'justifyCenter'\n  },\n  alignRight: {\n    label: 'Align right',\n    command: 'justifyRight'\n  },\n  alignJustify: {\n    label: 'Justify',\n    command: 'justifyFull'\n  },\n  ul: {\n    tags: ['ul'],\n    extraTags: ['li'],\n    styles: ['text-align'],\n    label: 'Bulleted list',\n    command: 'insertUnorderedList'\n  },\n  ol: {\n    tags: ['ol'],\n    extraTags: ['li'],\n    styles: ['text-align'],\n    label: 'Numbered list',\n    command: 'insertOrderedList'\n  },\n  indent: {\n    label: 'Increase indent'\n  },\n  outdent: {\n    label: 'Decrease indent'\n  },\n  link: {\n    tags: ['a'],\n    attributes: [/*'id', 'name', */'href', /*'target', 'onclick'*/],\n    attributeLabels: ['URL'],\n    hasForm: true,\n    label: 'Link'\n  },\n  image: {\n    tags: ['img'],\n    attributes: ['src', 'alt'/*, 'title'*/],\n    attributeLabels: ['URL', 'Alternative text'],\n    isEmpty: true,\n    hasForm: true,\n    label: 'Image'\n  },\n  hr: {\n    tags: ['hr'],\n    isEmpty: true,\n    label: 'Horizontal line',\n    command: 'insertHorizontalRule'\n  },\n  removeFormat: {\n    label: 'Remove format'\n  },\n  unlink: {\n    label: 'Remove link'\n  }\n};","// Instances storage\nexport const instances = {};\n\n// The CSS class to use for selected elements\nexport const selectedClass = 'wysi-selected';\n\n// Placeholder elements CSS class\nexport const placeholderClass = 'wysi-fragment-placeholder';\n\n// Heading elements\nexport const headingElements = ['H1', 'H2', 'H3', 'H4'];\n\n// Block type HTML elements\nexport const blockElements = ['BLOCKQUOTE', 'HR', 'P', 'OL', 'UL'].concat(headingElements);\n\n// Detect Firefox browser\nexport const isFirefox = navigator.userAgent.search(/Gecko\\//) > -1;","import document from 'document';\n\n// Shortcuts\nexport const dispatchEvent = (element, event) => element.dispatchEvent(new Event(event, { bubbles: true }));\nexport const execCommand = (command, value = null) => document.execCommand(command, false, value);\nexport const hasClass = (element, classes) => element.classList && element.classList.contains(classes);","import toolset from './toolset.js';\nimport { restoreSelection } from './utils.js';\nimport { execCommand } from './shortcuts.js';\n\n/**\n * Execute an action.\n * @param {string} action The action to execute.\n * @param {object} editor The editor instance.\n * @param {array} [options] Optional action parameters.\n */\nexport function execAction(action, editor, options = []) {\n  const tool = toolset[action];\n  \n  if (tool) {\n    const command = tool.command || action;\n\n    // Restore selection if any\n    restoreSelection();\n\n    // Execute the tool's action\n    execEditorCommand(command, options);\n\n    // Focus the editor instance\n    editor.focus();\n  }\n}\n\n/**\n * Execute an editor command.\n * @param {string} command The command to execute.\n * @param {array} [options] Optional command parameters.\n */\nexport function execEditorCommand(command, options) {\n  switch (command) {\n    // Block level formatting\n    case 'quote':\n      options[0] = 'blockquote';\n    case 'format':\n      execCommand('formatBlock', `<${options[0]}>`);\n      break;\n\n    // Links\n    case 'link':\n      execCommand('createLink', options[0]);\n      break;\n\n    // Images\n    case 'image':\n      const [url, text = '', original] = options;\n      const image = `<img src=\"${url}\" alt=\"${text}\" class=\"wysi-selected\">`;\n      const html = original ? original.replace(/<img[^>]+>/i, image) : image;\n\n      execCommand('insertHTML', html);\n      break;\n\n    // All the other commands\n    default:\n      execCommand(command);\n  }\n}","import document from 'document';\nimport toolset from './toolset.js';\nimport { instances } from './common.js';\nimport { execAction } from './commands.js';\nimport {\n  addListener,\n  createElement,\n  findInstance,\n  toggleButton\n} from './utils.js';\n\n\n/**\n * Render a list box.\n * @param {object} details The list box properties and data.\n * @return {object} A DOM element containing the list box.\n */\nfunction renderListBox(details) {\n  const label = details.label;\n  const items = details.items;\n  const firstItem = items[0];\n  const classes = ['wysi-listbox'].concat(details.classes || []);\n\n  // List box wrapper\n  const listBox = createElement('div', { class: classes.join(' ') });\n\n  // List box button\n  const button = createElement('button', {\n    type: 'button',\n    title: label,\n    'aria-label': `${label} ${firstItem.label}`,\n    'aria-haspopup': 'listbox',\n    'aria-expanded': false,\n    _innerHTML: renderListBoxItem(firstItem)\n  });\n\n  // List box menu\n  const menu = createElement('div', {\n    role: 'listbox',\n    tabindex: -1,\n    'aria-label': label\n  });\n\n  // List box items\n  items.forEach(item => {\n    const option = createElement('button', {\n      type: 'button',\n      role: 'option',\n      tabindex: -1,\n      'aria-label': item.label,\n      'aria-selected': false,\n      'data-action': item.action,\n      'data-option': item.name || '',\n      _innerHTML: renderListBoxItem(item)\n    });\n\n    menu.appendChild(option);\n  });\n\n  // Tie it all together\n  listBox.appendChild(button);\n  listBox.appendChild(menu);\n\n  return listBox;\n}\n\n/**\n * Render a list box item.\n * @param {object} item The list box item.\n * @return {string} The list box item's content.\n */\nfunction renderListBoxItem(item) {\n  return item.icon ? `<svg><use href=\"#wysi-${item.icon}\"></use></svg>` : item.label;\n}\n\n/**\n * Open a list box.\n * @param {object} button The list box's button.\n */\nfunction openListBox(button) {\n  const isOpen = button.getAttribute('aria-expanded') === 'true';\n  const listBox = button.nextElementSibling;\n  let selectedItem = listBox.querySelector('[aria-selected=\"true\"]');\n\n  if (!selectedItem) {\n    selectedItem = listBox.firstElementChild;\n  }\n\n  toggleButton(button, !isOpen);\n  selectedItem.focus();\n}\n\n/**\n * Select a list box item.\n * @param {object} item The list box item.\n */\nfunction selectListBoxItem(item) {\n  const listBox = item.parentNode;\n  const button = listBox.previousElementSibling;\n  const selectedItem = listBox.querySelector('[aria-selected=\"true\"]');\n\n  if (selectedItem) {\n    selectedItem.setAttribute('aria-selected', 'false');\n  }\n\n  item.setAttribute('aria-selected', 'true');\n  button.innerHTML = item.innerHTML;\n}\n\n/**\n * Close the currently open list box if any.\n */\nfunction closeListBox() {\n  const activeListBox = document.querySelector('.wysi-listbox [aria-expanded=\"true\"]');\n\n  if (activeListBox) {\n    toggleButton(activeListBox, false);\n  }\n}\n\n// list box button click\naddListener(document, 'click', '.wysi-listbox > button', event => {\n  closeListBox();\n  openListBox(event.target);\n  event.stopImmediatePropagation();\n});\n\n// On key press on the list box button\naddListener(document, 'keydown', '.wysi-listbox > button', event => {\n  switch (event.key) {\n    case 'ArrowUp':\n    case 'ArrowDown':\n    case 'Enter':\n    case ' ':\n      openListBox(event.target);\n      event.preventDefault();\n      break;\n  }\n});\n\n// When the mouse moves on a list box item, focus it\naddListener(document.documentElement, 'mousemove', '.wysi-listbox > div > button', event => {\n  event.target.focus();\n});\n\n// On click on an list box item\naddListener(document, 'click', '.wysi-listbox > div > button', event => {\n  const item = event.target;\n  const action = item.getAttribute('data-action');\n  const option = item.getAttribute('data-option');\n  const { editor } = findInstance(item);\n  const selection = document.getSelection();\n\n  if (selection && editor.contains(selection.anchorNode)) {\n    execAction(action, editor, [option]);\n  }\n\n  selectListBoxItem(item);\n});\n\n// On key press on an item\naddListener(document, 'keydown', '.wysi-listbox > div > button', event => {\n  const item = event.target;\n  const listBox = item.parentNode;\n  const button = listBox.previousElementSibling;\n  let preventDefault = true;\n\n  switch (event.key) {\n    case 'ArrowUp':\n      const prev = item.previousElementSibling;\n\n      if (prev) {\n        prev.focus();\n      }\n\n      break;\n    case 'ArrowDown':\n      const next = item.nextElementSibling;\n\n      if (next) {\n        next.focus();\n      }\n\n      break;\n    case 'Home':\n      listBox.firstElementChild.focus();\n      break;\n    case 'End':\n      listBox.lastElementChild.focus();\n      break;\n    case 'Tab':\n      item.click();\n      break;\n    case 'Escape':\n      toggleButton(button, false);\n      break;\n    default:\n      preventDefault = false;\n  }\n\n  if (preventDefault) {\n    event.preventDefault();\n  }\n});\n\n// Close open popups and dropdowns on click outside\naddListener(document, 'click', event => {\n  closeListBox();\n});\n\nexport { renderListBox, selectListBoxItem };","import document from 'document';\nimport toolset from './toolset.js';\nimport { renderListBox, selectListBoxItem } from './listbox.js';\nimport { selectedClass } from './common.js';\nimport { execAction } from './commands.js';\nimport {\n  addListener,\n  createElement,\n  findInstance,\n  restoreSelection,\n  setCurrentSelection,\n  toggleButton\n} from './utils.js';\n\n/**\n * Render a popover form to set a tool's parameters.\n * @param {string} toolName The tool name.\n * @param {object} button The tool's toolbar button.\n * @param {object} translations The labels translation object.\n * @return {object} A DOM element containing the button and the popover.\n */\nfunction renderPopover(toolName, button, translations) {\n  const tool = toolset[toolName];\n  const labels = tool.attributeLabels;\n  const fields = tool.attributes.map((attribute, i) => {\n    return {\n      name: attribute,\n      label: translations[attribute] || labels[i],\n    }\n  });\n\n  // Popover wrapper\n  const wrapper = createElement('div', {\n    class: 'wysi-popover'\n  });\n\n  // Popover\n  const popover = createElement('div', {\n    tabindex: -1,\n  });\n\n  // Toolbar Button\n  button.setAttribute('aria-haspopup', true);\n  button.setAttribute('aria-expanded', false);\n\n  wrapper.appendChild(button);\n  wrapper.appendChild(popover);\n\n  fields.forEach(field => {\n    const label = createElement('label');\n    const span = createElement('span', { _textContent: field.label });\n    const input = createElement('input', { type: 'text' });\n\n    label.appendChild(span);\n    label.appendChild(input);\n    popover.appendChild(label);\n  });\n\n  const cancel = createElement('button', {\n    type: 'button',\n    _textContent: translations.cancel || 'Cancel'\n  });\n\n  const save = createElement('button', {\n    type: 'button',\n    'data-action': toolName,\n    _textContent: translations.save || 'Save'\n  });\n\n  // The link popover needs an extra \"Remove link\" button\n  if (toolName === 'link') {\n    const extraTool = 'unlink';\n    const label = translations[extraTool] || toolset[extraTool].label;\n\n    popover.appendChild(createElement('button', {\n      type: 'button',\n      title: label,\n      'aria-label': label,\n      'data-action': extraTool,\n      _innerHTML: `<svg><use href=\"#wysi-delete\"></use></svg>`\n    }));\n  }\n\n  popover.appendChild(cancel);\n  popover.appendChild(save);\n\n  return wrapper;\n}\n\n/**\n * Open a popover.\n * @param {object} button The popover's button.\n */\nfunction openPopover(button) {\n  const inputs = button.nextElementSibling.querySelectorAll('input');\n  const selection = document.getSelection();\n  const anchorNode = selection.anchorNode;\n  const { editor, nodes } = findInstance(anchorNode);\n  const values = [];\n\n  if (editor) {\n    // Try to find an existing target of the popover's action from the DOM selection\n    const action = button.getAttribute('data-action');\n    const tool = toolset[action];\n    let target = nodes.filter(node => tool.tags.includes(node.tagName.toLowerCase()))[0];\n    let selectContents = true;\n\n    // If that fails, look for an element with the selection CSS class\n    if (!target) {\n      target = editor.querySelector(`.${selectedClass}`);\n      selectContents = false;\n    }\n\n    // If an existing target is found, we will be in modification mode\n    if (target) {\n      const range = document.createRange();\n      \n      // Add the target to a selection range\n      // Depending on the type of the target, select the whole node or just its contents\n      if (selectContents) {\n        range.selectNodeContents(target);\n      } else {\n        range.selectNode(target);\n      }\n\n      // Save the current selection for later use\n      setCurrentSelection(range);\n\n      // Retrieve the current attribute values of the target for modification\n      tool.attributes.forEach(attribute => {\n        values.push(target.getAttribute(attribute));\n      })\n\n    // If no existing target is found, we are adding new content\n    } else if (selection && editor.contains(anchorNode) && selection.rangeCount) {\n      // Save the current selection to keep track of where to insert the content\n      setCurrentSelection(selection.getRangeAt(0));\n    }\n  }\n\n  // Populate the form fields with the existing values if any\n  inputs.forEach((input, i) => {\n    input.value = values[i] || '';\n  });\n\n  // Open this popover\n  toggleButton(button, true);\n\n  // Focus the first input field\n  inputs[0].focus();\n}\n\n/**\n * Execute a popover's action.\n * @param {object} button The popover's action button.\n */\nfunction execPopoverAction(button) {\n  const action = button.getAttribute('data-action');\n  const inputs = button.parentNode.querySelectorAll('input');\n  const { editor } = findInstance(button);\n  const options = [];\n\n  inputs.forEach(input => {\n    options.push(input.value);\n  });\n\n  // Workaround for links being removed when updating images\n  if (action === 'image') {\n    const selected = editor.querySelector(`.${selectedClass}`);\n    const parent = selected ? selected.parentNode : {};\n\n    if (selected && parent.tagName === 'A') {\n      options.push(parent.outerHTML);\n    }\n  }\n\n  execAction(action, editor, options);\n}\n\n/**\n * Close the open popover if any.\n * @param {boolean} ignoreSelection If true, do not restore the previous selection.\n */\nfunction closePopover(ignoreSelection) {\n  const popover = document.querySelector('.wysi-popover [aria-expanded=\"true\"]');\n\n  if (popover) {\n    toggleButton(popover, false);\n  }\n\n  if (!ignoreSelection) {\n    restoreSelection();\n  }\n}\n\n// Open a popover\naddListener(document, 'click', '.wysi-popover > button', event => {\n  closePopover();\n  openPopover(event.target);\n  event.stopImmediatePropagation();\n});\n\n// Execute the popover action\naddListener(document, 'click', '.wysi-popover > div > button[data-action]', event => {\n  execPopoverAction(event.target);\n  closePopover(true);\n});\n\n// Cancel the popover\naddListener(document, 'click', '.wysi-popover > div > button:not([data-action])', event => {\n  closePopover();\n});\n\n// Prevent clicks on the popover content to propagate (keep popover open)\naddListener(document, 'click', '.wysi-popover *:not(button)', event => {\n  event.stopImmediatePropagation();\n});\n\n// Trap focus inside a popover until it's closed\naddListener(document, 'keydown', '.wysi-popover *', event => {\n  const target = event.target;\n  const parent = target.parentNode;\n  const form = parent.tagName === 'DIV' ? parent : parent.parentNode;\n\n  switch (event.key) {\n    case 'Tab':\n      const firstField = form.querySelector('input');\n\n      if (event.shiftKey) {\n        if (target === firstField) {\n          form.lastElementChild.focus();\n          event.preventDefault();\n        }\n      } else {\n        if (!target.nextElementSibling && !target.parentNode.nextElementSibling) {\n          firstField.focus();\n          event.preventDefault();\n        }\n      }\n      break;\n    case 'Enter':\n      if (target.tagName === 'INPUT') {\n        const actionButton = form.querySelector('[data-action]:last-of-type');\n\n        actionButton.click();\n        event.preventDefault();\n      }\n      break;\n    case 'Escape':\n      closePopover();\n      break;\n  }\n\n});\n\nlet isSelectionInProgress = false;\n\n// Close open popups and dropdowns on click outside\naddListener(document, 'click', event => {\n  if (!isSelectionInProgress) {\n    closePopover();\n  }\n});\n\n// Text selection within a popover is in progress\n// This helps avoid closing a popover when the end of a text selection is outside it\naddListener(document, 'mousedown', '.wysi-popover, .wysi-popover *', event => {\n  isSelectionInProgress = true;\n});\n\n// The text selection ended\naddListener(document, 'mouseup', event => {\n  setTimeout(() => { isSelectionInProgress = false; });\n});\n\nexport { renderPopover };","import document from 'document';\nimport toolset from './toolset.js';\nimport { renderPopover } from './popover.js';\nimport { renderListBox, selectListBoxItem } from './listbox.js';\nimport { instances, selectedClass } from './common.js';\nimport { execAction } from './commands.js';\nimport {\n  addListener,\n  buildFragment,\n  createElement,\n  DOMReady,\n  findInstance,\n  getInstanceId,\n  setSelection\n} from './utils.js';\n\n/**\n * Render the toolbar.\n * @param {array} tools The list of tools in the toolbar.\n * @param {object} translations The labels translation object.\n * @return {string} The toolbars HTML string.\n */\nfunction renderToolbar(tools, translations) {\n  const toolbar = createElement('div', { class: 'wysi-toolbar' });\n\n  // Generate toolbar buttons\n  tools.forEach(toolName => {\n    switch (toolName) {\n      // Toolbar separator\n      case '|':\n        toolbar.appendChild(createElement('div', { class: 'wysi-separator' }));\n        break;\n\n      // Toolbar new line\n      case '-':\n        toolbar.appendChild(createElement('div', { class: 'wysi-newline' }));\n        break;\n\n      // The format tool renders as a list box\n      case 'format':\n        toolbar.appendChild(renderFormatTool(translations));\n        break;\n\n      // All the other tools render as buttons\n      default:\n        if (typeof toolName === 'object') {\n          if (toolName.items) {\n            toolbar.appendChild(renderToolGroup(toolName, translations));\n          }\n        } else {\n          renderTool(toolName, toolbar, translations);\n        }\n    }\n  });\n\n  return toolbar;\n}\n\n/**\n * Render a tool.\n * @param {string} name The tool's name.\n * @param {object} toolbar The toolbar to which the tool will be appended.\n * @param {object} translations The labels translation object.\n */\nfunction renderTool(name, toolbar, translations) {\n  const tool = toolset[name];\n  const label = translations[name] || tool.label;\n  const button = createElement('button', {\n    type: 'button',\n    title: label,\n    'aria-label': label,\n    'aria-pressed': false,\n    'data-action': name,\n    _innerHTML: `<svg><use href=\"#wysi-${name}\"></use></svg>`\n  });\n\n  // Tools that require parameters (e.g: image, link) need a popover\n  if (tool.hasForm) {\n    const popover = renderPopover(name, button, translations);\n    toolbar.appendChild(popover);\n\n  // The other tools only display a button\n  } else {\n    toolbar.appendChild(button);\n  }\n}\n\n/**\n * Render a tool group.\n * @param {object} details The group's properties.\n * @param {object} translations The labels translation object.\n * @return {object} A DOM element containing the tool group.\n */\nfunction renderToolGroup(details, translations) {\n  const label = details.label || translations.select || 'Select an item';\n  const options = details.items;\n\n  const items = options.map(option => {\n    const tool = toolset[option];\n    const label = translations[option] || tool.label;\n    const icon = option;\n    const action = option;\n\n    return { label, icon, action };\n  });\n\n  return renderListBox({ label, items });\n}\n\n/**\n * Render format tool.\n * @param {object} translations The labels translation object.\n * @return {object} A DOM element containing the format tool.\n */\nfunction renderFormatTool(translations) {\n  const label = translations['format'] || toolset.format.label;\n  const paragraphLabel = translations['paragraph'] || toolset.format.paragraph;\n  const headingLabel = translations['heading'] || toolset.format.heading;\n  const classes = 'wysi-format';\n  const items = toolset.format.tags.map(tag => { \n    const name = tag;\n    const label = tag === 'p' ? paragraphLabel : `${headingLabel} ${tag.substring(1)}`;\n    const action = 'format';\n\n    return { name, label, action };\n  });\n\n  return renderListBox({ label, items, classes });\n}\n\n/**\n * Update toolbar buttons state.\n */\nfunction updateToolbarState() {\n  const { toolbar, editor, nodes } = findInstance(document.getSelection().anchorNode);\n  const tags = nodes.map(node => node.tagName.toLowerCase());\n\n  // Abort if the selection is not within an editor instance\n  if (!editor) {\n    return;\n  }\n\n  // Get the list of allowed tags in the current editor instance\n  const instanceId = getInstanceId(editor);\n  const allowedTags = instances[instanceId].allowedTags;\n\n  // Reset the state of all buttons\n  toolbar.querySelectorAll('[aria-pressed=\"true\"]').forEach(button => button.setAttribute('aria-pressed', 'false'));\n\n  // Reset the state of all list boxes\n  toolbar.querySelectorAll('.wysi-listbox > div > button:first-of-type').forEach(button => selectListBoxItem(button));\n  \n\n  // Update the buttons states\n  tags.forEach((tag, i) => {\n    switch (tag) {\n      case 'p':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'li':\n        const format = toolbar.querySelector(`[data-action=\"format\"][data-option=\"${tag}\"]`);\n        const textAlign = nodes[i].style.textAlign;\n\n        if (format) {\n          selectListBoxItem(format);\n        }\n\n        // Check for text align\n        if (textAlign) {\n          const action = 'align' + textAlign.charAt(0).toUpperCase() + textAlign.slice(1);\n          const button = toolbar.querySelector(`[data-action=\"${action}\"]`);\n          \n          if (button) {\n            if (button.parentNode.getAttribute('role') === 'listbox') {\n              selectListBoxItem(button);\n            } else {\n              button.setAttribute('aria-pressed', 'true');\n            }\n          }\n        }\n        break;\n      default:\n        const allowedTag = allowedTags[tag];\n        const action = allowedTag ? allowedTag.toolName : undefined;\n\n        if (action) {\n          const button = toolbar.querySelector(`[data-action=\"${action}\"]`);\n          button.setAttribute('aria-pressed', 'true');\n        }\n    }    \n  });\n}\n\n/**\n * Embed SVG icons in the HTML document.\n */\nfunction embedSVGIcons() {\n  // The icons will be included during the build process\n  const icons = '_SVGIcons_';\n  const svgElement = buildFragment(icons);\n\n  document.body.appendChild(svgElement);\n}\n\n// Deselect selected element when clicking outside\naddListener(document, 'click', '.wysi-editor, .wysi-editor *', event => {\n  const selected = document.querySelector(`.${selectedClass}`);\n\n  if (selected && selected !== event.target) {\n    selected.classList.remove(selectedClass);\n  }\n});\n\n// Select an image when it's clicked\naddListener(document, 'click', '.wysi-editor img', event => {\n  const image = event.target;\n  const range = document.createRange();\n\n  image.classList.add(selectedClass);\n\n  range.selectNode(image);\n  setSelection(range);\n});\n\n// Toolbar button click\naddListener(document, 'click', '.wysi-toolbar > button', event => {\n  const button = event.target;\n  const action = button.getAttribute('data-action');\n  const { editor } = findInstance(button);\n  const selection = document.getSelection();\n\n  if (selection && editor.contains(selection.anchorNode)) {\n    execAction(action, editor);\n  }\n});\n\n// Update the toolbar buttons state\naddListener(document, 'selectionchange', updateToolbarState);\n\n// include SVG icons\nDOMReady(embedSVGIcons);\n\nexport { renderToolbar };","import settings from './settings.js';\nimport toolset from './toolset.js';\nimport { buildFragment, cloneObject, createElement } from './utils.js';\nimport { blockElements } from './common.js';\n\nconst STYLE_ATTRIBUTE = 'style';\n\n/**\n * Enable HTML tags belonging to a set of tools.\n * @param {array} tools A array of tool objects.\n * @return {object} The list of allowed tags.\n */\nfunction enableTags(tools) {\n  const allowedTags = cloneObject(settings.allowedTags);\n\n  tools.forEach(toolName => {\n    const tool = cloneObject(toolset[toolName]);\n\n    if (!tool || !tool.tags) {\n      return;\n    }\n\n    const isEmpty = !!tool.isEmpty;\n    const extraTags = tool.extraTags || [];\n    const aliasList = tool.alias || [];\n    const alias = aliasList.length ? tool.tags[0] : undefined;\n    const tags = [...tool.tags, ...extraTags, ...aliasList];\n    const attributes = tool.attributes || [];\n    const styles = tool.styles || [];\n\n    tags.forEach(tag => {\n      allowedTags[tag] = { attributes, styles, alias, isEmpty };\n      \n      if (!extraTags.includes(tag)) {\n        allowedTags[tag].toolName = toolName;\n      }\n    });\n  });\n\n  return allowedTags;\n}\n\n/**\n * Prepare raw content for editing.\n * @param {string} content The raw content.\n * @param {array} allowedTags The list of allowed tags.\n * @return {string} The filter HTML content.\n */\nfunction prepareContent(content, allowedTags) {\n  const container = createElement('div');\n  const fragment = buildFragment(content);\n\n  filterContent(fragment, allowedTags);\n  wrapTextNodes(fragment);\n  cleanContent(fragment, allowedTags);\n  container.appendChild(fragment);\n\n  return container.innerHTML;\n}\n\n/**\n * Replace a DOM element with another while preserving its content.\n * @param {object} node The element to replace.\n * @param {string} tag The HTML tag of the new element.\n * @param {boolean} [copyAttributes] If true, also copy the original element's attributes.\n */\nfunction replaceNode(node, tag, copyAttributes) {\n  const newElement = createElement(tag);\n  const parentNode = node.parentNode;\n  const attributes = node.attributes;\n\n  // Copy the original element's content\n  newElement.innerHTML = node.innerHTML || node.textContent || node.outerHTML;\n\n  // Copy the original element's attributes\n  if (copyAttributes && attributes) {\n    for (let i = 0; i < attributes.length; i++) {\n      newElement.setAttribute(attributes[i].name, attributes[i].value);\n    }\n  }\n\n  // Replace the element\n  parentNode.replaceChild(newElement, node);\n}\n\n/**\n * Remove unsupported CSS styles from a node.\n * @param {object} node The element to filter.\n * @param {array} allowedStyles An array of supported styles.\n */\nfunction filterStyles(node, allowedStyles) {\n  const styleAttribute = node.getAttribute(STYLE_ATTRIBUTE);\n\n  if (styleAttribute) {\n    // Parse the styles\n    const styles = styleAttribute.split(';').map(style => {\n      const prop = style.split(':');\n      \n      return {\n        name: prop[0].trim(),\n        value: prop[1]\n      };\n    })\n    // Filter the styles\n    .filter(style => allowedStyles.includes(style.name))\n\n    // Convert back to a style string\n    .map(({ name, value }) => `${name}: ${value.trim()};`).join('');\n\n    if (styles !== '') {\n      node.setAttribute(STYLE_ATTRIBUTE, styles);\n    } else {\n      node.removeAttribute(STYLE_ATTRIBUTE);\n    }\n  }\n}\n\n/**\n * Remove unsupported HTML tags and attributes.\n * @param {object} node The parent element to filter recursively.\n * @param {array} allowedTags The list of allowed tags.\n */\nfunction filterContent(node, allowedTags) {\n  const children = Array.from(node.childNodes);\n\n  if (!children || !children.length) {\n    return;\n  }\n\n  children.forEach(childNode => {\n    // Element nodes\n    if (childNode.nodeType === 1) {\n      // Filter recursively (deeper nodes firest)\n      filterContent(childNode, allowedTags);\n\n      // Check if the current element is allowed\n      const tag = childNode.tagName.toLowerCase();\n      const allowedTag = allowedTags[tag];\n      const attributes = Array.from(childNode.attributes);\n\n      if (allowedTag) {\n        const allowedAttributes = allowedTag.attributes || [];\n        const allowedStyles = allowedTag.styles || [];\n\n        // Remove attributes that are not allowed\n        for (let i = 0; i < attributes.length; i++) {\n          const attributeName = attributes[i].name;\n\n          if (!allowedAttributes.includes(attributes[i].name)) {\n            if (attributeName === STYLE_ATTRIBUTE && allowedStyles.length) {\n              filterStyles(childNode, allowedStyles);\n            } else {\n              childNode.removeAttribute(attributes[i].name);\n            }\n          }\n        }\n\n        // If the tag is an alias, replace it with the standard tag\n        // e.g: <b> tags will be replaced with <strong> tags\n        if (allowedTag.alias) {\n          replaceNode(childNode, allowedTag.alias, true);\n        }\n      } else {\n        // Remove style nodes\n        if (tag === 'style') {\n          node.removeChild(childNode);\n\n        // And unwrap the other nodes\n        } else {\n          childNode.replaceWith(...childNode.childNodes);\n        }\n      }\n\n    // Remove comment nodes\n    } else if (childNode.nodeType === 8) {\n      node.removeChild(childNode);\n    }\n  });\n}\n\n/**\n * Remove empty nodes.\n * @param {object} node The parent element to filter recursively.\n * @param {array} allowedTags The list of allowed tags.\n */\nfunction cleanContent(node, allowedTags) {\n  const children = Array.from(node.childNodes);\n\n  if (!children || !children.length) {\n    return;\n  }\n\n  children.forEach(childNode => {\n    // Remove empty element nodes\n    if (childNode.nodeType === 1) {\n      // Filter recursively (deeper nodes firest)\n      cleanContent(childNode, allowedTags);\n\n      // Check if the element can be empty\n      const tag = childNode.tagName.toLowerCase();\n      const allowedTag = allowedTags[tag];\n\n      if (allowedTag && !allowedTag.isEmpty && trimText(childNode.innerHTML) === '') {\n        node.removeChild(childNode);\n      }\n    }\n  });\n}\n\n/**\n * Wrap the child text nodes in a paragraph (non-recursively).\n * @param {object} node The parent element of the text nodes.\n */\nfunction wrapTextNodes(node) {\n  const children = Array.from(node.childNodes);\n\n  if (!children || !children.length) {\n    return;\n  }\n\n  let appendToPrev = false;\n\n  children.forEach(childNode => {\n    if (childNode.nodeType !== 3 && blockElements.includes(childNode.tagName)) {\n      appendToPrev = false;\n      return;\n    }\n\n    // Remove empty text node\n    /*if (trimText(childNode.textContent) === '') {\n      node.removeChild(childNode);\n\n    // Wrap text node in a paragraph\n    } else {*/\n      if (appendToPrev) {\n        const prev = childNode.previousElementSibling;\n\n        if (prev) {\n          prev.appendChild(childNode);\n        }\n      } else {\n        replaceNode(childNode, 'p');\n        appendToPrev = true;\n      }\n    /*}*/\n  });\n}\n\n/**\n * Trim whitespace from the start and end of a text.\n * @param {string} text The text to trim.\n * @return {string} The trimmed text.\n */\nfunction trimText(text) {\n  return text.replace(/^\\s+|\\s+$/g, '').trim();\n}\n\nexport {\n  enableTags,\n  prepareContent\n};","import window from 'window';\nimport document from 'document';\nimport settings from './settings.js';\nimport { renderToolbar } from './toolbar.js';\nimport { enableTags, prepareContent } from './filter.js';\nimport {\n  instances,\n  placeholderClass,\n  headingElements,\n  blockElements,\n  isFirefox\n} from './common.js';\nimport { \n  addListener,\n  cloneObject,\n  createElement,\n  DOMReady,\n  findInstance,\n  getInstanceId,\n  getTargetElements,\n  getTextAreaLabel\n} from './utils.js';\nimport {\n  dispatchEvent,\n  execCommand,\n  hasClass\n} from './shortcuts.js';\n\n\n// Next available instance id\nlet nextId = 0;\n\n/**\n * Init WYSIWYG editor instances.\n * @param {object} options Configuration options.\n */\nfunction init(options) {\n  const globalTranslations = window.wysiGlobalTranslations || {};\n  const translations = Object.assign({}, globalTranslations, options.translations || {});\n  const tools = options.tools || settings.tools;\n  const selector = options.el || settings.el;\n  const targetEls = getTargetElements(selector);\n  const toolbar = renderToolbar(tools, translations);\n  const allowedTags = enableTags(tools);\n  const customTags = options.customTags || [];\n\n  // Add custom tags if any to the allowed tags list\n  customTags.forEach(custom => {\n    if (custom.tags) {\n      const attributes = custom.attributes || [];\n      const styles = custom.styles || [];\n      const isEmpty = !!custom.isEmpty;\n\n      custom.tags.forEach(tag => {\n        allowedTags[tag] = { attributes, styles, isEmpty };\n      });\n    }\n  });\n\n  // Append an editor instance to target elements\n  targetEls.forEach(field => {\n    const sibling = field.previousElementSibling;\n\n    if (!sibling || !hasClass(sibling, 'wysi-wrapper')) {\n      const instanceId = nextId++;\n\n      // Store the instance's options \n      instances[instanceId] = options;\n\n      // Cache the list of allowed tags in the instance\n      instances[instanceId].allowedTags = cloneObject(allowedTags);\n\n      // Wrapper\n      const wrapper = createElement('div', {\n        class: 'wysi-wrapper'\n      });\n\n      // Editable region\n      const editor = createElement('div', {\n        class: 'wysi-editor',\n        contenteditable: true,\n        role: 'textbox',\n        'aria-multiline': true,\n        'aria-label': getTextAreaLabel(field),\n        'data-wid': instanceId,\n        _innerHTML: prepareContent(field.value, allowedTags)\n      });      \n\n      // Insert the editor instance in the document\n      wrapper.appendChild(toolbar.cloneNode(true));\n      wrapper.appendChild(editor);\n      field.before(wrapper);\n\n      // Apply configuration\n      configure(wrapper, options);\n\n    // Reconfigure instance\n    } else {\n      configure(sibling, options);\n    }\n  });\n}\n\n/**\n * Configure a WYSIWYG editor instance.\n * @param {object} instance The editor instance to configure.\n * @param {object} options The configuration options.\n */\nfunction configure(instance, options) {\n  if (typeof options !== 'object') {\n    return;\n  }\n\n  for (const key in options) {\n    switch (key) {\n      case 'darkMode':\n      case 'autoGrow':\n      case 'autoHide':\n        instance.classList.toggle(`wysi-${key.toLowerCase()}`, !!options[key]);\n        break;\n      case 'height':\n        const height = options.height;\n\n        if (!isNaN(height)) {\n          const editor = instance.lastChild;\n\n          editor.style.minHeight = `${height}px`;\n          editor.style.maxHeight = `${height}px`;\n        }\n        break;\n    }\n  }\n}\n\n/**\n * Destroy a WYSIWYG editor instance.\n * @param {string} selector One or more selectors pointing to textarea fields.\n */\nfunction destroy(selector) {\n  document.querySelectorAll(selector).forEach(field => {\n    const sibling = field.previousElementSibling;\n\n    if (sibling && hasClass(sibling, 'wysi-wrapper')) {\n      const instanceId = getInstanceId(sibling.lastChild);\n\n      delete instances[instanceId];\n      sibling.remove();\n    }\n  });\n}\n\n/**\n * Clean up content before pasting it in an editor.\n * @param {object} event The browser's paste event.\n */\nfunction cleanPastedContent(event) {\n  const { editor, nodes } = findInstance(event.target);\n  const clipboardData = event.clipboardData;\n\n  if (editor && clipboardData.types.includes('text/html')) {\n    const pasted = clipboardData.getData('text/html');\n    const instanceId = getInstanceId(editor);\n    const allowedTags = instances[instanceId].allowedTags;\n    let content = prepareContent(pasted, allowedTags);\n\n    // Detect a heading tag in the current selection\n    const splitHeadingTag = nodes.filter(n => headingElements.includes(n.tagName)).length > 0;\n\n    // Force split the heading tag if any.\n    // This fixes a bug in Webkit/Blink browsers where the whole content is converted to a heading\n    if (splitHeadingTag && !isFirefox) {\n      const splitter = `<h1 class=\"${placeholderClass}\"><br></h1><p class=\"${placeholderClass}\"><br></p>`;\n      content = splitter + content + splitter;\n    }\n\n    // Manually paste the cleaned content\n    execCommand('insertHTML', content);\n\n    if (splitHeadingTag && !isFirefox) {\n      // Remove placeholder elements if any\n      editor.querySelectorAll(`.${placeholderClass}`).forEach(fragment => {\n        fragment.remove();\n      });\n\n      // Unwrap nested heading elements to fix a bug in Webkit/Blink browsers\n      editor.querySelectorAll(headingElements.join()).forEach(heading => {\n        const firstChild = heading.firstElementChild;\n\n        if (firstChild && blockElements.includes(firstChild.tagName)) {\n          heading.replaceWith(...heading.childNodes);\n        }\n      });\n    }\n\n    // Prevent the default paste action\n    event.preventDefault();\n  }\n}\n\n\n/**\n * Bootstrap the WYSIWYG editor.\n */\nfunction bootstrap() {\n  // Configure editable regions\n  execCommand('styleWithCSS', false);\n  execCommand('enableObjectResizing', false);\n  execCommand('enableInlineTableEditing', false);\n  execCommand('defaultParagraphSeparator', 'p');\n\n  // Update the textarea value when the editor's content changes\n  addListener(document, 'input', '.wysi-editor', event => {\n    const editor = event.target;\n    const textarea = editor.parentNode.nextElementSibling;\n    const instanceId = getInstanceId(editor);\n    const onChange = instances[instanceId].onChange;\n    const content = editor.innerHTML;\n\n    textarea.value = content;\n    dispatchEvent(textarea, 'change');\n\n    if (onChange) {\n      onChange(content);\n    }\n  });\n\n  // Clean up pasted content\n  addListener(document, 'paste', cleanPastedContent);\n}\n\n// Expose Wysi to the global scope\nwindow.Wysi = (() => {\n  const methods = {\n    destroy: destroy\n  };\n\n  function Wysi(options) {\n    DOMReady(() => {\n      init(options || {});\n    });\n  }\n\n  for (const key in methods) {\n    Wysi[key] = (...args) => {\n      DOMReady(methods[key], args);\n    };\n  }\n\n  return Wysi;\n})();\n\n// Bootstrap Wysi when the DOM is ready\nDOMReady(bootstrap);\n"],"names":["currentSelection","settings","el","tools","label","items","darkMode","height","autoGrow","autoHide","allowedTags","br","attributes","styles","isEmpty","customTags","toolset","format","tags","paragraph","heading","quote","bold","alias","italic","underline","strike","command","alignLeft","alignCenter","alignRight","alignJustify","ul","extraTags","ol","indent","outdent","link","attributeLabels","hasForm","image","hr","removeFormat","unlink","instances","selectedClass","placeholderClass","headingElements","blockElements","concat","isFirefox","navigator","userAgent","search","execCommand","value","document","hasClass","element","classes","classList","contains","addListener","context","type","selector","fn","addEventListener","event","target","matches","call","buildFragment","html","template","createElement","innerHTML","trim","content","cloneObject","obj","JSON","parse","stringify","tag","attributeName","substring","setAttribute","DOMReady","args","undefined","readyState","apply","findInstance","currentNode","ancestor","toolbar","editor","nodes","body","tagName","push","parentNode","children","getInstanceId","getAttribute","getTextAreaLabel","textarea","labelElement","parent","id","nodeName","querySelector","filter","childNodes","n","nodeType","map","textContent","replace","l","restoreSelection","setSelection","setCurrentSelection","range","selection","getSelection","removeAllRanges","addRange","toggleButton","button","expanded","execAction","action","options","tool","url","_options$","text","original","execEditorCommand","focus","renderListBox","details","firstItem","listBox","class","join","title","_innerHTML","renderListBoxItem","menu","role","tabindex","forEach","item","option","name","appendChild","icon","openListBox","isOpen","nextElementSibling","selectedItem","firstElementChild","selectListBoxItem","previousElementSibling","closeListBox","activeListBox","closePopover","ignoreSelection","popover","NodeList","prototype","Array","stopImmediatePropagation","key","preventDefault","documentElement","anchorNode","prev","next","lastElementChild","click","inputs","querySelectorAll","_findInstance","values","node","includes","toLowerCase","selectContents","createRange","selectNodeContents","selectNode","attribute","rangeCount","getRangeAt","input","i","openPopover","selected","outerHTML","execPopoverAction","form","firstField","shiftKey","isSelectionInProgress","renderToolbar","translations","toolName","paragraphLabel","headingLabel","renderFormatTool","select","renderToolGroup","labels","fields","wrapper","field","span","_textContent","cancel","save","extraTool","renderPopover","renderTool","setTimeout","remove","add","instanceId","textAlign","style","charAt","toUpperCase","slice","allowedTag","svgElement","STYLE_ATTRIBUTE","prepareContent","container","fragment","filterContent","from","length","appendToPrev","childNode","replaceNode","wrapTextNodes","cleanContent","copyAttributes","newElement","replaceChild","filterStyles","allowedStyles","styleAttribute","split","prop","_ref","removeAttribute","allowedAttributes","removeChild","replaceWith","nextId","init","globalTranslations","window","wysiGlobalTranslations","Object","assign","targetEls","Node","HTMLCollection","isArray","getTargetElements","aliasList","enableTags","custom","sibling","configure","contenteditable","cloneNode","before","instance","toggle","isNaN","lastChild","minHeight","maxHeight","destroy","cleanPastedContent","clipboardData","types","pasted","getData","splitHeadingTag","splitter","firstChild","Wysi","methods","_loop","_len","arguments","_key","onChange","dispatchEvent","Event","bubbles"],"mappings":"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"}