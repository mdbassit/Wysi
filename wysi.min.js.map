{"version":3,"file":"wysi.min.js","sources":["../src/settings.js","../src/common.js","../src/shortcuts.js","../src/toolset.js","../src/utils.js","../src/listbox.js","../src/popover.js","../src/toolbar.js","../src/filter.js","../src/core.js"],"sourcesContent":["// Default settings\nexport default {\n\n  // Default selector\n  el: '[data-wysi], .wysi-field',\n\n  // Default tools in the toolbar\n  tools: [\n    'format', '|', 'bold', 'italic', '|', \n    {\n      label: 'Text alignment',\n      items: ['alignLeft', 'alignCenter', 'alignRight', 'alignJustify']\n    }, '|',\n    'ul', 'ol', '|', 'indent', 'outdent', '|', 'link', 'image'\n  ],\n\n  // Enable dark mode (toolbar only)\n  darkMode: false,\n\n  // Height of the editable region\n  height: 200,\n\n  // Grow the editable region's height to fit its content\n  autoGrow: false,\n\n  // Hide the toolbar when the editable region is out of focus\n  autoHide: false,\n\n  // Default list of allowed tags\n  // These tags are always allowed regardless of the instance options\n  allowedTags: {\n    br: {\n      attributes: [],\n      isEmpty: true\n    }\n  },\n\n  // Custom tags to allow when filtering inserted content\n  customTags: [\n    /* Example:\n\n    {\n      tags: ['table', 'thead', 'tbody', 'tr', 'td', 'th'], // Tags to allow\n      attributes: ['id', 'class'], // These attributes will be permitted for all the tags above\n      styles: ['width'],\n      isEmpty: false\n    }\n\n    */\n  ]\n};","// Instances storage\nexport const instances = {};\n\n// The CSS class to use for selected elements\nexport const selectedClass = 'wysi-selected';","import document from 'document';\n\n// Shortcuts\nexport const appendChild = (parent, child) => parent.appendChild(child);\nexport const dispatchEvent = (element, event) => element.dispatchEvent(new Event(event, { bubbles: true }));\nexport const execCommand = (command, value = null) => document.execCommand(command, false, value);\nexport const hasClass = (element, classes) => element.classList && element.classList.contains(classes);\nexport const getAttribute = (element, attribute) => element.getAttribute(attribute);\nexport const querySelector = (selector, context = document) => context.querySelector(selector);\nexport const querySelectorAll = (selector, context = document) => context.querySelectorAll(selector);\nexport const removeChild = (parent, child) => parent.removeChild(child);\nexport const removeAttribute = (element, attribute) => element.removeAttribute(attribute);\nexport const setAttribute = (element, attribute, value) => element.setAttribute(attribute, value);\nexport const stopImmediatePropagation = event => event.stopImmediatePropagation();\nexport const toLowerCase = str => str.toLowerCase();","import { execCommand } from './shortcuts.js';\n\n/**\n * Execute a formatBlock command.\n * @param {string} format The block format to apply.\n */\nfunction formatBlock(format) {\n  execCommand('formatBlock', `<${format}>`);\n}\n\n// Supported tools\nexport default {\n  format: {\n    tags: ['p', 'h1', 'h2', 'h3', 'h4'],\n    styles: ['text-align'],\n    label: 'Select block format',\n    paragraph: 'Paragraph',\n    heading: 'Heading',\n    action: (format) => formatBlock(format)\n  },\n  quote: {\n    tags: ['blockquote'],\n    label: 'Quote',\n    action: () => formatBlock('blockquote')\n  },\n  bold: {\n    tags: ['strong'],\n    alias: ['b'],\n    label: 'Bold',\n  },\n  italic: {\n    tags: ['em'],\n    alias: ['i'],\n    label: 'Italic',\n  },\n  underline: {\n    tags: ['u'],\n    label: 'Underline',\n  },\n  strike: {\n    tags: ['s'],\n    alias: ['del', 'strike'],\n    label: 'Strike-through',\n    command: 'strikeThrough'\n  },\n  alignLeft: {\n    label: 'Align left',\n    command: 'justifyLeft'\n  },\n  alignCenter: {\n    label: 'Align center',\n    command: 'justifyCenter'\n  },\n  alignRight: {\n    label: 'Align right',\n    command: 'justifyRight'\n  },\n  alignJustify: {\n    label: 'Justify',\n    command: 'justifyFull'\n  },\n  ul: {\n    tags: ['ul'],\n    extraTags: ['li'],\n    styles: ['text-align'],\n    label: 'Bulleted list',\n    command: 'insertUnorderedList'\n  },\n  ol: {\n    tags: ['ol'],\n    extraTags: ['li'],\n    styles: ['text-align'],\n    label: 'Numbered list',\n    command: 'insertOrderedList'\n  },\n  indent: {\n    label: 'Increase indent',\n  },\n  outdent: {\n    label: 'Decrease indent',\n  },\n  link: {\n    tags: ['a'],\n    attributes: [/*'id', 'name', */'href', /*'target', 'onclick'*/],\n    attributeLabels: ['URL'],\n    hasForm: true,\n    label: 'Link',\n    action: (url) => execCommand('createLink', url)\n  },\n  image: {\n    tags: ['img'],\n    attributes: ['src', 'alt'/*, 'title'*/],\n    attributeLabels: ['URL', 'Alternative text'],\n    isEmpty: true,\n    hasForm: true,\n    label: 'Image',\n    action: (url, text = '', original) => {\n      const image = `<img src=\"${url}\" alt=\"${text}\" class=\"wysi-selected\">`;\n      const html = original ? original.replace(/<img[^>]+>/i, image) : image;\n      execCommand('insertHTML', html);\n    }\n  },\n  hr: {\n    tags: ['hr'],\n    isEmpty: true,\n    label: 'Horizontal line',\n    command: 'insertHorizontalRule'\n  },\n  removeFormat: {\n    label: 'Remove format'\n  },\n  unlink: {\n    label: 'Remove link'\n  }\n};","import document from 'document';\nimport toolset from './toolset.js';\nimport {\n  execCommand,\n  getAttribute,\n  hasClass,\n  querySelector,\n  setAttribute,\n  toLowerCase\n} from './shortcuts.js';\n\n// Used to store the current DOM selection for later use\nlet currentSelection;\n\n// Polyfill for Nodelist.forEach\nif (NodeList !== undefined && NodeList.prototype && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = Array.prototype.forEach;\n}\n\n/**\n * Shortcut for addEventListener to optimize the minified JS.\n * @param {object} context The context to which the listener is attached.\n * @param {string} type Event type.\n * @param {(string|function)} selector Event target if delegation is used, event handler if not.\n * @param {function} [fn] Event handler if delegation is used.\n */\nfunction addListener(context, type, selector, fn) {\n  // Delegate event to the target of the selector\n  if (typeof selector === 'string') {\n    context.addEventListener(type, event => {\n      const target = event.target;\n\n      if (target.matches(selector)) {\n        fn.call(target, event);\n      }\n    });\n\n  // If the selector is not a string then it's a function\n  // in which case we need a regular event listener\n  } else {\n    fn = selector;\n    context.addEventListener(type, fn);\n  }\n}\n\n/**\n * Build an html fragment from a string.\n * @param {string} html The HTML code.\n * @return {object} A document fragment.\n */\nfunction buildFragment(html) {\n  const template = createElement('template');\n\n  template.innerHTML = html.trim();\n  return template.content;\n}\n\n/**\n * Deep clone an object.\n * @param {object} obj The object to clone.\n * @return {object} The clone object.\n */\nfunction cloneObject(obj) {\n  return obj ? JSON.parse(JSON.stringify(obj)) : obj;\n}\n\n/**\n * Create an element and optionally set its attributes.\n * @param {string} tag The HTML tag of the new element.\n * @param {object} [attributes] The element's attributes.\n * @return {object} An HTML element.\n */\nfunction createElement(tag, attributes) {\n  const element = document.createElement(tag);\n\n  if (attributes) {\n    for (const attributeName in attributes) {\n      // Attribute names starting with underscore are actually properties\n      if (attributeName[0] === '_') {\n        element[attributeName.substring(1)] = attributes[attributeName];\n      } else {\n        setAttribute(element, attributeName, attributes[attributeName]);\n      }\n    }\n  }\n\n  return element;\n}\n\n/**\n * Call a function only when the DOM is ready.\n * @param {function} fn The function to call.\n * @param {array} [args] Arguments to pass to the function.\n */\nfunction DOMReady(fn, args) {\n  args = args !== undefined ? args : [];\n\n  if (document.readyState !== 'loading') {\n    fn(...args);\n  } else {\n    addListener(document, 'DOMContentLoaded', () => {\n      fn(...args);\n    });\n  }\n}\n\n/**\n * Execute an action.\n * @param {string} action The action to execute.\n * @param {object} region The editable region.\n * @param {array} [options] Optional action parameters.\n */\nfunction execAction(action, region, options = []) {\n  const tool = toolset[action];\n  \n  if (tool) {\n    const command = tool.command || action;\n    const realAction = tool.action || (() => execCommand(command));\n\n    // Restore selection if any\n    restoreSelection();\n\n    // Execute the tool's action\n    realAction(...options);\n\n    // Focus the editable region\n    region.focus();\n  }\n}\n\n/**\n * Find the current editor instance.\n * @param {object} currentNode The possible child node of the editor instance.\n * @return {object} The instance's editable region and toolbar, and an array of nodes that lead to it.\n */\nfunction findInstance(currentNode) {\n  const nodes = [];\n  let ancestor, toolbar, region;\n\n  // Find all HTML tags between the current node and the editable ancestor\n  while (currentNode && currentNode !== document.body) {\n    const tag = currentNode.tagName;\n\n    if (tag) {\n      if (hasClass(currentNode, 'wysi-wrapper')) {\n        // Editable ancestor found\n        ancestor = currentNode;\n        break;\n      } else {\n        nodes.push(currentNode);\n      }\n    }\n\n    currentNode = currentNode.parentNode;\n  }\n\n  if (ancestor) {\n    const children = ancestor.children;\n\n    toolbar = children[0];\n    region = children[1];\n  }\n\n  return { toolbar, region, nodes };\n}\n\n/**\n * Get an editor's instance id.\n * @param {object} editor The editor element.\n * @return {string} The instance id.\n */ \nfunction getInstanceId(editor) {\n  return getAttribute(editor, 'data-wid');\n}\n\n/**\n * Try to guess the textarea element's label if any.\n * @param {object} textarea The textarea element.\n * @return {string} The textarea element's label or an empty string.\n */ \nfunction getTextAreaLabel(textarea) {\n  const parent = textarea.parentNode;\n  const id = textarea.id;\n  let labelElement;\n\n  // If the textarea element is inside a label element\n  if (parent.nodeName === 'LABEL') {\n    labelElement = parent;\n\n  // Or if the textarea element has an id, and there is a label element\n  // with an attribute \"for\" that points to that id\n  } else if (id !== undefined) {\n    labelElement = querySelector(`label[for=\"${id}\"]`);\n  }\n\n  // If a label element is found, return the first non empty child text node\n  if (labelElement) {\n    const textNodes = [].filter.call(labelElement.childNodes, n => n.nodeType === 3);\n    const texts = textNodes.map(n => n.textContent.replace(/\\s+/g, ' ').trim());\n    const label = texts.filter(l => l !== '')[0];\n\n    if (label) {\n      return label;\n    }\n  }\n\n  return '';\n}\n\n/**\n * Restore a previous selection if any.\n */\nfunction restoreSelection() {\n  if (currentSelection) {\n    setSelection(currentSelection);\n    currentSelection = undefined;\n  }\n}\n\n/**\n * Set the value of the current selection.\n * @param {object} range The range to set.\n */\nfunction setCurrentSelection(range) {\n  currentSelection = range;\n}\n\n/**\n * Set the selection to a range.\n * @param {object} range The range to select.\n */\nfunction setSelection(range) {\n  const selection = document.getSelection();\n\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n\n/**\n * Set the expanded state of a button.\n * @param {object} button The button.\n * @param {boolean} expanded The expanded state.\n */\nfunction toggleButton(button, expanded) {\n  setAttribute(button, 'aria-expanded', expanded);\n}\n\nexport {\n  addListener,\n  buildFragment,\n  cloneObject,\n  createElement,\n  DOMReady,\n  execAction,\n  findInstance,\n  getInstanceId,\n  getTextAreaLabel,\n  restoreSelection,\n  setCurrentSelection,\n  setSelection,\n  toggleButton\n};","import document from 'document';\nimport toolset from './toolset.js';\nimport { instances } from './common.js';\nimport {\n  addListener,\n  createElement,\n  execAction,\n  findInstance,\n  toggleButton\n} from './utils.js';\nimport {\n  appendChild,\n  getAttribute,\n  querySelector,\n  querySelectorAll,\n  setAttribute,\n  stopImmediatePropagation\n} from './shortcuts.js';\n\n\n/**\n * Render a list box.\n * @param {object} details The list box properties and data.\n * @return {object} A DOM element containing the list box.\n */\nfunction renderListBox(details) {\n  const label = details.label;\n  const items = details.items;\n  const firstItem = items[0];\n  const classes = ['wysi-listbox'].concat(details.classes || []);\n\n  // List box wrapper\n  const listBox = createElement('div', { class: classes.join(' ') });\n\n  // List box button\n  const button = createElement('button', {\n    type: 'button',\n    title: label,\n    'aria-label': `${label} ${firstItem.label}`,\n    'aria-haspopup': 'listbox',\n    'aria-expanded': false,\n    _innerHTML: renderListBoxItem(firstItem)\n  });\n\n  // List box menu\n  const menu = createElement('div', {\n    role: 'listbox',\n    tabindex: -1,\n    'aria-label': label\n  });\n\n  // List box items\n  items.forEach(item => {\n    const option = createElement('button', {\n      type: 'button',\n      role: 'option',\n      tabindex: -1,\n      'aria-label': item.label,\n      'aria-selected': false,\n      'data-action': item.action,\n      'data-option': item.name || '',\n      _innerHTML: renderListBoxItem(item)\n    });\n\n    appendChild(menu, option);\n  });\n\n  // Tie it all together\n  appendChild(listBox, button);\n  appendChild(listBox, menu);\n\n  return listBox;\n}\n\n/**\n * Render a list box item.\n * @param {object} item The list box item.\n * @return {string} The list box item's content.\n */\nfunction renderListBoxItem(item) {\n  return item.icon ? `<svg><use href=\"#wysi-${item.icon}\"></use></svg>` : item.label;\n}\n\n/**\n * Open a list box.\n * @param {object} button The list box's button.\n */\nfunction openListBox(button) {\n  const isOpen = getAttribute(button, 'aria-expanded') === 'true';\n  const listBox = button.nextElementSibling;\n  let selectedItem = querySelector('[aria-selected=\"true\"]', listBox);\n\n  if (!selectedItem) {\n    selectedItem = listBox.firstElementChild;\n  }\n\n  toggleButton(button, !isOpen);\n  selectedItem.focus();\n}\n\n/**\n * Select a list box item.\n * @param {object} item The list box item.\n */\nfunction selectListBoxItem(item) {\n  const listBox = item.parentNode;\n  const button = listBox.previousElementSibling;\n  const selectedItem = querySelector('[aria-selected=\"true\"]', listBox);\n\n  if (selectedItem) {\n    setAttribute(selectedItem, 'aria-selected', 'false');\n  }\n\n  setAttribute(item, 'aria-selected', 'true');\n  button.innerHTML = item.innerHTML;\n}\n\n/**\n * Close the currently open list box if any.\n */\nfunction closeListBox() {\n  const activeListBox = querySelector('.wysi-listbox [aria-expanded=\"true\"]');\n\n  if (activeListBox) {\n    toggleButton(activeListBox, false);\n  }\n}\n\n// list box button click\naddListener(document, 'click', '.wysi-listbox > button', event => {\n  closeListBox();\n  openListBox(event.target);\n  stopImmediatePropagation(event);\n});\n\n// On key press on the list box button\naddListener(document, 'keydown', '.wysi-listbox > button', event => {\n  switch (event.key) {\n    case 'ArrowUp':\n    case 'ArrowDown':\n    case 'Enter':\n    case ' ':\n      openListBox(event.target);\n      event.preventDefault();\n      break;\n  }\n});\n\n// When the mouse moves on a list box item, focus it\naddListener(document.documentElement, 'mousemove', '.wysi-listbox > div > button', event => {\n  event.target.focus();\n});\n\n// On click on an list box item\naddListener(document, 'click', '.wysi-listbox > div > button', event => {\n  const item = event.target;\n  const action = getAttribute(item, 'data-action');\n  const option = getAttribute(item, 'data-option');\n  const { region } = findInstance(item);\n  const selection = document.getSelection();\n\n  if (selection && region.contains(selection.anchorNode)) {\n    execAction(action, region, [option]);\n  }\n\n  selectListBoxItem(item);\n});\n\n// On key press on an item\naddListener(document, 'keydown', '.wysi-listbox > div > button', event => {\n  const item = event.target;\n  const listBox = item.parentNode;\n  const button = listBox.previousElementSibling;\n  let preventDefault = true;\n\n  switch (event.key) {\n    case 'ArrowUp':\n      const prev = item.previousElementSibling;\n\n      if (prev) {\n        prev.focus();\n      }\n\n      break;\n    case 'ArrowDown':\n      const next = item.nextElementSibling;\n\n      if (next) {\n        next.focus();\n      }\n\n      break;\n    case 'Home':\n      listBox.firstElementChild.focus();\n      break;\n    case 'End':\n      listBox.lastElementChild.focus();\n      break;\n    case 'Tab':\n      item.click();\n      break;\n    case 'Escape':\n      toggleButton(button, false);\n      break;\n    default:\n      preventDefault = false;\n  }\n\n  if (preventDefault) {\n    event.preventDefault();\n  }\n});\n\n// Close open popups and dropdowns on click outside\naddListener(document, 'click', event => {\n  closeListBox();\n});\n\nexport { renderListBox, selectListBoxItem };","import document from 'document';\nimport toolset from './toolset.js';\nimport { renderListBox, selectListBoxItem } from './listbox.js';\nimport { selectedClass } from './common.js';\nimport {\n  appendChild,\n  getAttribute,\n  querySelector,\n  querySelectorAll,\n  setAttribute,\n  stopImmediatePropagation,\n  toLowerCase\n} from './shortcuts.js';\nimport {\n  addListener,\n  createElement,\n  execAction,\n  findInstance,\n  restoreSelection,\n  setCurrentSelection,\n  toggleButton\n} from './utils.js';\n\n/**\n * Render a popover form to set a tool's parameters.\n * @param {string} toolName The tool name.\n * @param {object} button The tool's toolbar button.\n * @param {object} translations The labels translation object.\n * @return {object} A DOM element containing the button and the popover.\n */\nfunction renderPopover(toolName, button, translations) {\n  const tool = toolset[toolName];\n  const labels = tool.attributeLabels;\n  const fields = tool.attributes.map((attribute, i) => {\n    return {\n      name: attribute,\n      label: translations[attribute] || labels[i],\n    }\n  });\n\n  // Popover wrapper\n  const wrapper = createElement('div', {\n    class: 'wysi-popover'\n  });\n\n  // Popover\n  const popover = createElement('div', {\n    tabindex: -1,\n  });\n\n  // Toolbar Button\n  setAttribute(button, 'aria-haspopup', true);\n  setAttribute(button, 'aria-expanded', false);\n\n  appendChild(wrapper, button);\n  appendChild(wrapper, popover);\n\n  fields.forEach(field => {\n    const label = createElement('label');\n    const span = createElement('span', { _textContent: field.label });\n    const input = createElement('input', { type: 'text' });\n\n    appendChild(label, span);\n    appendChild(label, input);\n    appendChild(popover, label);\n  });\n\n  const cancel = createElement('button', {\n    type: 'button',\n    _textContent: translations.cancel || 'Cancel'\n  });\n\n  const save = createElement('button', {\n    type: 'button',\n    'data-action': toolName,\n    _textContent: translations.save || 'Save'\n  });\n\n  // The link popover needs an extra \"Remove link\" button\n  if (toolName === 'link') {\n    const extraTool = 'unlink';\n    const label = translations[extraTool] || toolset[extraTool].label;\n\n    appendChild(popover, createElement('button', {\n      type: 'button',\n      title: label,\n      'aria-label': label,\n      'data-action': extraTool,\n      _innerHTML: `<svg><use href=\"#wysi-delete\"></use></svg>`\n    }));\n  }\n\n  appendChild(popover, cancel);\n  appendChild(popover, save);\n\n  return wrapper;\n}\n\n/**\n * Open a popover.\n * @param {object} button The popover's button.\n */\nfunction openPopover(button) {\n  const inputs = querySelectorAll('input', button.nextElementSibling);\n  const selection = document.getSelection();\n  const anchorNode = selection.anchorNode;\n  const { region, nodes } = findInstance(anchorNode);\n  const values = [];\n\n  if (region) {\n    // Try to find an existing target of the popover's action from the DOM selection\n    const action = getAttribute(button, 'data-action');\n    const tool = toolset[action];\n    let target = nodes.filter(node => tool.tags.includes(toLowerCase(node.tagName)))[0];\n    let selectContents = true;\n\n    // If that fails, look for an element with the selection CSS class\n    if (!target) {\n      target = querySelector(`.${selectedClass}`, region);\n      selectContents = false;\n    }\n\n    // If an existing target is found, we will be in modification mode\n    if (target) {\n      const range = document.createRange();\n      \n      // Add the target to a selection range\n      // Depending on the type of the target, select the whole node or just its contents\n      if (selectContents) {\n        range.selectNodeContents(target);\n      } else {\n        range.selectNode(target);\n      }\n\n      // Save the current selection for later use\n      setCurrentSelection(range);\n\n      // Retrieve the current attribute values of the target for modification\n      tool.attributes.forEach(attribute => {\n        values.push(getAttribute(target, attribute));\n      })\n\n    // If no existing target is found, we are adding new content\n    } else if (selection && region.contains(anchorNode) && selection.rangeCount) {\n      // Save the current selection to keep track of where to insert the content\n      setCurrentSelection(selection.getRangeAt(0));\n    }\n  }\n\n  // Populate the form fields with the existing values if any\n  inputs.forEach((input, i) => {\n    input.value = values[i] || '';\n  });\n\n  // Open this popover\n  toggleButton(button, true);\n\n  // Focus the first input field\n  inputs[0].focus();\n}\n\n/**\n * Execute a popover's action.\n * @param {object} button The popover's action button.\n */\nfunction execPopoverAction(button) {\n  const action = getAttribute(button, 'data-action');\n  const inputs = querySelectorAll('input', button.parentNode);\n  const { region } = findInstance(button);\n  const options = [];\n\n  inputs.forEach(input => {\n    options.push(input.value);\n  });\n\n  // Workaround for links being removed when updating images\n  if (action === 'image') {\n    const selected = querySelector(`.${selectedClass}`, region);\n    const parent = selected ? selected.parentNode : {};\n\n    if (selected && parent.tagName === 'A') {\n      options.push(parent.outerHTML);\n    }\n  }\n\n  execAction(action, region, options);\n}\n\n/**\n * Close the open popover if any.\n * @param {boolean} ignoreSelection If true, do not restore the previous selection.\n */\nfunction closePopover(ignoreSelection) {\n  const popover = querySelector('.wysi-popover [aria-expanded=\"true\"]');\n\n  if (popover) {\n    toggleButton(popover, false);\n  }\n\n  if (!ignoreSelection) {\n    restoreSelection();\n  }\n}\n\n// Open a popover\naddListener(document, 'click', '.wysi-popover > button', event => {\n  closePopover();\n  openPopover(event.target);\n  stopImmediatePropagation(event);\n});\n\n// Execute the popover action\naddListener(document, 'click', '.wysi-popover > div > button[data-action]', event => {\n  execPopoverAction(event.target);\n  closePopover(true);\n});\n\n// Cancel the popover\naddListener(document, 'click', '.wysi-popover > div > button:not([data-action])', event => {\n  closePopover();\n});\n\n// Prevent clicks on the popover content to propagate (keep popover open)\naddListener(document, 'click', '.wysi-popover *:not(button)', event => {\n  stopImmediatePropagation(event);\n});\n\n// Trap focus inside a popover until it's closed\naddListener(document, 'keydown', '.wysi-popover *', event => {\n  const target = event.target;\n  const parent = target.parentNode;\n  const form = parent.tagName === 'DIV' ? parent : parent.parentNode;\n\n  switch (event.key) {\n    case 'Tab':\n      const firstField = querySelector('input', form);\n\n      if (event.shiftKey) {\n        if (target === firstField) {\n          form.lastElementChild.focus();\n          event.preventDefault();\n        }\n      } else {\n        if (!target.nextElementSibling && !target.parentNode.nextElementSibling) {\n          firstField.focus();\n          event.preventDefault();\n        }\n      }\n      break;\n    case 'Enter':\n      if (target.tagName === 'INPUT') {\n        const actionButton = querySelector('[data-action]:last-of-type', form);\n\n        actionButton.click();\n        event.preventDefault();\n      }\n      break;\n    case 'Escape':\n      closePopover();\n      break;\n  }\n\n});\n\nlet isSelectionInProgress = false;\n\n// Close open popups and dropdowns on click outside\naddListener(document, 'click', event => {\n  if (!isSelectionInProgress) {\n    closePopover();\n  }\n});\n\n// Text selection within a popover is in progress\n// This helps avoid closing a popover when the end of a text selection is outside it\naddListener(document, 'mousedown', '.wysi-popover, .wysi-popover *', event => {\n  isSelectionInProgress = true;\n});\n\n// The text selection ended\naddListener(document, 'mouseup', event => {\n  setTimeout(() => { isSelectionInProgress = false; });\n});\n\nexport { renderPopover };","import document from 'document';\nimport toolset from './toolset.js';\nimport { renderPopover } from './popover.js';\nimport { renderListBox, selectListBoxItem } from './listbox.js';\nimport { instances, selectedClass } from './common.js';\nimport {\n  appendChild,\n  getAttribute,\n  querySelector,\n  querySelectorAll,\n  setAttribute,\n  toLowerCase\n} from './shortcuts.js';\nimport {\n  addListener,\n  buildFragment,\n  createElement,\n  DOMReady,\n  execAction,\n  findInstance,\n  getInstanceId,\n  setSelection\n} from './utils.js';\n\n/**\n * Render the toolbar.\n * @param {array} tools The list of tools in the toolbar.\n * @param {object} translations The labels translation object.\n * @return {string} The toolbars HTML string.\n */\nfunction renderToolbar(tools, translations) {\n  const toolbar = createElement('div', { class: 'wysi-toolbar' });\n\n  // Generate toolbar buttons\n  tools.forEach(toolName => {\n    switch (toolName) {\n      // Toolbar separator\n      case '|':\n        appendChild(toolbar, createElement('div', { class: 'wysi-separator' }));\n        break;\n\n      // Toolbar new line\n      case '-':\n        appendChild(toolbar, createElement('div', { class: 'wysi-newline' }));\n        break;\n\n      // The format tool renders as a list box\n      case 'format':\n        appendChild(toolbar, renderFormatTool(translations));\n        break;\n\n      // All the other tools render as buttons\n      default:\n        if (typeof toolName === 'object') {\n          if (toolName.items) {\n            appendChild(toolbar, renderToolGroup(toolName, translations));\n          }\n        } else {\n          renderTool(toolName, toolbar, translations);\n        }\n    }\n  });\n\n  return toolbar;\n}\n\n/**\n * Render a tool.\n * @param {string} name The tool's name.\n * @param {object} toolbar The toolbar to which the tool will be appended.\n * @param {object} translations The labels translation object.\n */\nfunction renderTool(name, toolbar, translations) {\n  const tool = toolset[name];\n  const label = translations[name] || tool.label;\n  const button = createElement('button', {\n    type: 'button',\n    title: label,\n    'aria-label': label,\n    'aria-pressed': false,\n    'data-action': name,\n    _innerHTML: `<svg><use href=\"#wysi-${name}\"></use></svg>`\n  });\n\n  // Tools that require parameters (e.g: image, link) need a popover\n  if (tool.hasForm) {\n    const popover = renderPopover(name, button, translations);\n    appendChild(toolbar, popover);\n\n  // The other tools only display a button\n  } else {\n    appendChild(toolbar, button);\n  }\n}\n\n/**\n * Render a tool group.\n * @param {object} details The group's properties.\n * @param {object} translations The labels translation object.\n * @return {object} A DOM element containing the tool group.\n */\nfunction renderToolGroup(details, translations) {\n  const label = details.label || translations.select || 'Select an item';\n  const options = details.items;\n\n  const items = options.map(option => {\n    const tool = toolset[option];\n    const label = translations[option] || tool.label;\n    const icon = option;\n    const action = option;\n\n    return { label, icon, action };\n  });\n\n  return renderListBox({ label, items });\n}\n\n/**\n * Render format tool.\n * @param {object} translations The labels translation object.\n * @return {object} A DOM element containing the format tool.\n */\nfunction renderFormatTool(translations) {\n  const label = translations['format'] || toolset.format.label;\n  const paragraphLabel = translations['paragraph'] || toolset.format.paragraph;\n  const headingLabel = translations['heading'] || toolset.format.heading;\n  const classes = 'wysi-format';\n  const items = toolset.format.tags.map(tag => { \n    const name = tag;\n    const label = tag === 'p' ? paragraphLabel : `${headingLabel} ${tag.substring(1)}`;\n    const action = 'format';\n\n    return { name, label, action };\n  });\n\n  return renderListBox({ label, items, classes });\n}\n\n/**\n * Update toolbar buttons state.\n */\nfunction updateToolbarState() {\n  const { toolbar, region, nodes } = findInstance(document.getSelection().anchorNode);\n  const tags = nodes.map(node => toLowerCase(node.tagName));\n\n  // Abort if the selection is not within an editable region\n  if (!region) {\n    return;\n  }\n\n  // Get the list of allowed tags in the current editable region\n  const instanceId = getInstanceId(region);\n  const allowedTags = instances[instanceId].allowedTags;\n\n  // Reset the state of all buttons\n  querySelectorAll('[aria-pressed=\"true\"]', toolbar).forEach(button => setAttribute(button, 'aria-pressed', 'false'));\n\n  // Reset the state of all list boxes\n  querySelectorAll('.wysi-listbox > div > button:first-of-type', toolbar).forEach(button => selectListBoxItem(button));\n  \n\n  // Update the buttons states\n  tags.forEach((tag, i) => {\n    switch (tag) {\n      case 'p':\n      case 'h1':\n      case 'h2':\n      case 'h3':\n      case 'h4':\n      case 'li':\n        const format = querySelector(`[data-action=\"format\"][data-option=\"${tag}\"]`, toolbar);\n        const textAlign = nodes[i].style.textAlign;\n\n        if (format) {\n          selectListBoxItem(format);\n        }\n\n        // Check for text align\n        if (textAlign) {\n          const action = 'align' + textAlign.charAt(0).toUpperCase() + textAlign.slice(1);\n          const button = querySelector(`[data-action=\"${action}\"]`, toolbar);\n          \n          if (button) {\n            if (getAttribute(button.parentNode, 'role') === 'listbox') {\n              selectListBoxItem(button);\n            } else {\n              setAttribute(button, 'aria-pressed', 'true');\n            }\n          }\n        }\n        break;\n      default:\n        const allowedTag = allowedTags[tag];\n        const action = allowedTag ? allowedTag.toolName : undefined;\n\n        if (action) {\n          const button = querySelector(`[data-action=\"${action}\"]`, toolbar);\n          setAttribute(button, 'aria-pressed', 'true');\n        }\n    }    \n  });\n}\n\n/**\n * Embed SVG icons in the HTML document.\n */\nfunction embedSVGIcons() {\n  // The icons will be included during the build process\n  const icons = '_SVGIcons_';\n  const svgElement = buildFragment(icons);\n\n  appendChild(document.body, svgElement);\n}\n\n// Deselect selected element when clicking outside\naddListener(document, 'click', '.wysi-editor, .wysi-editor *', event => {\n  const selected = querySelector(`.${selectedClass}`);\n\n  if (selected && selected !== event.target) {\n    selected.classList.remove(selectedClass);\n  }\n});\n\n// Select an image when it's clicked\naddListener(document, 'click', '.wysi-editor img', event => {\n  const image = event.target;\n  const range = document.createRange();\n\n  image.classList.add(selectedClass);\n\n  range.selectNode(image);\n  setSelection(range);\n});\n\n// Toolbar button click\naddListener(document, 'click', '.wysi-toolbar > button', event => {\n  const button = event.target;\n  const action = getAttribute(button, 'data-action');\n  const { region } = findInstance(button);\n  const selection = document.getSelection();\n\n  if (selection && region.contains(selection.anchorNode)) {\n    execAction(action, region);\n  }\n});\n\n// Update the toolbar buttons state\naddListener(document, 'selectionchange', updateToolbarState);\n\n// include SVG icons\nDOMReady(embedSVGIcons);\n\nexport { renderToolbar };","import settings from './settings.js';\nimport toolset from './toolset.js';\nimport { buildFragment, cloneObject, createElement } from './utils.js';\nimport {\n  appendChild,\n  getAttribute,\n  removeChild,\n  removeAttribute,\n  setAttribute,\n  toLowerCase,\n} from './shortcuts.js';\n\n\nconst STYLE_ATTRIBUTE = 'style';\n\n/**\n * Enable HTML tags belonging to a set of tools.\n * @param {array} tools A array of tool objects.\n * @return {object} The list of allowed tags.\n */\nfunction enableTags(tools) {\n  const allowedTags = cloneObject(settings.allowedTags);\n\n  tools.forEach(toolName => {\n    const tool = cloneObject(toolset[toolName]);\n\n    if (!tool || !tool.tags) {\n      return;\n    }\n\n    const isEmpty = !!tool.isEmpty;\n    const extraTags = tool.extraTags || [];\n    const aliasList = tool.alias || [];\n    const alias = aliasList.length ? tool.tags[0] : undefined;\n    const tags = [...tool.tags, ...extraTags, ...aliasList];\n    const attributes = tool.attributes || [];\n    const styles = tool.styles || [];\n\n    tags.forEach(tag => {\n      allowedTags[tag] = { attributes, styles, alias, isEmpty };\n      \n      if (!extraTags.includes(tag)) {\n        allowedTags[tag].toolName = toolName;\n      }\n    });\n  });\n\n  return allowedTags;\n}\n\n/**\n * Prepare raw content for editing.\n * @param {string} content The editable region's raw content.\n * @param {array} allowedTags The list of allowed tags.\n * @return {string} The filter HTML content.\n */\nfunction prepareContent(content, allowedTags) {\n  const container = createElement('div');\n  const fragment = buildFragment(content);\n\n  filterContent(fragment, allowedTags);\n  wrapTextNodes(fragment);\n  cleanContent(fragment, allowedTags);\n  appendChild(container, fragment);\n\n  return container.innerHTML;\n}\n\n/**\n * Replace a DOM element with another while preserving its content.\n * @param {object} node The element to replace.\n * @param {string} tag The HTML tag of the new element.\n * @param {boolean} [copyAttributes] If true, also copy the original element's attributes.\n */\nfunction replaceNode(node, tag, copyAttributes) {\n  const newElement = createElement(tag);\n  const parentNode = node.parentNode;\n  const attributes = node.attributes;\n\n  // Copy the original element's content\n  newElement.innerHTML = node.innerHTML || node.textContent || node.outerHTML;\n\n  // Copy the original element's attributes\n  if (copyAttributes && attributes) {\n    for (let i = 0; i < attributes.length; i++) {\n      setAttribute(newElement, attributes[i].name, attributes[i].value);\n    }\n  }\n\n  // Replace the element\n  parentNode.replaceChild(newElement, node);\n}\n\n/**\n * Remove unsupported CSS styles from a node.\n * @param {object} node The element to filter.\n * @param {array} allowedStyles An array of supported styles.\n */\nfunction filterStyles(node, allowedStyles) {\n  const styleAttribute = getAttribute(node, STYLE_ATTRIBUTE);\n\n  if (styleAttribute) {\n    // Parse the styles\n    const styles = styleAttribute.split(';').map(style => {\n      const prop = style.split(':');\n      \n      return {\n        name: prop[0].trim(),\n        value: prop[1]\n      };\n    })\n    // Filter the styles\n    .filter(style => allowedStyles.includes(style.name))\n\n    // Convert back to a style string\n    .map(({ name, value }) => `${name}: ${value.trim()};`).join('');\n\n    if (styles !== '') {\n      setAttribute(node, STYLE_ATTRIBUTE, styles);\n    } else {\n      removeAttribute(node, STYLE_ATTRIBUTE);\n    }\n  }\n}\n\n/**\n * Remove unsupported HTML tags and attributes.\n * @param {object} node The parent element to filter recursively.\n * @param {array} allowedTags The list of allowed tags.\n */\nfunction filterContent(node, allowedTags) {\n  const children = Array.from(node.childNodes);\n\n  if (!children || !children.length) {\n    return;\n  }\n\n  children.forEach(childNode => {\n    // Element nodes\n    if (childNode.nodeType === 1) {\n      // Filter recursively (deeper nodes firest)\n      filterContent(childNode, allowedTags);\n\n      // Check if the current element is allowed\n      const tag = toLowerCase(childNode.tagName);\n      const allowedTag = allowedTags[tag];\n      const attributes = Array.from(childNode.attributes);\n\n      if (allowedTag) {\n        const allowedAttributes = allowedTag.attributes;\n        const allowedStyles = allowedTag.styles;\n\n        // Remove attributes that are not allowed\n        for (let i = 0; i < attributes.length; i++) {\n          const attributeName = attributes[i].name;\n\n          if (!allowedAttributes.includes(attributes[i].name)) {\n            if (attributeName === STYLE_ATTRIBUTE && allowedStyles.length) {\n              filterStyles(childNode, allowedStyles);\n            } else {\n              removeAttribute(childNode, attributes[i].name);\n            }\n          }\n        }\n\n        // If the tag is an alias, replace it with the standard tag\n        // e.g: <b> tags will be replaced with <strong> tags\n        if (allowedTag.alias) {\n          replaceNode(childNode, allowedTag.alias, true);\n        }\n      } else {\n        // Remove style nodes\n        if (tag === 'style') {\n          removeChild(node, childNode);\n\n        // And unwrap the other nodes\n        } else {\n          childNode.replaceWith(...childNode.childNodes);\n        }\n      }\n\n    // Remove comment nodes\n    } else if (childNode.nodeType === 8) {\n      removeChild(node, childNode);\n    }\n  });\n}\n\n/**\n * Remove empty nodes.\n * @param {object} node The parent element to filter recursively.\n * @param {array} allowedTags The list of allowed tags.\n */\nfunction cleanContent(node, allowedTags) {\n  const children = Array.from(node.childNodes);\n\n  if (!children || !children.length) {\n    return;\n  }\n\n  children.forEach(childNode => {\n    // Remove empty element nodes\n    if (childNode.nodeType === 1) {\n      // Filter recursively (deeper nodes firest)\n      cleanContent(childNode, allowedTags);\n\n      // Check if the element can be empty\n      const tag = toLowerCase(childNode.tagName);\n      const allowedTag = allowedTags[tag];\n\n      if (allowedTag && !allowedTag.isEmpty && trimText(childNode.innerHTML) === '') {\n        removeChild(node, childNode);\n      }\n    }\n  });\n}\n\n/**\n * Wrap the child text nodes in a paragraph (non-recursively).\n * @param {object} node The parent element of the text nodes.\n */\nfunction wrapTextNodes(node) {\n  const children = Array.from(node.childNodes);\n\n  if (!children || !children.length) {\n    return;\n  }\n\n  const exclude = ['BLOCKQUOTE', 'H1', 'H2', 'H3', 'H4', 'HR', 'P', 'OL', 'UL'];\n  let appendToPrev = false;\n\n  children.forEach(childNode => {\n    if (childNode.nodeType !== 3 && exclude.includes(childNode.tagName)) {\n      appendToPrev = false;\n      return;\n    }\n\n    // Remove empty text node\n    /*if (trimText(childNode.textContent) === '') {\n      removeChild(node, childNode);\n\n    // Wrap text node in a paragraph\n    } else {*/\n      if (appendToPrev) {\n        const prev = childNode.previousElementSibling;\n\n        if (prev) {\n          prev.appendChild(childNode);\n        }\n      } else {\n        replaceNode(childNode, 'p');\n        appendToPrev = true;\n      }\n    /*}*/\n  });\n}\n\n/**\n * Trim whitespace from the start and end of a text.\n * @param {string} text The text to trim.\n * @return {string} The trimmed text.\n */\nfunction trimText(text) {\n  return text.replace(/^\\s+|\\s+$/g, '').trim();\n}\n\nexport {\n  enableTags,\n  prepareContent\n};","import window from 'window';\nimport document from 'document';\nimport settings from './settings.js';\nimport { instances } from './common.js';\nimport { renderToolbar } from './toolbar.js';\nimport { enableTags, prepareContent } from './filter.js';\nimport { \n  addListener,\n  cloneObject,\n  createElement,\n  DOMReady,\n  findInstance,\n  getInstanceId,\n  getTextAreaLabel\n} from './utils.js';\nimport {\n  appendChild,\n  dispatchEvent,\n  execCommand,\n  getAttribute,\n  hasClass,\n  querySelectorAll,\n  toLowerCase\n} from './shortcuts.js';\n\n\n// Next available instance id\nlet nextId = 0;\n\n/**\n * Init a WYSIWYG editor instance.\n * @param {object} options Configuration options.\n */\nfunction init(options) {\n  const globalTranslations = window.wysiGlobalTranslations || {};\n  const translations = Object.assign({}, globalTranslations, options.translations || {});\n  const tools = options.tools || settings.tools;\n  const selector = options.el || settings.el;\n  const toolbar = renderToolbar(tools, translations);\n  const allowedTags = enableTags(tools);\n  const customTags = options.customTags || [];\n\n  // Add custom tags if any to the allowed tags list\n  customTags.forEach(custom => {\n    if (custom.tags) {\n      const attributes = custom.attributes || [];\n      const styles = custom.styles || [];\n      const isEmpty = !!custom.isEmpty;\n\n      custom.tags.forEach(tag => {\n        allowedTags[tag] = { attributes, styles, isEmpty };\n      });\n    }\n  });\n\n  // Append an editable region\n  querySelectorAll(selector).forEach(field => {\n    const sibling = field.previousElementSibling;\n\n    if (!sibling || !hasClass(sibling, 'wysi-wrapper')) {\n      const instanceId = nextId++;\n\n      // Store the instance's options \n      instances[instanceId] = options;\n\n      // Cache the list of allowed tags in the instance\n      instances[instanceId].allowedTags = cloneObject(allowedTags);\n\n      // Wrapper\n      const wrapper = createElement('div', {\n        class: 'wysi-wrapper'\n      });\n\n      // Editable region\n      const editor = createElement('div', {\n        class: 'wysi-editor',\n        contenteditable: true,\n        role: 'textbox',\n        'aria-multiline': true,\n        'aria-label': getTextAreaLabel(field),\n        'data-wid': instanceId,\n        _innerHTML: prepareContent(field.value, allowedTags)\n      });      \n\n      // Insert the editable region in the document\n      appendChild(wrapper, toolbar.cloneNode(true));\n      appendChild(wrapper, editor);\n      field.before(wrapper);\n\n      // Apply configuration\n      configure(wrapper, options);\n\n    // Reconfigure instance\n    } else {\n      configure(sibling, options);\n    }\n  });\n}\n\n/**\n * Configure a WYSIWYG editor instance.\n * @param {object} instance The editor instance to configure.\n * @param {object} options The configuration options.\n */\nfunction configure(instance, options) {\n  if (typeof options !== 'object') {\n    return;\n  }\n\n  for (const key in options) {\n    switch (key) {\n      case 'darkMode':\n      case 'autoGrow':\n      case 'autoHide':\n        instance.classList.toggle(`wysi-${toLowerCase(key)}`, !!options[key]);\n        break;\n      case 'height':\n        const height = options.height;\n\n        if (!isNaN(height)) {\n          const region = instance.lastChild;\n\n          region.style.minHeight = `${height}px`;\n          region.style.maxHeight = `${height}px`;\n        }\n        break;\n    }\n  }\n}\n\n/**\n * Destroy a WYSIWYG editor instance.\n * @param {string} selector One or more selectors pointing to textarea fields.\n */\nfunction destroy(selector) {\n  querySelectorAll(selector).forEach(field => {\n    const sibling = field.previousElementSibling;\n\n    if (sibling && hasClass(sibling, 'wysi-wrapper')) {\n      const instanceId = getInstanceId(sibling.lastChild);\n\n      delete instances[instanceId];\n      sibling.remove();\n    }\n  });\n}\n\n/**\n * Clean up content before pasting it in an editable region.\n * @param {object} event The browser's paste event.\n */\nfunction cleanPastedContent(event) {\n  const { region } = findInstance(event.target);\n  const clipboardData = event.clipboardData;\n\n  if (region && clipboardData.types.includes('text/html')) {\n    const pasted = clipboardData.getData('text/html');\n    const instanceId = getInstanceId(region);\n    const allowedTags = instances[instanceId].allowedTags;\n    const content = prepareContent(pasted, allowedTags);\n\n    // Manually paste the cleaned content\n    execCommand('insertHTML', content);\n\n    // Prevent the default paste action\n    event.preventDefault();\n  }\n}\n\n\n/**\n * Bootstrap the WYSIWYG editor.\n */\nfunction bootstrap() {\n  // Configure editable regions\n  execCommand('styleWithCSS', false);\n  execCommand('enableObjectResizing', false);\n  execCommand('enableInlineTableEditing', false);\n  execCommand('defaultParagraphSeparator', 'p');\n\n  // Update the textarea value when the editor's content changes\n  addListener(document, 'input', '.wysi-editor', event => {\n    const editor = event.target;\n    const textarea = editor.parentNode.nextElementSibling;\n    const instanceId = getInstanceId(editor);\n    const onChange = instances[instanceId].onChange;\n    const content = editor.innerHTML;\n\n    textarea.value = content;\n    dispatchEvent(textarea, 'change');\n\n    if (onChange) {\n      onChange(content);\n    }\n  });\n\n  // Clean up pasted content\n  addListener(document, 'paste', cleanPastedContent);\n}\n\n// Expose the WYSIWYG editor to the global scope\nwindow.Wysi = (() => {\n  const methods = {\n    destroy: destroy\n  };\n\n  function Wysi(options) {\n    DOMReady(() => {\n      init(options || {});\n    });\n  }\n\n  for (const key in methods) {\n    Wysi[key] = (...args) => {\n      DOMReady(methods[key], args);\n    };\n  }\n\n  return Wysi;\n})();\n\n// Bootstrap the WYSIWYG editor when the DOM is ready\nDOMReady(bootstrap);\n"],"names":["settings","el","tools","label","items","darkMode","height","autoGrow","autoHide","allowedTags","br","attributes","isEmpty","customTags","instances","selectedClass","appendChild","parent","child","execCommand","command","value","document","hasClass","element","classes","classList","contains","getAttribute","attribute","querySelector","selector","context","querySelectorAll","removeChild","removeAttribute","setAttribute","stopImmediatePropagation","event","toLowerCase","str","formatBlock","format","currentSelection","toolset","tags","styles","paragraph","heading","action","quote","bold","alias","italic","underline","strike","alignLeft","alignCenter","alignRight","alignJustify","ul","extraTags","ol","indent","outdent","link","attributeLabels","hasForm","url","image","text","original","html","replace","hr","removeFormat","unlink","addListener","type","fn","addEventListener","target","matches","call","buildFragment","template","createElement","innerHTML","trim","content","cloneObject","obj","JSON","parse","stringify","tag","attributeName","substring","DOMReady","args","undefined","readyState","apply","execAction","region","options","tool","realAction","restoreSelection","focus","findInstance","currentNode","ancestor","toolbar","nodes","body","tagName","push","parentNode","children","getInstanceId","editor","getTextAreaLabel","textarea","labelElement","id","nodeName","filter","childNodes","n","nodeType","map","textContent","l","setSelection","setCurrentSelection","range","selection","getSelection","removeAllRanges","addRange","toggleButton","button","expanded","renderListBox","details","firstItem","listBox","class","concat","join","title","_innerHTML","renderListBoxItem","menu","role","tabindex","forEach","item","option","name","icon","openListBox","isOpen","nextElementSibling","selectedItem","firstElementChild","selectListBoxItem","previousElementSibling","closeListBox","activeListBox","closePopover","ignoreSelection","popover","NodeList","prototype","Array","key","preventDefault","documentElement","anchorNode","prev","next","lastElementChild","click","inputs","_findInstance","values","node","includes","selectContents","createRange","selectNodeContents","selectNode","rangeCount","getRangeAt","input","i","openPopover","selected","outerHTML","execPopoverAction","form","firstField","shiftKey","isSelectionInProgress","renderToolbar","translations","toolName","paragraphLabel","headingLabel","renderFormatTool","select","renderToolGroup","labels","fields","wrapper","field","span","_textContent","cancel","save","extraTool","renderPopover","renderTool","setTimeout","remove","add","instanceId","textAlign","style","charAt","toUpperCase","slice","allowedTag","svgElement","STYLE_ATTRIBUTE","prepareContent","container","fragment","filterContent","from","length","exclude","appendToPrev","childNode","replaceNode","wrapTextNodes","cleanContent","copyAttributes","newElement","replaceChild","filterStyles","allowedStyles","styleAttribute","split","prop","_ref","allowedAttributes","replaceWith","nextId","init","globalTranslations","window","wysiGlobalTranslations","Object","assign","aliasList","enableTags","custom","sibling","configure","contenteditable","cloneNode","before","instance","toggle","isNaN","lastChild","minHeight","maxHeight","destroy","cleanPastedContent","clipboardData","types","pasted","getData","Wysi","methods","_loop","_len","arguments","_key","onChange","dispatchEvent","Event","bubbles"],"mappings":"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"}